From: Brad Bell <bradbell@seanet.com>
Date: Thu, 27 Apr 2017 07:30:54 -0700
Subject: stable/20170000 branch: Fix problem with machine scaling of machine
 epsilon; see master b103d4dd...

---
 bin/batch_edit.sh    | 6 +++---
 test_more/div.cpp    | 6 +++---
 test_more/div_eq.cpp | 6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/bin/batch_edit.sh b/bin/batch_edit.sh
index 7c910bc..2436a65 100755
--- a/bin/batch_edit.sh
+++ b/bin/batch_edit.sh
@@ -1,7 +1,7 @@
 #! /bin/bash -e
 # $Id$
 # -----------------------------------------------------------------------------
-# CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-16 Bradley M. Bell
+# CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-17 Bradley M. Bell
 #
 # CppAD is distributed under multiple licenses. This distribution is under
 # the terms of the
@@ -17,8 +17,8 @@ move_list='
 move_sed='s|/local/|/core/|'
 #
 cat << EOF > junk.sed
-s|taion|ation|g
-s|aation|ation|g
+s|NearEqual(jfac\\*\\([^,]*\\), *value *, *jfac\\*eps99 *, *jfac\\*eps99)|NearEqual(\\1, value/jfac, eps99, eps99)|
+s|NearEqual(jfac\\*\\([^,]*\\), *value *, *eps99 *, *eps99)|NearEqual(\\1, value/jfac, eps99, eps99)|
 EOF
 # -----------------------------------------------------------------------------
 if [ $0 != "bin/batch_edit.sh" ]
diff --git a/test_more/div.cpp b/test_more/div.cpp
index 603a207..3ef43d1 100644
--- a/test_more/div.cpp
+++ b/test_more/div.cpp
@@ -1,6 +1,6 @@
 // $Id: div.cpp 3856 2016-12-21 05:51:22Z bradbell $
 /* --------------------------------------------------------------------------
-CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-16 Bradley M. Bell
+CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-17 Bradley M. Bell
 
 CppAD is distributed under multiple licenses. This distribution is under
 the terms of the
@@ -144,7 +144,7 @@ bool DivTestTwo(void)
 	{
 		jfac *= j;
 		w     = f.Forward(j, v);
-		ok &= NearEqual(jfac*w[0], value, eps99, eps99); // d^jz/du^j
+		ok &= NearEqual(w[0], value/jfac, eps99, eps99); // d^jz/du^j
 		v[0]  = 0.;
 		value = 0.;
 	}
@@ -157,7 +157,7 @@ bool DivTestTwo(void)
 	value = 6. / 4.;
 	for(j = 0; j < p; j++)
 	{
-		ok &= NearEqual(jfac*r[j], value, eps99, eps99); // d^jz/du^j
+		ok &= NearEqual(r[j], value/jfac, eps99, eps99); // d^jz/du^j
 		jfac *= (j + 1);
 		value = 0.;
 	}
diff --git a/test_more/div_eq.cpp b/test_more/div_eq.cpp
index dd9fd57..58dcb75 100644
--- a/test_more/div_eq.cpp
+++ b/test_more/div_eq.cpp
@@ -1,6 +1,6 @@
 // $Id: div_eq.cpp 3856 2016-12-21 05:51:22Z bradbell $
 /* --------------------------------------------------------------------------
-CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-16 Bradley M. Bell
+CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-17 Bradley M. Bell
 
 CppAD is distributed under multiple licenses. This distribution is under
 the terms of the
@@ -125,7 +125,7 @@ bool DivEqTestTwo(void)
 	for(j = 1; j < p; j++)
 	{	jfac *= j;
 		w     = f.Forward(j, v);
-		ok &= NearEqual(jfac*w[0], value, eps99, eps99); // d^jz/du^j
+		ok &= NearEqual(w[0], value/jfac, eps99, eps99); // d^jz/du^j
 		v[0]  = 0.;
 		value = 0.;
 	}
@@ -137,7 +137,7 @@ bool DivEqTestTwo(void)
 	jfac  = 1.;
 	value = 1./8.;
 	for(j = 0; j < p; j++)
-	{	ok &= NearEqual(jfac*r[j], value, eps99, eps99); // d^jz/du^j
+	{	ok &= NearEqual(r[j], value/jfac, eps99, eps99); // d^jz/du^j
 		jfac *= (j + 1);
 		value = 0.;
 	}
