Source: cppad
Section: devel
Priority: optional
Maintainer: Debian Science Team <debian-science-maintainers@alioth-lists.debian.net>
Uploaders: Miles Lubin <miles.lubin@gmail.com>,
           Barak A. Pearlmutter <bap@debian.org>
Build-Depends: debhelper-compat (= 13), cmake, libboost-all-dev
Standards-Version: 4.6.2
Rules-Requires-Root: no
Homepage: https://projects.coin-or.org/CppAD/
Vcs-Git: https://salsa.debian.org/science-team/cppad.git
Vcs-Browser: https://salsa.debian.org/science-team/cppad

Package: libcppad-lib1456.0
Section: libs
Architecture: any
Multi-Arch: same
Depends: ${shlibs:Depends}, ${misc:Depends}
Conflicts: cppad
Description: Automatic Differentiation of C++ algorithms, shared library
 CppAD is a package for automatic differentiation (AD) of algorithms
 written in C++.  Given appropriately written C++ code that computes a
 function, CppAD augments it to also compute derivative values.  The
 system uses templates, supports forward and reverse accumulation
 modes, and allows nested derivatives.
 .
 This package contains runtime support, including shared libraries.

Package: libcppad-dev
Section: libdevel
Architecture: any
Multi-Arch: same
Depends: ${shlibs:Depends}, ${misc:Depends}, libcppad-lib1456.0 (= ${binary:Version})
Suggests: libcppad-doc
Conflicts: cppad
Provides: cppad
Replaces: cppad
Description: Automatic Differentiation of C++ algorithms, dev files
 CppAD is a package for automatic differentiation (AD) of algorithms
 written in C++.  Given appropriately written C++ code that computes a
 function, CppAD augments it to also compute derivative values.  The
 system uses templates, supports forward and reverse accumulation
 modes, and allows nested derivatives.
 .
 This package contains development file: C++ headers and development
 libraries.

Package: libcppad-doc
Section: doc
Architecture: all
Multi-Arch: foreign
Depends: ${misc:Depends}
Conflicts: cppad
Description: Automatic Differentiation of C++ algorithms, documentation
 CppAD is a package for automatic differentiation (AD) of algorithms
 written in C++.  Given appropriately written C++ code that computes a
 function, CppAD augments it to also compute derivative values.  The
 system uses templates, supports forward and reverse accumulation
 modes, and allows nested derivatives.
 .
 This package contains documentation.
 .
 (Or did, and would if the documentation source format hadn't changed
 to xrst which Debian cannot yet process, and will again at some point
 in the future. For now, see https://coin-or.github.io/CppAD/doc.)
