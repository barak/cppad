<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Source: LuFactor</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Source: LuFactor"/>
<meta name="keywords" id="keywords" content=" source: lufactor source "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_lu_factor.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="lu_factor.cpp.xml" target="_top">Prev</a>
</td><td><a href="luinvert.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>LuDetAndSolve</option>
<option>LuFactor</option>
<option>lu_factor.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>LuDetAndSolve-&gt;</option>
<option>LuSolve</option>
<option>LuFactor</option>
<option>LuInvert</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>LuFactor-&gt;</option>
<option>lu_factor.cpp</option>
<option>lu_factor.hpp</option>
</select>
</td>
<td>lu_factor.hpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>Source: LuFactor</big></big></b></center>
<code><font color="blue"># ifndef CPPAD_LU_FACTOR_HPP
<code><span style='white-space: nowrap'><br/>
</span></code># define CPPAD_LU_FACTOR_HPP

<pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;complex&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;vector&gt;</span>

<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/core/cppad_assert.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_simple_vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_numeric_type.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> CppAD <span style="color: #FF0000">{</span> <span style="font-style: italic"><span style="color: #9A1900">// BEGIN CppAD namespace</span></span>

<span style="font-style: italic"><span style="color: #9A1900">// AbsGeq</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">typename</span></span> <span style="color: #008080">Float</span><span style="color: #990000">&gt;</span>
<span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">AbsGeq</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Float</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Float</span> <span style="color: #990000">&amp;</span>y<span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #008080">Float</span> xabs <span style="color: #990000">=</span> x<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> xabs <span style="color: #990000">&lt;=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">)</span> <span style="color: #990000">)</span>
          xabs <span style="color: #990000">=</span> <span style="color: #990000">-</span> xabs<span style="color: #990000">;</span>
     <span style="color: #008080">Float</span> yabs <span style="color: #990000">=</span> y<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> yabs <span style="color: #990000">&lt;=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">)</span> <span style="color: #990000">)</span>
          yabs <span style="color: #990000">=</span> <span style="color: #990000">-</span> yabs<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> xabs <span style="color: #990000">&gt;=</span> yabs<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">AbsGeq</span></span><span style="color: #990000">(</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> std<span style="color: #990000">::</span><span style="color: #008080">complex&lt;double&gt;</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> std<span style="color: #990000">::</span><span style="color: #008080">complex&lt;double&gt;</span> <span style="color: #990000">&amp;</span>y<span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">double</span> xsq <span style="color: #990000">=</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">real</span></span><span style="color: #990000">()</span> <span style="color: #990000">*</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">real</span></span><span style="color: #990000">()</span> <span style="color: #990000">+</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">imag</span></span><span style="color: #990000">()</span> <span style="color: #990000">*</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">imag</span></span><span style="color: #990000">();</span>
     <span style="color: #009900">double</span> ysq <span style="color: #990000">=</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">real</span></span><span style="color: #990000">()</span> <span style="color: #990000">*</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">real</span></span><span style="color: #990000">()</span> <span style="color: #990000">+</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">imag</span></span><span style="color: #990000">()</span> <span style="color: #990000">*</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">imag</span></span><span style="color: #990000">();</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> xsq <span style="color: #990000">&gt;=</span> ysq<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">AbsGeq</span></span><span style="color: #990000">(</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> std<span style="color: #990000">::</span><span style="color: #008080">complex&lt;float&gt;</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> std<span style="color: #990000">::</span><span style="color: #008080">complex&lt;float&gt;</span> <span style="color: #990000">&amp;</span>y<span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">float</span> xsq <span style="color: #990000">=</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">real</span></span><span style="color: #990000">()</span> <span style="color: #990000">*</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">real</span></span><span style="color: #990000">()</span> <span style="color: #990000">+</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">imag</span></span><span style="color: #990000">()</span> <span style="color: #990000">*</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">imag</span></span><span style="color: #990000">();</span>
     <span style="color: #009900">float</span> ysq <span style="color: #990000">=</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">real</span></span><span style="color: #990000">()</span> <span style="color: #990000">*</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">real</span></span><span style="color: #990000">()</span> <span style="color: #990000">+</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">imag</span></span><span style="color: #990000">()</span> <span style="color: #990000">*</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">imag</span></span><span style="color: #990000">();</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> xsq <span style="color: #990000">&gt;=</span> ysq<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>

<span style="font-style: italic"><span style="color: #9A1900">// Lines that are different from code in cppad/core/lu_ratio.hpp end with //</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">SizeVector</span><span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">FloatVector</span><span style="color: #990000">&gt;</span>                          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
<span style="color: #009900">int</span> <span style="font-weight: bold"><span style="color: #000000">LuFactor</span></span><span style="color: #990000">(</span><span style="color: #008080">SizeVector</span> <span style="color: #990000">&amp;</span>ip<span style="color: #990000">,</span> <span style="color: #008080">SizeVector</span> <span style="color: #990000">&amp;</span>jp<span style="color: #990000">,</span> <span style="color: #008080">FloatVector</span> <span style="color: #990000">&amp;</span>LU<span style="color: #990000">)</span>           <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
<span style="color: #FF0000">{</span>
     <span style="font-style: italic"><span style="color: #9A1900">// type of the elements of LU                                   //</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">typedef</span></span> <span style="font-weight: bold"><span style="color: #0000FF">typename</span></span> <span style="color: #008080">FloatVector</span><span style="color: #990000">::</span><span style="color: #008080">value_type</span> Float<span style="color: #990000">;</span>                 <span style="font-style: italic"><span style="color: #9A1900">//</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// check numeric type specifications</span></span>
     CheckNumericType<span style="color: #990000">&lt;</span>Float<span style="color: #990000">&gt;();</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check simple vector class specifications</span></span>
     CheckSimpleVector<span style="color: #990000">&lt;</span>Float<span style="color: #990000">,</span> FloatVector<span style="color: #990000">&gt;();</span>
     CheckSimpleVector<span style="color: #990000">&lt;</span>size_t<span style="color: #990000">,</span> SizeVector<span style="color: #990000">&gt;();</span>

     <span style="color: #008080">size_t</span>  i<span style="color: #990000">,</span> j<span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// some temporary indices</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Float</span> <span style="font-weight: bold"><span style="color: #000000">zero</span></span><span style="color: #990000">(</span> <span style="color: #993399">0</span> <span style="color: #990000">);</span> <span style="font-style: italic"><span style="color: #9A1900">// the value zero as a Float object</span></span>
     <span style="color: #008080">size_t</span>  imax<span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// row index of maximum element</span></span>
     <span style="color: #008080">size_t</span>  jmax<span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// column indx of maximum element</span></span>
     <span style="color: #008080">Float</span>    emax<span style="color: #990000">;</span>         <span style="font-style: italic"><span style="color: #9A1900">// maximum absolute value</span></span>
     <span style="color: #008080">size_t</span>  p<span style="color: #990000">;</span>             <span style="font-style: italic"><span style="color: #9A1900">// count pivots</span></span>
     <span style="color: #009900">int</span>     sign<span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// sign of the permutation</span></span>
     <span style="color: #008080">Float</span>   etmp<span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// temporary element</span></span>
     <span style="color: #008080">Float</span>   pivot<span style="color: #990000">;</span>         <span style="font-style: italic"><span style="color: #9A1900">// pivot element</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------</span></span>
     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> ip<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>jp<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> n<span style="color: #990000">,</span>
          <span style="color: #FF0000">"Error in LuFactor: jp must have size equal to n"</span>
     <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>LU<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> n <span style="color: #990000">*</span> n<span style="color: #990000">,</span>
          <span style="color: #FF0000">"Error in LuFactor: LU must have size equal to n * m"</span>
     <span style="color: #990000">);</span>
     <span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// initialize row and column order in matrix not yet pivoted</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> i<span style="color: #990000">;</span>
          jp<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> i<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// initialize the sign of the permutation</span></span>
     sign <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// ---------------------------------------------------------</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// Reduce the matrix P to L * U using n pivots</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>p <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> p <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> p<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// determine row and column corresponding to element of</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// maximum absolute value in remaining part of P</span></span>
          imax <span style="color: #990000">=</span> jmax <span style="color: #990000">=</span> n<span style="color: #990000">;</span>
          emax <span style="color: #990000">=</span> zero<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> p<span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> p<span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span>
                         <span style="color: #990000">(</span>ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">&lt;</span> n<span style="color: #990000">)</span> <span style="color: #990000">&amp;</span> <span style="color: #990000">(</span>jp<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">&lt;</span> n<span style="color: #990000">)</span>
                    <span style="color: #990000">);</span>
                    etmp <span style="color: #990000">=</span> LU<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">];</span>

                    <span style="font-style: italic"><span style="color: #9A1900">// check if maximum absolute value so far</span></span>
                    <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">AbsGeq</span></span> <span style="color: #990000">(</span>etmp<span style="color: #990000">,</span> emax<span style="color: #990000">)</span> <span style="color: #990000">)</span>
                    <span style="color: #FF0000">{</span>     imax <span style="color: #990000">=</span> i<span style="color: #990000">;</span>
                         jmax <span style="color: #990000">=</span> j<span style="color: #990000">;</span>
                         emax <span style="color: #990000">=</span> etmp<span style="color: #990000">;</span>
                    <span style="color: #FF0000">}</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          <span style="color: #990000">(</span>imax <span style="color: #990000">&lt;</span> n<span style="color: #990000">)</span> <span style="color: #990000">&amp;</span> <span style="color: #990000">(</span>jmax <span style="color: #990000">&lt;</span> n<span style="color: #990000">)</span> <span style="color: #990000">,</span>
          <span style="color: #FF0000">"LuFactor can't determine an element with "</span>
          <span style="color: #FF0000">"maximum absolute value.</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span>
          <span style="color: #FF0000">"Perhaps original matrix contains not a number or infinity.</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span>
          <span style="color: #FF0000">"Perhaps your specialization of AbsGeq is not correct."</span>
          <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> imax <span style="color: #990000">!=</span> p <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// switch rows so max absolute element is in row p</span></span>
               i        <span style="color: #990000">=</span> ip<span style="color: #990000">[</span>p<span style="color: #990000">];</span>
               ip<span style="color: #990000">[</span>p<span style="color: #990000">]</span>    <span style="color: #990000">=</span> ip<span style="color: #990000">[</span>imax<span style="color: #990000">];</span>
               ip<span style="color: #990000">[</span>imax<span style="color: #990000">]</span> <span style="color: #990000">=</span> i<span style="color: #990000">;</span>
               sign     <span style="color: #990000">=</span> <span style="color: #990000">-</span>sign<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> jmax <span style="color: #990000">!=</span> p <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// switch columns so max absolute element is in column p</span></span>
               j        <span style="color: #990000">=</span> jp<span style="color: #990000">[</span>p<span style="color: #990000">];</span>
               jp<span style="color: #990000">[</span>p<span style="color: #990000">]</span>    <span style="color: #990000">=</span> jp<span style="color: #990000">[</span>jmax<span style="color: #990000">];</span>
               jp<span style="color: #990000">[</span>jmax<span style="color: #990000">]</span> <span style="color: #990000">=</span> j<span style="color: #990000">;</span>
               sign     <span style="color: #990000">=</span> <span style="color: #990000">-</span>sign<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// pivot using the max absolute element</span></span>
          pivot   <span style="color: #990000">=</span> LU<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>p<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>p<span style="color: #990000">]</span> <span style="color: #990000">];</span>

          <span style="font-style: italic"><span style="color: #9A1900">// check for determinant equal to zero</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> pivot <span style="color: #990000">==</span> zero <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// abort the mission</span></span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span>   <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>

          <span style="font-style: italic"><span style="color: #9A1900">// Reduce U by the elementary transformations that maps</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// LU( ip[p], jp[p] ) to one.  Only need transform elements</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// above the diagonal in U and LU( ip[p] , jp[p] ) is</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// corresponding value below diagonal in L.</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> p<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               LU<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>p<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">/=</span> pivot<span style="color: #990000">;</span>

          <span style="font-style: italic"><span style="color: #9A1900">// Reduce U by the elementary transformations that maps</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// LU( ip[i], jp[p] ) to zero. Only need transform elements</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// above the diagonal in U and LU( ip[i], jp[p] ) is</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// corresponding value below diagonal in L.</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> p<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++</span> <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     etmp <span style="color: #990000">=</span> LU<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>p<span style="color: #990000">]</span> <span style="color: #990000">];</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> p<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               <span style="color: #FF0000">{</span>     LU<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">-=</span>
                         etmp <span style="color: #990000">*</span> LU<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>p<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">];</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> sign<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span> <span style="font-style: italic"><span style="color: #9A1900">// END CppAD namespace</span></span></tt></pre>
# endif
</font></code>


<hr/>Input File: omh/lu_factor_hpp.omh

</body>
</html>
