<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>abs_normal: Minimize a Linear Abs-normal Approximation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="abs_normal: Minimize a Linear Abs-normal Approximation"/>
<meta name="keywords" id="keywords" content=" abs_normal: minimize linear abs-normal approximation syntax prototype source purpose dblvector sizevector f level n m s g g_hat g_jac hessian bound epsilon maxitr delta_x method sigma cutting planes iteration example "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_abs_min_quad_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="qp_box.hpp.xml" target="_top">Prev</a>
</td><td><a href="abs_min_quad.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>abs_normal</option>
<option>abs_min_quad</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>ADFun-&gt;</option>
<option>record_adfun</option>
<option>drivers</option>
<option>Forward</option>
<option>Reverse</option>
<option>sparsity_pattern</option>
<option>sparse_derivative</option>
<option>optimize</option>
<option>abs_normal</option>
<option>FunCheck</option>
<option>check_for_nan</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>abs_normal-&gt;</option>
<option>abs_normal_fun</option>
<option>abs_print_mat</option>
<option>abs_eval</option>
<option>simplex_method</option>
<option>lp_box</option>
<option>abs_min_linear</option>
<option>min_nso_linear</option>
<option>qp_interior</option>
<option>qp_box</option>
<option>abs_min_quad</option>
<option>min_nso_quad</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>abs_min_quad-&gt;</option>
<option>abs_min_quad.cpp</option>
<option>abs_min_quad.hpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Prototype</option>
<option>Source</option>
<option>Purpose</option>
<option>DblVector</option>
<option>SizeVector</option>
<option>f</option>
<option>level</option>
<option>n</option>
<option>m</option>
<option>s</option>
<option>g</option>
<option>g_hat</option>
<option>g_jac</option>
<option>hessian</option>
<option>bound</option>
<option>epsilon</option>
<option>maxitr</option>
<option>delta_x</option>
<option>Method</option>
<option>---..sigma</option>
<option>---..Cutting Planes</option>
<option>---..Iteration</option>
<option>Example</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>abs_normal: Minimize a Linear Abs-normal Approximation</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>

<code><i><font color="black"><span style='white-space: nowrap'>ok</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;abs_min_quad(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>level</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>s</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>g_hat</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>g_jac</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>hessian</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>bound</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>epsilon</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>maxitr</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>delta_x</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>


<br/>
<br/>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">DblVector</span><span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">SizeVector</span><span style="color: #990000">&gt;</span>
<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">abs_min_quad</span></span><span style="color: #990000">(</span>
     <span style="color: #008080">size_t</span>            level   <span style="color: #990000">,</span>
     <span style="color: #008080">size_t</span>            n       <span style="color: #990000">,</span>
     <span style="color: #008080">size_t</span>            m       <span style="color: #990000">,</span>
     <span style="color: #008080">size_t</span>            s       <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> DblVector<span style="color: #990000">&amp;</span>  g_hat   <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> DblVector<span style="color: #990000">&amp;</span>  g_jac   <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> DblVector<span style="color: #990000">&amp;</span>  hessian <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> DblVector<span style="color: #990000">&amp;</span>  bound   <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> DblVector<span style="color: #990000">&amp;</span>  epsilon <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> SizeVector<span style="color: #990000">&amp;</span> maxitr  <span style="color: #990000">,</span>
     DblVector<span style="color: #990000">&amp;</span>        delta_x <span style="color: #990000">)</span></tt></pre>
<br/>
<b><big><a name="Source" id="Source">Source</a></big></b>
<br/>
This following is a link to the source code for this example:
<a href="abs_min_quad.hpp.xml" target="_top"><span style='white-space: nowrap'>abs_min_quad.hpp</span></a>
.

<br/>
<br/>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br/>
We are given a point 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

 and
use the notation 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mover accent='false'><mrow><mi mathvariant='italic'>f</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 for the abs-normal
<a href="abs_normal_fun.xml#Abs-normal Approximation.Approximating f(x)" target="_top"><span style='white-space: nowrap'>approximation&#xA0;for&#xA0;f(x)</span></a>

near 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
</mrow></math>

.
We are also given a vector 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">&#x02208;</mo>
<msubsup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>n</mi>
</msubsup>
</mrow></math>


and a positive definite matrix 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>H</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mrow><mi mathvariant='italic'>n</mi>
<mo stretchy="false">&#x000D7;</mo>
<mi mathvariant='italic'>n</mi>
</mrow>
</msup>
</mrow></math>

.
This routine solves the problem

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>minimize</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mi mathvariant='normal'>&#x00394;</mi>
<msup><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>T</mi>
</msup>
<mi mathvariant='italic'>H</mi>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">/</mo>
<mn>2</mn>
<mo stretchy="false">+</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>f</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mo stretchy="false">(</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
<mo stretchy="false">+</mo>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>w</mi>
<mo stretchy="false">.</mo>
<mi mathvariant='normal'>r</mi>
<mo stretchy="false">.</mo>
<mi mathvariant='normal'>t</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mtd></mtr><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>subject</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>to</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mo stretchy="false">|</mo>
<mi mathvariant='normal'>&#x00394;</mi>
<msub><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>j</mi>
</msub>
<mo stretchy="false">|</mo>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>b</mi>
<mi mathvariant='italic'>j</mi>
</msub>
</mtd><mtd columnalign="left" >
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>n</mi>
<mn>-1</mn>
</mtd></mtr></mtable>
</mrow></math>

<br/>
<b><big><a name="DblVector" id="DblVector">DblVector</a></big></b>
<br/>
is a <a href="simplevector.xml" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 class with elements of type <code><font color="blue">double</font></code>.

<br/>
<br/>
<b><big><a name="SizeVector" id="SizeVector">SizeVector</a></big></b>
<br/>
is a <a href="simplevector.xml" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 class with elements of type <code><font color="blue">size_t</font></code>.

<br/>
<br/>
<b><big><a name="f" id="f">f</a></big></b>
<br/>
We use the notation 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 for the original function; see
<a href="abs_normal_fun.xml#f" target="_top"><span style='white-space: nowrap'>f</span></a>
.

<br/>
<br/>
<b><big><a name="level" id="level">level</a></big></b>
<br/>
This value is less that or equal 3.
If 
<code><i><font color="black"><span style='white-space: nowrap'>level</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;==&#xA0;0</span></font></code>
,
no tracing of the optimization is printed.
If 
<code><i><font color="black"><span style='white-space: nowrap'>level</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&gt;=&#xA0;1</span></font></code>
,
a trace of each iteration of <code><font color="blue">abs_min_quad</font></code> is printed.
If 
<code><i><font color="black"><span style='white-space: nowrap'>level</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&gt;=&#xA0;2</span></font></code>
,
a trace of the <a href="qp_box.xml" target="_top"><span style='white-space: nowrap'>qp_box</span></a>
 sub-problem is printed.
If 
<code><i><font color="black"><span style='white-space: nowrap'>level</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;&gt;=&#xA0;3</span></font></code>
,
a trace of the <a href="qp_interior.xml" target="_top"><span style='white-space: nowrap'>qp_interior</span></a>
 sub-problem is printed.

<br/>
<br/>
<b><big><a name="n" id="n">n</a></big></b>
<br/>
This is the dimension of the domain space for 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
; see
<a href="abs_normal_fun.xml#f.n" target="_top"><span style='white-space: nowrap'>n</span></a>
.

<br/>
<br/>
<b><big><a name="m" id="m">m</a></big></b>
<br/>
This is the dimension of the range space for 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
; see
<a href="abs_normal_fun.xml#f.m" target="_top"><span style='white-space: nowrap'>m</span></a>
. This must be one so that 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>f</mi>
</mrow></math>


is an objective function.

<br/>
<br/>
<b><big><a name="s" id="s">s</a></big></b>
<br/>
This is the number of absolute value terms in 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
; see
<a href="abs_normal_fun.xml#f.s" target="_top"><span style='white-space: nowrap'>s</span></a>
.

<br/>
<br/>
<b><big><a name="g" id="g">g</a></big></b>
<br/>
We use the notation 
<code><i><font color="black"><span style='white-space: nowrap'>g</span></font></i></code>
 for the abs-normal representation of 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
;
see <a href="abs_normal_fun.xml#g" target="_top"><span style='white-space: nowrap'>g</span></a>
.

<br/>
<br/>
<b><big><a name="g_hat" id="g_hat">g_hat</a></big></b>
<br/>
This vector has size 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>s</span></font></i></code>
 and is the value of

<code><i><font color="black"><span style='white-space: nowrap'>g(x,&#xA0;u)</span></font></i></code>
 at 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">=</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">(</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
<mo stretchy="false">)</mo>
</mrow></math>

.

<br/>
<br/>
<b><big><a name="g_jac" id="g_jac">g_jac</a></big></b>
<br/>
This vector has size 
<code><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>s</span></font></i><font color="blue"><span style='white-space: nowrap'>)&#xA0;*&#xA0;(</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>s</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>
 and is the Jacobian of

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>g</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 at 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">=</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
</mrow></math>

 and 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>u</mi>
<mo stretchy="false">=</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">(</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
<mo stretchy="false">)</mo>
</mrow></math>

.

<br/>
<br/>
<b><big><a name="hessian" id="hessian">hessian</a></big></b>
<br/>
This vector has size 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;*&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
.
It is a <a href="glossary.xml#Row-major Representation" target="_top"><span style='white-space: nowrap'>row-major</span></a>
 representation
of the matrix 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>H</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mrow><mi mathvariant='italic'>n</mi>
<mo stretchy="false">&#x000D7;</mo>
<mi mathvariant='italic'>n</mi>
</mrow>
</msup>
</mrow></math>

.

<br/>
<br/>
<b><big><a name="bound" id="bound">bound</a></big></b>
<br/>
This vector has size 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 and is the vector 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">&#x02208;</mo>
<msup><mrow><mstyle mathvariant='bold'><mi mathvariant='bold'>R</mi>
</mstyle></mrow>
<mi mathvariant='italic'>n</mi>
</msup>
</mrow></math>

.
The trust region is defined as the set of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mrow></math>

 such that

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mo stretchy="false">|</mo>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">|</mo>
<mo stretchy="false">&#x02264;</mo>
<msub><mi mathvariant='italic'>b</mi>
<mi mathvariant='italic'>j</mi>
</msub>
</mrow></math>

for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>n</mi>
<mn>-1</mn>
</mrow></math>

.

<br/>
<br/>
<b><big><a name="epsilon" id="epsilon">epsilon</a></big></b>
<br/>
The value 
<code><i><font color="black"><span style='white-space: nowrap'>epsilon</span></font></i><font color="blue"><span style='white-space: nowrap'>[0]</span></font></code>
 is convergence criteria in terms
of the infinity norm of the difference of 
<code><i><font color="black"><span style='white-space: nowrap'>delta_x</span></font></i></code>

between iterations.
The value 
<code><i><font color="black"><span style='white-space: nowrap'>epsilon</span></font></i><font color="blue"><span style='white-space: nowrap'>[1]</span></font></code>
 is convergence criteria in terms
of the derivative of the objective; i.e.

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<msup><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>T</mi>
</msup>
<mi mathvariant='italic'>H</mi>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">/</mo>
<mn>2</mn>
<mo stretchy="false">+</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>f</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mo stretchy="false">(</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
<mo stretchy="false">+</mo>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mrow></math>

<br/>
<b><big><a name="maxitr" id="maxitr">maxitr</a></big></b>
<br/>
This is a vector with size 2.
The value 
<code><i><font color="black"><span style='white-space: nowrap'>maxitr</span></font></i><font color="blue"><span style='white-space: nowrap'>[0]</span></font></code>
 is the maximum number of
<code><font color="blue">abs_min_quad</font></code> iterations to try before giving up on convergence.
The value 
<code><i><font color="black"><span style='white-space: nowrap'>maxitr</span></font></i><font color="blue"><span style='white-space: nowrap'>[1]</span></font></code>
 is the maximum number of iterations in
the <a href="qp_interior.xml#maxitr" target="_top"><span style='white-space: nowrap'>qp_interior</span></a>
 sub-problems.

<br/>
<br/>
<b><big><a name="delta_x" id="delta_x">delta_x</a></big></b>
<br/>
This vector 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mrow></math>

 has size 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
.
The input value of its elements does not matter.
Upon return,
the approximate minimizer of the objective with respect to the trust region.

<br/>
<br/>
<b><big><a name="Method" id="Method">Method</a></big></b>


<br/>
<br/>
<b><a name="Method.sigma" id="Method.sigma">sigma</a></b>
<br/>
We use the notation

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>sign</mi>
</mstyle></mrow>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>z</mi>
<mo stretchy="false">[</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>a</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
<mo stretchy="false">]</mo>
<mo stretchy="false">)</mo>
</mrow></math>

where
<a href="abs_normal_fun.xml#a.a(x)" target="_top"><span style='white-space: nowrap'>a(x)</span></a>
 and
<a href="abs_normal_fun.xml#g.z(x, u)" target="_top"><span style='white-space: nowrap'>z(x,&#xA0;u)</span></a>

are as defined in the abs-normal representation of 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>f</mi>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mrow></math>

.

<br/>
<br/>
<b><a name="Method.Cutting Planes" id="Method.Cutting Planes">Cutting Planes</a></b>
<br/>
At each iteration,
we are given affine functions 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>p</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mrow></math>


such that 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>p</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">)</mo>
<mo stretchy="false">=</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>f</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">)</mo>
</mrow></math>

  and

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msubsup><mi mathvariant='italic'>p</mi>
<mi mathvariant='italic'>k</mi>
<mrow><mo stretchy="false">(</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
</mrow>
</msubsup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">)</mo>
</mrow></math>

 is the derivative 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msup><mover accent='false'><mrow><mi mathvariant='italic'>f</mi>
</mrow>
<mo stretchy='false'>&#x002DC;</mo></mover>
<mrow><mo stretchy="false">(</mo>
<mn>1</mn>
<mo stretchy="false">)</mo>
</mrow>
</msup>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">)</mo>
</mrow></math>


corresponding to 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='normal'>&#x003C3;</mi>
<mo stretchy="false">(</mo>
<msub><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">)</mo>
</mrow></math>

.

<br/>
<br/>
<b><a name="Method.Iteration" id="Method.Iteration">Iteration</a></b>
<br/>
At iteration 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>k</mi>
</mrow></math>

, we solve the problem

<math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mrow>
<mtable rowalign="center" ><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>minimize</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mi mathvariant='normal'>&#x00394;</mi>
<msup><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>T</mi>
</msup>
<mi mathvariant='italic'>H</mi>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">/</mo>
<mn>2</mn>
<mo stretchy="false">+</mo>
<mi>max</mi>
<mo stretchy="false">{</mo>
<msub><mi mathvariant='italic'>p</mi>
<mi mathvariant='italic'>k</mi>
</msub>
<mo stretchy="false">(</mo>
<mover accent='false'><mrow><mi mathvariant='italic'>x</mi>
</mrow>
<mo stretchy='false'>&#x0005E;</mo></mover>
<mo stretchy="false">+</mo>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
<mspace width='.3em'/>
<mo stretchy="false">:</mo>
<mspace width='.3em'/>
<mi mathvariant='italic'>k</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>K</mi>
<mn>-1</mn>
<mo stretchy="false">}</mo>
</mtd><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>w</mi>
<mo stretchy="false">.</mo>
<mi mathvariant='normal'>r</mi>
<mo stretchy="false">.</mo>
<mi mathvariant='normal'>t</mi>
</mstyle></mrow>
<mspace width='.3em'/>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
</mtd></mtr><mtr><mtd columnalign="left" >
<mrow><mstyle mathvariant='normal'><mi mathvariant='normal'>subject</mi>
<mspace width='.3em'/>
<mi mathvariant='normal'>to</mi>
</mstyle></mrow>
</mtd><mtd columnalign="left" >
<mo stretchy="false">-</mo>
<mi mathvariant='italic'>b</mi>
<mo stretchy="false">&#x02264;</mo>
<mi mathvariant='normal'>&#x00394;</mi>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">&#x02264;</mo>
<mo stretchy="false">+</mo>
<mi mathvariant='italic'>b</mi>
</mtd></mtr></mtable>
</mrow></math>

The solution is the new point 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>K</mi>
</msub>
</mrow></math>


at which the new affine approximation

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>p</mi>
<mi mathvariant='italic'>K</mi>
</msub>
<mo stretchy="false">(</mo>
<mi mathvariant='italic'>x</mi>
<mo stretchy="false">)</mo>
</mrow></math>

 is constructed.
This process is iterated until the difference

<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<msub><mi mathvariant='italic'>x</mi>
<mi mathvariant='italic'>K</mi>
</msub>
<mo stretchy="false">-</mo>
<msub><mi mathvariant='italic'>x</mi>
<mrow><mi mathvariant='italic'>K</mi>
<mn>-1</mn>
</mrow>
</msub>
</mrow></math>

 is small enough.



<br/>
<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
The file <a href="abs_min_quad.cpp.xml" target="_top"><span style='white-space: nowrap'>abs_min_quad.cpp</span></a>
 contains an example and test of
<code><font color="blue">abs_min_quad</font></code>.
It returns true if the test passes and false otherwise.


<hr/>Input File: example/abs_normal/abs_min_quad.hpp

</body>
</html>
