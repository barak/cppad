<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>LuRatio: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="LuRatio: Example and Test"/>
<meta name="keywords" id="keywords" content=" luratio: example test Luratio "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_lu_ratio.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="luratio.xml" target="_top">Prev</a>
</td><td><a href="addon.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>numeric_ad</option>
<option>LuRatio</option>
<option>lu_ratio.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>Appendix-&gt;</option>
<option>Faq</option>
<option>directory</option>
<option>Theory</option>
<option>glossary</option>
<option>Bib</option>
<option>wish_list</option>
<option>whats_new</option>
<option>deprecated</option>
<option>compare_c</option>
<option>numeric_ad</option>
<option>addon</option>
<option>License</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>numeric_ad-&gt;</option>
<option>BenderQuad</option>
<option>opt_val_hes</option>
<option>LuRatio</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>LuRatio-&gt;</option>
<option>lu_ratio.cpp</option>
</select>
</td>
<td>lu_ratio.cpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>LuRatio: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cstdlib&gt;</span>               <span style="font-style: italic"><span style="color: #9A1900">// for rand function</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cassert&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/cppad.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span> <span style="font-style: italic"><span style="color: #9A1900">// Begin empty namespace</span></span>

CppAD<span style="color: #990000">::</span><span style="color: #008080">ADFun&lt;double&gt;</span> <span style="color: #990000">*</span><span style="font-weight: bold"><span style="color: #000000">NewFactor</span></span><span style="color: #990000">(</span>
     <span style="color: #008080">size_t</span>                           n <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span> <span style="color: #990000">&amp;</span>x <span style="color: #990000">,</span>
     <span style="color: #009900">bool</span>                           <span style="color: #990000">&amp;</span>ok <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>size_t<span style="color: #990000">)</span>      <span style="color: #990000">&amp;</span>ip <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>size_t<span style="color: #990000">)</span>      <span style="color: #990000">&amp;</span>jp <span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>AD<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>ADFun<span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> i<span style="color: #990000">,</span> j<span style="color: #990000">,</span> k<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// values for independent and dependent variables</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>AD<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;)</span> <span style="font-weight: bold"><span style="color: #000000">Y</span></span><span style="color: #990000">(</span>n<span style="color: #990000">*</span>n<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">X</span></span><span style="color: #990000">(</span>n<span style="color: #990000">*</span>n<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// values for the LU factor</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>AD<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;)</span> <span style="font-weight: bold"><span style="color: #000000">LU</span></span><span style="color: #990000">(</span>n<span style="color: #990000">*</span>n<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// record the LU factorization corresponding to this value of x</span></span>
     <span style="color: #008080">AD&lt;double&gt;</span> Ratio<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> n<span style="color: #990000">*</span>n<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
          X<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">=</span> x<span style="color: #990000">[</span>k<span style="color: #990000">];</span>
     <span style="font-weight: bold"><span style="color: #000000">Independent</span></span><span style="color: #990000">(</span>X<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> n<span style="color: #990000">*</span>n<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
          LU<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">=</span> X<span style="color: #990000">[</span>k<span style="color: #990000">];</span>
     CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">LuRatio</span></span><span style="color: #990000">(</span>ip<span style="color: #990000">,</span> jp<span style="color: #990000">,</span> LU<span style="color: #990000">,</span> Ratio<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> n<span style="color: #990000">*</span>n<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
          Y<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">=</span> LU<span style="color: #990000">[</span>k<span style="color: #990000">];</span>
     Y<span style="color: #990000">[</span>n<span style="color: #990000">*</span>n<span style="color: #990000">]</span> <span style="color: #990000">=</span> Ratio<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// use a function pointer so can return ADFun object</span></span>
     <span style="color: #008080">ADFun&lt;double&gt;</span> <span style="color: #990000">*</span>FunPtr <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">new</span></span> ADFun<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;(</span>X<span style="color: #990000">,</span> Y<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check value of ratio during recording</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>Ratio <span style="color: #990000">==</span> <span style="color: #993399">1</span><span style="color: #990000">.);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check that ip and jp are permutations of the indices 0, ... , n-1</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">&lt;</span> n<span style="color: #990000">);</span>
          ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>jp<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">&lt;</span> n<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> i <span style="color: #990000">!=</span> j <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">!=</span> ip<span style="color: #990000">[</span>j<span style="color: #990000">]);</span>
                    ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>jp<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">!=</span> jp<span style="color: #990000">[</span>j<span style="color: #990000">]);</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> FunPtr<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">CheckLuFactor</span></span><span style="color: #990000">(</span>
     <span style="color: #008080">size_t</span>                           n  <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span> <span style="color: #990000">&amp;</span>x  <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span> <span style="color: #990000">&amp;</span>y  <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>size_t<span style="color: #990000">)</span> <span style="color: #990000">&amp;</span>ip <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>size_t<span style="color: #990000">)</span> <span style="color: #990000">&amp;</span>jp <span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span>     ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>

     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>NearEqual<span style="color: #990000">;</span>
     <span style="color: #009900">double</span> eps99 <span style="color: #990000">=</span> <span style="color: #993399">99.0</span> <span style="color: #990000">*</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">epsilon</span></span><span style="color: #990000">();</span>

     <span style="color: #009900">double</span>  sum<span style="color: #990000">;</span>                          <span style="font-style: italic"><span style="color: #9A1900">// element of L * U</span></span>
     <span style="color: #009900">double</span>  pij<span style="color: #990000">;</span>                          <span style="font-style: italic"><span style="color: #9A1900">// element of permuted x</span></span>
     <span style="color: #008080">size_t</span>  i<span style="color: #990000">,</span> j<span style="color: #990000">,</span> k<span style="color: #990000">;</span>                      <span style="font-style: italic"><span style="color: #9A1900">// temporary indices</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// L and U factors</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span>  <span style="font-weight: bold"><span style="color: #000000">L</span></span><span style="color: #990000">(</span>n<span style="color: #990000">*</span>n<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">U</span></span><span style="color: #990000">(</span>n<span style="color: #990000">*</span>n<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Extract L from LU factorization</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// elements along and below the diagonal</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;=</span> i<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               L<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">=</span> y<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">];</span>
          <span style="font-style: italic"><span style="color: #9A1900">// elements above the diagonal</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> i<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               L<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Extract U from LU factorization</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// elements below the diagonal</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> i<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               U<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
          <span style="font-style: italic"><span style="color: #9A1900">// elements along the diagonal</span></span>
          U<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>
          <span style="font-style: italic"><span style="color: #9A1900">// elements above the diagonal</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> i<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               U<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">=</span> y<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">];</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Compute L * U</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// compute element (i,j) entry in L * U</span></span>
               sum <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
                    sum <span style="color: #990000">+=</span> L<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> k<span style="color: #990000">]</span> <span style="color: #990000">*</span> U<span style="color: #990000">[</span>k <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
               <span style="font-style: italic"><span style="color: #9A1900">// element (i,j) in permuted version of A</span></span>
               pij  <span style="color: #990000">=</span> x<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">];</span>
               <span style="font-style: italic"><span style="color: #9A1900">// compare</span></span>
               ok  <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>pij<span style="color: #990000">,</span> sum<span style="color: #990000">,</span> eps99<span style="color: #990000">,</span> eps99<span style="color: #990000">);</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>

<span style="color: #FF0000">}</span> <span style="font-style: italic"><span style="color: #9A1900">// end Empty namespace</span></span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">LuRatio</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span>  ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>

     <span style="color: #008080">size_t</span>  n <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">;</span> <span style="font-style: italic"><span style="color: #9A1900">// number rows in A</span></span>
     <span style="color: #009900">double</span>  ratio<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// values for independent and dependent variables</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span>  <span style="font-weight: bold"><span style="color: #000000">x</span></span><span style="color: #990000">(</span>n<span style="color: #990000">*</span>n<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">y</span></span><span style="color: #990000">(</span>n<span style="color: #990000">*</span>n<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// pivot vectors</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>size_t<span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #000000">ip</span></span><span style="color: #990000">(</span>n<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">jp</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// set x equal to the identity matrix</span></span>
     x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span> x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     x<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span> x<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// create a fnction object corresponding to this value of x</span></span>
     CppAD<span style="color: #990000">::</span><span style="color: #008080">ADFun&lt;double&gt;</span> <span style="color: #990000">*</span>FunPtr <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">NewFactor</span></span><span style="color: #990000">(</span>n<span style="color: #990000">,</span> x<span style="color: #990000">,</span> ok<span style="color: #990000">,</span> ip<span style="color: #990000">,</span> jp<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// use function object to factor matrix</span></span>
     y     <span style="color: #990000">=</span> FunPtr<span style="color: #990000">-&gt;</span><span style="font-weight: bold"><span style="color: #000000">Forward</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">,</span> x<span style="color: #990000">);</span>
     ratio <span style="color: #990000">=</span> y<span style="color: #990000">[</span>n<span style="color: #990000">*</span>n<span style="color: #990000">];</span>
     ok   <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>ratio <span style="color: #990000">==</span> <span style="color: #993399">1</span><span style="color: #990000">.);</span>
     ok   <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">CheckLuFactor</span></span><span style="color: #990000">(</span>n<span style="color: #990000">,</span> x<span style="color: #990000">,</span> y<span style="color: #990000">,</span> ip<span style="color: #990000">,</span> jp<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// set x so that the pivot ratio will be infinite</span></span>
     x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.</span> <span style="color: #990000">;</span> x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>
     x<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.</span> <span style="color: #990000">;</span> x<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// try to use old function pointer to factor matrix</span></span>
     y     <span style="color: #990000">=</span> FunPtr<span style="color: #990000">-&gt;</span><span style="font-weight: bold"><span style="color: #000000">Forward</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">,</span> x<span style="color: #990000">);</span>
     ratio <span style="color: #990000">=</span> y<span style="color: #990000">[</span>n<span style="color: #990000">*</span>n<span style="color: #990000">];</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check to see if we need to refactor matrix</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>ratio <span style="color: #990000">&gt;</span> <span style="color: #993399">10</span><span style="color: #990000">.);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> ratio <span style="color: #990000">&gt;</span> <span style="color: #993399">10</span><span style="color: #990000">.</span> <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">delete</span></span> FunPtr<span style="color: #990000">;</span> <span style="font-style: italic"><span style="color: #9A1900">// to avoid a memory leak</span></span>
          FunPtr <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">NewFactor</span></span><span style="color: #990000">(</span>n<span style="color: #990000">,</span> x<span style="color: #990000">,</span> ok<span style="color: #990000">,</span> ip<span style="color: #990000">,</span> jp<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">//  now we can use the function object to factor matrix</span></span>
     y     <span style="color: #990000">=</span> FunPtr<span style="color: #990000">-&gt;</span><span style="font-weight: bold"><span style="color: #000000">Forward</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">,</span> x<span style="color: #990000">);</span>
     ratio <span style="color: #990000">=</span> y<span style="color: #990000">[</span>n<span style="color: #990000">*</span>n<span style="color: #990000">];</span>
     ok    <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>ratio <span style="color: #990000">==</span> <span style="color: #993399">1</span><span style="color: #990000">.);</span>
     ok    <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">CheckLuFactor</span></span><span style="color: #990000">(</span>n<span style="color: #990000">,</span> x<span style="color: #990000">,</span> y<span style="color: #990000">,</span> ip<span style="color: #990000">,</span> jp<span style="color: #990000">);</span>

     <span style="font-weight: bold"><span style="color: #0000FF">delete</span></span> FunPtr<span style="color: #990000">;</span>  <span style="font-style: italic"><span style="color: #9A1900">// avoid memory leak</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span></tt></pre>
</font></code>
<hr/>Input File: example/general/lu_ratio.cpp

</body>
</html>
