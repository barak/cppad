<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Correctness Check for Both Simple and Fast Representations</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Correctness Check for Both Simple and Fast Representations"/>
<meta name="keywords" id="keywords" content=" correctness check both simple fast representations "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ipopt_nlp_ode_check.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="ipopt_nlp_ode_run.hpp.xml" target="_top">Prev</a>
</td><td><a href="ipopt_ode_speed.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>deprecated</option>
<option>cppad_ipopt_nlp</option>
<option>ipopt_nlp_ode</option>
<option>ipopt_nlp_ode_check.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>deprecated-&gt;</option>
<option>include_deprecated</option>
<option>FunDeprecated</option>
<option>CompareChange</option>
<option>omp_max_thread</option>
<option>TrackNewDel</option>
<option>omp_alloc</option>
<option>memory_leak</option>
<option>epsilon</option>
<option>test_vector</option>
<option>cppad_ipopt_nlp</option>
<option>old_atomic</option>
<option>zdouble</option>
<option>autotools</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>cppad_ipopt_nlp-&gt;</option>
<option>ipopt_nlp_get_started.cpp</option>
<option>ipopt_nlp_ode</option>
<option>ipopt_ode_speed.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ipopt_nlp_ode-&gt;</option>
<option>ipopt_nlp_ode_problem</option>
<option>ipopt_nlp_ode_simple</option>
<option>ipopt_nlp_ode_fast</option>
<option>ipopt_nlp_ode_run.hpp</option>
<option>ipopt_nlp_ode_check.cpp</option>
</select>
</td>
<td>ipopt_nlp_ode_check.cpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>Correctness Check for Both Simple and Fast Representations</big></big></b></center>
<code><font color="blue"><pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">"ode_run.hpp"</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">ode_check</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> SizeVector<span style="color: #990000">&amp;</span> N<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> NumberVector<span style="color: #990000">&amp;</span> x<span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> i<span style="color: #990000">,</span> j<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// number of components of x corresponding to values for y</span></span>
     <span style="color: #008080">size_t</span> ny_inx <span style="color: #990000">=</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">-</span> Na<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// compute the partial sums of the number of grid points</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// and the maximum step size for the trapezoidal approximation</span></span>
     <span style="color: #008080">SizeVector</span> <span style="font-weight: bold"><span style="color: #000000">S</span></span><span style="color: #990000">(</span>Nz<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">);</span>
     S<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     <span style="color: #008080">Number</span> max_step <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;=</span> Nz<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     S<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> S<span style="color: #990000">[</span>i<span style="color: #990000">-</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">+</span> N<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          max_step <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">(</span>max_step<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #000000">Number</span></span><span style="color: #990000">(</span>s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">-</span> s<span style="color: #990000">[</span>i<span style="color: #990000">-</span><span style="color: #993399">1</span><span style="color: #990000">])</span> <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #000000">Number</span></span><span style="color: #990000">(</span>N<span style="color: #990000">[</span>i<span style="color: #990000">])</span> <span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// split out return values</span></span>
     <span style="color: #008080">NumberVector</span> <span style="font-weight: bold"><span style="color: #000000">a</span></span><span style="color: #990000">(</span>Na<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">y_0</span></span><span style="color: #990000">(</span>Ny<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">y_1</span></span><span style="color: #990000">(</span>Ny<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">y_2</span></span><span style="color: #990000">(</span>Ny<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> Na<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          a<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> x<span style="color: #990000">[</span>ny_inx<span style="color: #990000">+</span>j<span style="color: #990000">];</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> Ny<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     y_0<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> x<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
          y_1<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> x<span style="color: #990000">[</span>Ny <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
          y_2<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> x<span style="color: #990000">[</span><span style="color: #993399">2</span> <span style="color: #990000">*</span> Ny <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Check some of the optimal a value</span></span>
     <span style="color: #008080">Number</span> rel_tol <span style="color: #990000">=</span> max_step <span style="color: #990000">*</span> max_step<span style="color: #990000">;</span>
     <span style="color: #008080">Number</span> abs_tol <span style="color: #990000">=</span> rel_tol<span style="color: #990000">;</span>
     <span style="color: #008080">Number</span> check_a<span style="color: #990000">[]</span> <span style="color: #990000">=</span> <span style="color: #FF0000">{</span>a0<span style="color: #990000">,</span> a1<span style="color: #990000">,</span> a2<span style="color: #FF0000">}</span><span style="color: #990000">;</span> <span style="font-style: italic"><span style="color: #9A1900">// see the y_one function</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> Na<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>
          ok <span style="color: #990000">&amp;=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>
               check_a<span style="color: #990000">[</span>j<span style="color: #990000">],</span> a<span style="color: #990000">[</span>j<span style="color: #990000">],</span> rel_tol<span style="color: #990000">,</span> abs_tol
          <span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check accuarcy of constraint equations</span></span>
     rel_tol <span style="color: #990000">=</span> <span style="color: #993399">1e-9</span><span style="color: #990000">;</span>
     abs_tol <span style="color: #990000">=</span> <span style="color: #993399">1e-9</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check the initial value constraint</span></span>
     <span style="color: #008080">NumberVector</span> F <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">eval_F</span></span><span style="color: #990000">(</span>a<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> Ny<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          ok <span style="color: #990000">&amp;=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>F<span style="color: #990000">[</span>j<span style="color: #990000">],</span> y_0<span style="color: #990000">[</span>j<span style="color: #990000">],</span> rel_tol<span style="color: #990000">,</span> abs_tol<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check the first trapezoidal equation</span></span>
     <span style="color: #008080">NumberVector</span> G_0 <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">eval_G</span></span><span style="color: #990000">(</span>y_0<span style="color: #990000">,</span> a<span style="color: #990000">);</span>
     <span style="color: #008080">NumberVector</span> G_1 <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">eval_G</span></span><span style="color: #990000">(</span>y_1<span style="color: #990000">,</span> a<span style="color: #990000">);</span>
     <span style="color: #008080">Number</span> dt <span style="color: #990000">=</span> <span style="color: #990000">(</span>s<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> s<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">])</span> <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #000000">Number</span></span><span style="color: #990000">(</span>N<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]);</span>
     <span style="color: #008080">Number</span> check<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> Ny<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     check <span style="color: #990000">=</span> y_1<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">-</span> y_0<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">-</span> <span style="color: #990000">(</span>G_1<span style="color: #990000">[</span>j<span style="color: #990000">]+</span>G_0<span style="color: #990000">[</span>j<span style="color: #990000">])*</span>dt<span style="color: #990000">/</span><span style="color: #993399">2</span><span style="color: #990000">;</span>
          ok <span style="color: #990000">&amp;=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span> check<span style="color: #990000">,</span> <span style="color: #993399">0</span><span style="color: #990000">.,</span> rel_tol<span style="color: #990000">,</span> abs_tol<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// check the second trapezoidal equation</span></span>
     <span style="color: #008080">NumberVector</span> G_2 <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">eval_G</span></span><span style="color: #990000">(</span>y_2<span style="color: #990000">,</span> a<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> N<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #993399">1</span> <span style="color: #990000">)</span>
          dt <span style="color: #990000">=</span> <span style="color: #990000">(</span>s<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> s<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">])</span> <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #000000">Number</span></span><span style="color: #990000">(</span>N<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> Ny<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     check <span style="color: #990000">=</span> y_2<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">-</span> y_1<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">-</span> <span style="color: #990000">(</span>G_2<span style="color: #990000">[</span>j<span style="color: #990000">]+</span>G_1<span style="color: #990000">[</span>j<span style="color: #990000">])*</span>dt<span style="color: #990000">/</span><span style="color: #993399">2</span><span style="color: #990000">;</span>
          ok <span style="color: #990000">&amp;=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span> check<span style="color: #990000">,</span> <span style="color: #993399">0</span><span style="color: #990000">.,</span> rel_tol<span style="color: #990000">,</span> abs_tol<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// check the objective function (specialized to this case)</span></span>
     check <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
     <span style="color: #008080">NumberVector</span> <span style="font-weight: bold"><span style="color: #000000">y_i</span></span><span style="color: #990000">(</span>Ny<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> Nz<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> Ny<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               y_i<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span>  x<span style="color: #990000">[</span>S<span style="color: #990000">[</span>k<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> Ny <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
          check <span style="color: #990000">+=</span> eval_H<span style="color: #990000">&lt;</span>Number<span style="color: #990000">&gt;(</span>k <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> y_i<span style="color: #990000">,</span> a<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>
     <span style="color: #008080">Number</span> obj_value <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span> <span style="font-style: italic"><span style="color: #9A1900">// optimal object (no noise in simulation)</span></span>
     ok <span style="color: #990000">&amp;=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>check<span style="color: #990000">,</span> obj_value<span style="color: #990000">,</span> rel_tol<span style="color: #990000">,</span> abs_tol<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Use this empty namespace function to avoid warning that it is not used</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">static</span></span> <span style="color: #008080">size_t</span> ode_check_count <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     ode_check_count<span style="color: #990000">++;</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">count_eval_r</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> ode_check_count<span style="color: #990000">;</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span></tt></pre>
</font></code>
<hr/>Input File: cppad_ipopt/example/ode_check.cpp

</body>
</html>
