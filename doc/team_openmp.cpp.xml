<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>OpenMP Implementation of a Team of AD Threads</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="OpenMP Implementation of a Team of AD Threads"/>
<meta name="keywords" id="keywords" content=" openmp implementation team ad threads "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_team_openmp.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="team_thread.hpp.xml" target="_top">Prev</a>
</td><td><a href="team_bthread.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>multi_thread</option>
<option>thread_test.cpp</option>
<option>team_thread.hpp</option>
<option>team_openmp.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>multi_thread-&gt;</option>
<option>parallel_ad</option>
<option>thread_test.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>thread_test.cpp-&gt;</option>
<option>a11c_openmp.cpp</option>
<option>a11c_bthread.cpp</option>
<option>a11c_pthread.cpp</option>
<option>simple_ad_openmp.cpp</option>
<option>simple_ad_bthread.cpp</option>
<option>simple_ad_pthread.cpp</option>
<option>team_example.cpp</option>
<option>harmonic.cpp</option>
<option>multi_atomic.cpp</option>
<option>multi_newton.cpp</option>
<option>team_thread.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>team_thread.hpp-&gt;</option>
<option>team_openmp.cpp</option>
<option>team_bthread.cpp</option>
<option>team_pthread.cpp</option>
</select>
</td>
<td>team_openmp.cpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>OpenMP Implementation of a Team of AD Threads</big></big></b></center>
See <a href="team_thread.hpp.xml" target="_top"><span style='white-space: nowrap'>team_thread.hpp</span></a>
 for this routines specifications.

<code><font color="blue">
<pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;omp.h&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/cppad.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">"../team_thread.hpp"</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>thread_alloc<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// number of threads in this team</span></span>
     <span style="color: #008080">size_t</span> num_threads_<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// used to inform CppAD when we are in parallel execution mode</span></span>
     <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">in_parallel</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #000000">omp_in_parallel</span></span><span style="color: #990000">()</span> <span style="color: #990000">!=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// used to inform CppAD of the current thread number</span></span>
     <span style="color: #008080">size_t</span> <span style="font-weight: bold"><span style="color: #000000">thread_num</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">static_cast</span></span><span style="color: #990000">&lt;</span>size_t<span style="color: #990000">&gt;(</span> <span style="font-weight: bold"><span style="color: #000000">omp_get_thread_num</span></span><span style="color: #990000">()</span> <span style="color: #990000">);</span> <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">team_create</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> num_threads<span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>
     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="color: #990000">!</span> <span style="font-weight: bold"><span style="color: #000000">in_parallel</span></span><span style="color: #990000">();</span>
     ok     <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">thread_num</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">0</span><span style="color: #990000">;;</span>
     ok     <span style="color: #990000">&amp;=</span> num_threads <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Turn off dynamic thread adjustment</span></span>
     <span style="font-weight: bold"><span style="color: #000000">omp_set_dynamic</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Set the number of OpenMP threads</span></span>
     <span style="font-weight: bold"><span style="color: #000000">omp_set_num_threads</span></span><span style="color: #990000">(</span> <span style="color: #009900">int</span><span style="color: #990000">(</span>num_threads<span style="color: #990000">)</span> <span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// setup for using CppAD::AD&lt;double&gt; in parallel</span></span>
     thread_alloc<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">parallel_setup</span></span><span style="color: #990000">(</span>num_threads<span style="color: #990000">,</span> in_parallel<span style="color: #990000">,</span> thread_num<span style="color: #990000">);</span>
     thread_alloc<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">hold_memory</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">);</span>
     CppAD<span style="color: #990000">::</span>parallel_ad<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;();</span>

     <span style="font-style: italic"><span style="color: #9A1900">// inform team_work of number of threads</span></span>
     num_threads_ <span style="color: #990000">=</span> num_threads<span style="color: #990000">;</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">team_work</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">worker</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">))</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="color: #990000">!</span> <span style="font-weight: bold"><span style="color: #000000">in_parallel</span></span><span style="color: #990000">();</span>
     ok     <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">thread_num</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">0</span><span style="color: #990000">;;</span>
     ok     <span style="color: #990000">&amp;=</span> num_threads_ <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>

     <span style="color: #009900">int</span> number_threads <span style="color: #990000">=</span> <span style="color: #009900">int</span><span style="color: #990000">(</span>num_threads_<span style="color: #990000">);</span>
     <span style="color: #009900">int</span> thread_num<span style="color: #990000">;</span>
<span style="font-weight: bold"><span style="color: #000080"># pragma</span></span> omp parallel <span style="font-weight: bold"><span style="color: #0000FF">for</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>thread_num <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> thread_num <span style="color: #990000">&lt;</span> number_threads<span style="color: #990000">;</span> thread_num<span style="color: #990000">++)</span>
          <span style="font-weight: bold"><span style="color: #000000">worker</span></span><span style="color: #990000">();</span>
<span style="font-style: italic"><span style="color: #9A1900">// end omp parallel for</span></span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">team_destroy</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="color: #990000">!</span> <span style="font-weight: bold"><span style="color: #000000">in_parallel</span></span><span style="color: #990000">();</span>
     ok     <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">thread_num</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">0</span><span style="color: #990000">;;</span>
     ok     <span style="color: #990000">&amp;=</span> num_threads_ <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// inform team_work of number of threads</span></span>
     num_threads_ <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Set the number of OpenMP threads to one</span></span>
     <span style="font-weight: bold"><span style="color: #000000">omp_set_num_threads</span></span><span style="color: #990000">(</span> <span style="color: #009900">int</span><span style="color: #990000">(</span>num_threads_<span style="color: #990000">)</span> <span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// inform CppAD no longer in multi-threading mode</span></span>
     thread_alloc<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">parallel_setup</span></span><span style="color: #990000">(</span>num_threads_<span style="color: #990000">,</span> CPPAD_NULL<span style="color: #990000">,</span> CPPAD_NULL<span style="color: #990000">);</span>
     thread_alloc<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">hold_memory</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">);</span>
     CppAD<span style="color: #990000">::</span>parallel_ad<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;();</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>

<span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">char</span><span style="color: #990000">*</span> <span style="font-weight: bold"><span style="color: #000000">team_name</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="color: #FF0000">"openmp"</span><span style="color: #990000">;</span> <span style="color: #FF0000">}</span></tt></pre>
</font></code>
<hr/>Input File: example/multi_thread/openmp/team_openmp.cpp

</body>
</html>
