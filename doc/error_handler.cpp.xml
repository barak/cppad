<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Replacing The CppAD Error Handler: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Replacing The CppAD Error Handler: Example and Test"/>
<meta name="keywords" id="keywords" content=" replacing the cppad error handler: example test handler "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_error_handler.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="errorhandler.xml" target="_top">Prev</a>
</td><td><a href="cppad_assert.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>ErrorHandler</option>
<option>error_handler.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ErrorHandler-&gt;</option>
<option>error_handler.cpp</option>
<option>cppad_assert</option>
</select>
</td>
<td>error_handler.cpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>Replacing The CppAD Error Handler: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/error_handler.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cstring&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">myhandler</span></span><span style="color: #990000">(</span>
          <span style="color: #009900">bool</span> known       <span style="color: #990000">,</span>
          <span style="color: #009900">int</span>  line        <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">char</span> <span style="color: #990000">*</span>file <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">char</span> <span style="color: #990000">*</span>exp  <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">char</span> <span style="color: #990000">*</span>msg  <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// error handler must not return, so throw an exception</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">throw</span></span> line<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>


<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">ErrorHandler</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>ErrorHandler<span style="color: #990000">;</span>

     <span style="color: #009900">int</span> lineMinusFive <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// replace the default CppAD error handler</span></span>
     <span style="color: #008080">ErrorHandler</span> <span style="font-weight: bold"><span style="color: #000000">info</span></span><span style="color: #990000">(</span>myhandler<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// set ok to false unless catch block is executed</span></span>
     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// use try / catch because handler throws an exception</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">try</span></span> <span style="color: #FF0000">{</span>
          <span style="font-style: italic"><span style="color: #9A1900">// set the static variable Line to next source code line</span></span>
          lineMinusFive <span style="color: #990000">=</span> __LINE__<span style="color: #990000">;</span>

          <span style="font-style: italic"><span style="color: #9A1900">// can call myhandler anywhere that ErrorHandler is defined</span></span>
          ErrorHandler<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">Call</span></span><span style="color: #990000">(</span>
               <span style="font-weight: bold"><span style="color: #0000FF">true</span></span>     <span style="color: #990000">,</span> <span style="font-style: italic"><span style="color: #9A1900">// reason for the error is known</span></span>
               __LINE__ <span style="color: #990000">,</span> <span style="font-style: italic"><span style="color: #9A1900">// current source code line number</span></span>
               __FILE__ <span style="color: #990000">,</span> <span style="font-style: italic"><span style="color: #9A1900">// current source code file name</span></span>
               <span style="color: #FF0000">"1 &gt; 0"</span>  <span style="color: #990000">,</span> <span style="font-style: italic"><span style="color: #9A1900">// an intentional error condition</span></span>
               <span style="color: #FF0000">"Testing ErrorHandler"</span>     <span style="font-style: italic"><span style="color: #9A1900">// reason for error</span></span>
          <span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">catch</span></span> <span style="color: #990000">(</span> <span style="color: #009900">int</span> line <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// check value of the line number that was passed to handler</span></span>
          ok <span style="color: #990000">=</span> <span style="color: #990000">(</span>line <span style="color: #990000">==</span> lineMinusFive <span style="color: #990000">+</span> <span style="color: #993399">5</span><span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// info drops out of scope and the default CppAD error handler</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// is restored when this routine returns.</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/utility/error_handler.cpp

</body>
</html>
