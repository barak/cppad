<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>CppAD::vector Template Class: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="CppAD::vector Template Class: Example and Test"/>
<meta name="keywords" id="keywords" content=" cppad::vector template class: example test vector Cppad "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_cppad_vector.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="cppad_vector.xml" target="_top">Prev</a>
</td><td><a href="vector_bool.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>CppAD_vector</option>
<option>cppad_vector.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>CppAD_vector-&gt;</option>
<option>cppad_vector.cpp</option>
<option>vector_bool.cpp</option>
</select>
</td>
<td>cppad_vector.cpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>CppAD::vector Template Class: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_simple_vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;sstream&gt;</span> <span style="font-style: italic"><span style="color: #9A1900">// sstream and string are used to test output operation</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;string&gt;</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">CppAD_vector</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">;</span>     <span style="font-style: italic"><span style="color: #9A1900">// so can use vector instead of CppAD::vector</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">typedef</span></span> <span style="color: #009900">double</span> Type<span style="color: #990000">;</span>     <span style="font-style: italic"><span style="color: #9A1900">// change double to test other types</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// check Simple Vector specifications</span></span>
     CppAD<span style="color: #990000">::</span>CheckSimpleVector<span style="color: #990000">&lt;</span> Type<span style="color: #990000">,</span> vector<span style="color: #990000">&lt;</span>Type<span style="color: #990000">&gt;</span> <span style="color: #990000">&gt;();</span>

     <span style="color: #008080">vector&lt;Type&gt;</span> x<span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// default constructor</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">0</span><span style="color: #990000">);</span>

     x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">resize</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>             <span style="font-style: italic"><span style="color: #9A1900">// resize and set element assignment</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">2</span><span style="color: #990000">);</span>
     x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">);</span>
     x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>

     <span style="color: #008080">vector&lt;Type&gt;</span> <span style="font-weight: bold"><span style="color: #000000">y</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>       <span style="font-style: italic"><span style="color: #9A1900">// sizing constructor</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">2</span><span style="color: #990000">);</span>

     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">vector&lt;Type&gt;</span> <span style="font-weight: bold"><span style="color: #000000">z</span></span><span style="color: #990000">(</span>x<span style="color: #990000">);</span> <span style="font-style: italic"><span style="color: #9A1900">// copy constructor and const element access</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>z<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">2</span><span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span> <span style="color: #990000">(</span>z<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">))</span> <span style="color: #990000">&amp;&amp;</span> <span style="color: #990000">(</span>z<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">))</span> <span style="color: #990000">);</span>

     x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>          <span style="font-style: italic"><span style="color: #9A1900">// modify, assignment changes x</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">));</span>

     x <span style="color: #990000">=</span> y <span style="color: #990000">=</span> z<span style="color: #990000">;</span>               <span style="font-style: italic"><span style="color: #9A1900">// vector assignment</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span> <span style="color: #990000">(</span>x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">))</span> <span style="color: #990000">&amp;&amp;</span> <span style="color: #990000">(</span>x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">))</span> <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span> <span style="color: #990000">(</span>y<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">))</span> <span style="color: #990000">&amp;&amp;</span> <span style="color: #990000">(</span>y<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">))</span> <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span> <span style="color: #990000">(</span>z<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">))</span> <span style="color: #990000">&amp;&amp;</span> <span style="color: #990000">(</span>z<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">))</span> <span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// test of output</span></span>
     std<span style="color: #990000">::</span><span style="color: #008080">string</span>        correct<span style="color: #990000">=</span> <span style="color: #FF0000">"{ 1, 2 }"</span><span style="color: #990000">;</span>
     std<span style="color: #990000">::</span><span style="color: #008080">string</span>        str<span style="color: #990000">;</span>
     std<span style="color: #990000">::</span><span style="color: #008080">ostringstream</span> buf<span style="color: #990000">;</span>
     buf <span style="color: #990000">&lt;&lt;</span> z<span style="color: #990000">;</span>
     str <span style="color: #990000">=</span> buf<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">str</span></span><span style="color: #990000">();</span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>str <span style="color: #990000">==</span> correct<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// test resize(1), resize(0), capacity, and clear</span></span>
     <span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">capacity</span></span><span style="color: #990000">();</span>
     ok      <span style="color: #990000">&amp;=</span> i <span style="color: #990000">&gt;=</span> <span style="color: #993399">2</span><span style="color: #990000">;</span>
     x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">resize</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">);</span>
     ok      <span style="color: #990000">&amp;=</span> x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">);</span>
     ok      <span style="color: #990000">&amp;=</span> i <span style="color: #990000">==</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">capacity</span></span><span style="color: #990000">();</span>
     x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">resize</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span>
     ok      <span style="color: #990000">&amp;=</span> i <span style="color: #990000">==</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">capacity</span></span><span style="color: #990000">();</span>
     x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">clear</span></span><span style="color: #990000">();</span>
     ok      <span style="color: #990000">&amp;=</span> <span style="color: #993399">0</span> <span style="color: #990000">==</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">capacity</span></span><span style="color: #990000">();</span>

     <span style="font-style: italic"><span style="color: #9A1900">// test of push_back scalar and capacity</span></span>
     <span style="color: #008080">size_t</span> N <span style="color: #990000">=</span> <span style="color: #993399">100</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> N<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> old_capacity <span style="color: #990000">=</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">capacity</span></span><span style="color: #990000">();</span>
          x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">push_back</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span>i<span style="color: #990000">)</span> <span style="color: #990000">);</span>
          ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>i<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">==</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          ok <span style="color: #990000">&amp;=</span> i <span style="color: #990000">&lt;</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">capacity</span></span><span style="color: #990000">();</span>
          ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>i <span style="color: #990000">==</span> old_capacity<span style="color: #990000">)</span> <span style="color: #990000">||</span> old_capacity <span style="color: #990000">==</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">capacity</span></span><span style="color: #990000">();</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> N<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span>i<span style="color: #990000">)</span> <span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// test of data</span></span>
     Type<span style="color: #990000">*</span> data <span style="color: #990000">=</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">data</span></span><span style="color: #990000">();</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> N<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     ok <span style="color: #990000">&amp;=</span> data<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span>i<span style="color: #990000">);</span>
          data<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span>N <span style="color: #990000">-</span> i<span style="color: #990000">);</span>
          ok <span style="color: #990000">&amp;=</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span>N <span style="color: #990000">-</span> i<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// test of push_vector</span></span>
     x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">push_vector</span></span><span style="color: #990000">(</span>x<span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">2</span> <span style="color: #990000">*</span> N<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> N<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     ok <span style="color: #990000">&amp;=</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span>N <span style="color: #990000">-</span> i<span style="color: #990000">);</span>
          ok <span style="color: #990000">&amp;=</span> x<span style="color: #990000">[</span>i<span style="color: #990000">+</span>N<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span>N <span style="color: #990000">-</span> i<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>


     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/cppad_vector.cpp

</body>
</html>
