<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>The CheckNumericType Function: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="The CheckNumericType Function: Example and Test"/>
<meta name="keywords" id="keywords" content=" the checknumerictype function: example test check Numerictype "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_check_numeric_type.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="checknumerictype.xml" target="_top">Prev</a>
</td><td><a href="simplevector.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>CheckNumericType</option>
<option>check_numeric_type.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>CheckNumericType-&gt;</option>
<option>check_numeric_type.cpp</option>
</select>
</td>
<td>check_numeric_type.cpp</td>
<td>Headings</td>
</tr></table><br/>


<center><b><big><big>The CheckNumericType Function: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_numeric_type.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/near_equal.hpp&gt;</span>


<span style="font-style: italic"><span style="color: #9A1900">// Chosing a value between 1 and 10 selects a numeric class properity to be</span></span>
<span style="font-style: italic"><span style="color: #9A1900">// omitted and result in an error message being generated</span></span>
<span style="font-weight: bold"><span style="color: #000080"># define</span></span> CppADMyTypeOmit <span style="color: #993399">0</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span> <span style="font-style: italic"><span style="color: #9A1900">// Empty namespace</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------------------</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">MyType</span> <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">private</span></span><span style="color: #990000">:</span>
          <span style="color: #009900">double</span> d<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">public</span></span><span style="color: #990000">:</span>
          <span style="font-style: italic"><span style="color: #9A1900">// constructor from void</span></span>
          <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span> <span style="color: #990000">:</span> <span style="font-weight: bold"><span style="color: #000000">d</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">.)</span>
          <span style="color: #FF0000">{</span> <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// constructor from an int</span></span>
          <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="color: #009900">int</span> d_<span style="color: #990000">)</span> <span style="color: #990000">:</span> <span style="font-weight: bold"><span style="color: #000000">d</span></span><span style="color: #990000">(</span>d_<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span> <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// copy constuctor</span></span>
          <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     d <span style="color: #990000">=</span> x<span style="color: #990000">.</span>d<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// assignment operator</span></span>
          <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">=</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     d <span style="color: #990000">=</span> x<span style="color: #990000">.</span>d<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// member function that converts to double</span></span>
          <span style="color: #009900">double</span> <span style="font-weight: bold"><span style="color: #000000">Double</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> d<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">1</span>
          <span style="font-style: italic"><span style="color: #9A1900">// unary plus</span></span>
          <span style="color: #008080">MyType</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">+</span> <span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
          <span style="color: #FF0000">{</span>     <span style="color: #008080">MyType</span> x<span style="color: #990000">;</span>
               x<span style="color: #990000">.</span>d <span style="color: #990000">=</span>  d<span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> x<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">2</span>
          <span style="font-style: italic"><span style="color: #9A1900">// unary plus</span></span>
          <span style="color: #008080">MyType</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">-</span> <span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
          <span style="color: #FF0000">{</span>     <span style="color: #008080">MyType</span> x<span style="color: #990000">;</span>
               x<span style="color: #990000">.</span>d <span style="color: #990000">=</span> <span style="color: #990000">-</span> d<span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> x<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">3</span>
          <span style="font-style: italic"><span style="color: #9A1900">// binary addition</span></span>
          <span style="color: #008080">MyType</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">+</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
          <span style="color: #FF0000">{</span>     <span style="color: #008080">MyType</span> y<span style="color: #990000">;</span>
               y<span style="color: #990000">.</span>d <span style="color: #990000">=</span> d <span style="color: #990000">+</span> x<span style="color: #990000">.</span>d <span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> y<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">4</span>
          <span style="font-style: italic"><span style="color: #9A1900">// binary subtraction</span></span>
          <span style="color: #008080">MyType</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">-</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
          <span style="color: #FF0000">{</span>     <span style="color: #008080">MyType</span> y<span style="color: #990000">;</span>
               y<span style="color: #990000">.</span>d <span style="color: #990000">=</span> d <span style="color: #990000">-</span> x<span style="color: #990000">.</span>d <span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> y<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">5</span>
          <span style="font-style: italic"><span style="color: #9A1900">// binary multiplication</span></span>
          <span style="color: #008080">MyType</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">*</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
          <span style="color: #FF0000">{</span>     <span style="color: #008080">MyType</span> y<span style="color: #990000">;</span>
               y<span style="color: #990000">.</span>d <span style="color: #990000">=</span> d <span style="color: #990000">*</span> x<span style="color: #990000">.</span>d <span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> y<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">6</span>
          <span style="font-style: italic"><span style="color: #9A1900">// binary division</span></span>
          <span style="color: #008080">MyType</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">/</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
          <span style="color: #FF0000">{</span>     <span style="color: #008080">MyType</span> y<span style="color: #990000">;</span>
               y<span style="color: #990000">.</span>d <span style="color: #990000">=</span> d <span style="color: #990000">/</span> x<span style="color: #990000">.</span>d <span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> y<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">7</span>
          <span style="font-style: italic"><span style="color: #9A1900">// computed assignment addition</span></span>
          <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">+=</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     d <span style="color: #990000">+=</span> x<span style="color: #990000">.</span>d<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">8</span>
          <span style="font-style: italic"><span style="color: #9A1900">// computed assignment subtraction</span></span>
          <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">-=</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     d <span style="color: #990000">-=</span> x<span style="color: #990000">.</span>d<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">9</span>
          <span style="font-style: italic"><span style="color: #9A1900">// computed assignment multiplication</span></span>
          <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">*=</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     d <span style="color: #990000">*=</span> x<span style="color: #990000">.</span>d<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyTypeOmit <span style="color: #990000">!=</span> <span style="color: #993399">10</span>
          <span style="font-style: italic"><span style="color: #9A1900">// computed assignment division</span></span>
          <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">/=</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyType</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     d <span style="color: #990000">/=</span> x<span style="color: #990000">.</span>d<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
     <span style="color: #FF0000">}</span><span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------------------</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">/*</span></span>
<span style="font-style: italic"><span style="color: #9A1900">     Solve: A[0] * x[0] + A[1] * x[1] = b[0]</span></span>
<span style="font-style: italic"><span style="color: #9A1900">            A[2] * x[0] + A[3] * x[1] = b[1]</span></span>
<span style="font-style: italic"><span style="color: #9A1900">     */</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">NumericType</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">Solve</span></span><span style="color: #990000">(</span><span style="color: #008080">NumericType</span> <span style="color: #990000">*</span>A<span style="color: #990000">,</span> <span style="color: #008080">NumericType</span> <span style="color: #990000">*</span>x<span style="color: #990000">,</span> <span style="color: #008080">NumericType</span> <span style="color: #990000">*</span>b<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>
          <span style="font-style: italic"><span style="color: #9A1900">// make sure NumericType satisfies its conditions</span></span>
          CppAD<span style="color: #990000">::</span>CheckNumericType<span style="color: #990000">&lt;</span>NumericType<span style="color: #990000">&gt;();</span>

          <span style="font-style: italic"><span style="color: #9A1900">// copy b to x</span></span>
          x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> b<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">];</span>
          x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> b<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>

          <span style="font-style: italic"><span style="color: #9A1900">// copy A to work space</span></span>
          <span style="color: #008080">NumericType</span> W<span style="color: #990000">[</span><span style="color: #993399">4</span><span style="color: #990000">];</span>
          W<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> A<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">];</span>
          W<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> A<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
          W<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> A<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">];</span>
          W<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> A<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">];</span>

          <span style="font-style: italic"><span style="color: #9A1900">// divide first row by W(1,1)</span></span>
          W<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">/=</span> W<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">];</span>
          x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">/=</span> W<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">];</span>
          W<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">NumericType</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">);</span>

          <span style="font-style: italic"><span style="color: #9A1900">// subtract W(2,1) times first row from second row</span></span>
          W<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">-=</span> W<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> W<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
          x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">-=</span> W<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">];</span>
          W<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">NumericType</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span>

          <span style="font-style: italic"><span style="color: #9A1900">// divide second row by W(2, 2)</span></span>
          x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">/=</span> W<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">];</span>
          W<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span>  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">NumericType</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">);</span>

          <span style="font-style: italic"><span style="color: #9A1900">// use first row to solve for x[0]</span></span>
          x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">-=</span> W<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span> <span style="font-style: italic"><span style="color: #9A1900">// End Empty namespace</span></span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">CheckNumericType</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>NearEqual<span style="color: #990000">;</span>
     <span style="color: #009900">double</span> eps99 <span style="color: #990000">=</span> <span style="color: #993399">99.0</span> <span style="color: #990000">*</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">epsilon</span></span><span style="color: #990000">();</span>

     <span style="color: #008080">MyType</span> A<span style="color: #990000">[</span><span style="color: #993399">4</span><span style="color: #990000">];</span>
     A<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">);</span> A<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>
     A<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="color: #993399">3</span><span style="color: #990000">);</span> A<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="color: #993399">4</span><span style="color: #990000">);</span>

     <span style="color: #008080">MyType</span> b<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">];</span>
     b<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">);</span>
     b<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">MyType</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>

     <span style="color: #008080">MyType</span> x<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">];</span>
     <span style="font-weight: bold"><span style="color: #000000">Solve</span></span><span style="color: #990000">(</span>A<span style="color: #990000">,</span> x<span style="color: #990000">,</span> b<span style="color: #990000">);</span>

     <span style="color: #008080">MyType</span> sum<span style="color: #990000">;</span>
     sum <span style="color: #990000">=</span> A<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">+</span> A<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>sum<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">Double</span></span><span style="color: #990000">(),</span> b<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">].</span><span style="font-weight: bold"><span style="color: #000000">Double</span></span><span style="color: #990000">(),</span> eps99<span style="color: #990000">,</span> eps99<span style="color: #990000">);</span>

     sum <span style="color: #990000">=</span> A<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">+</span> A<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>sum<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">Double</span></span><span style="color: #990000">(),</span> b<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">].</span><span style="font-weight: bold"><span style="color: #000000">Double</span></span><span style="color: #990000">(),</span> eps99<span style="color: #990000">,</span> eps99<span style="color: #990000">);</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/check_numeric_type.cpp

</body>
</html>
