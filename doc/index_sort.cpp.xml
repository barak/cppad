<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Index Sort: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Index Sort: Example and Test"/>
<meta name="keywords" id="keywords" content=" index sort: example test index_sort "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_index_sort.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="index_sort.xml" target="_top">Prev</a>
</td><td><a href="to_string.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>index_sort</option>
<option>index_sort.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>index_sort-&gt;</option>
<option>index_sort.cpp</option>
</select>
</td>
<td>index_sort.cpp</td>
<td>Headings</td>
</tr></table><br/>


<center><b><big><big>Index Sort: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/index_sort.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;valarray&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;vector&gt;</span>


<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span><span style="color: #FF0000">{</span>
     <span style="font-style: italic"><span style="color: #9A1900">// class that uses &lt; to compare a pair of size_t values</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Key</span> <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">public</span></span><span style="color: #990000">:</span>
          <span style="color: #008080">size_t</span> first_<span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> second_<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-weight: bold"><span style="color: #000000">Key</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span> <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-weight: bold"><span style="color: #000000">Key</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> first<span style="color: #990000">,</span> <span style="color: #008080">size_t</span> second<span style="color: #990000">)</span>
          <span style="color: #990000">:</span> <span style="font-weight: bold"><span style="color: #000000">first_</span></span><span style="color: #990000">(</span>first<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">second_</span></span><span style="color: #990000">(</span>second<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span> <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span><span style="color: #990000">&lt;(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Key<span style="color: #990000">&amp;</span> other<span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> first_ <span style="color: #990000">==</span> other<span style="color: #990000">.</span>first_ <span style="color: #990000">)</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> second_ <span style="color: #990000">&lt;</span> other<span style="color: #990000">.</span>second_<span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> first_ <span style="color: #990000">&lt;</span> other<span style="color: #990000">.</span>first_<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span><span style="color: #990000">;</span>

     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">VectorKey</span><span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">VectorSize</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">vector_case</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> i<span style="color: #990000">,</span> j<span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> first<span style="color: #990000">[]</span>  <span style="color: #990000">=</span>  <span style="color: #FF0000">{</span> <span style="color: #993399">4</span><span style="color: #990000">,</span> <span style="color: #993399">4</span><span style="color: #990000">,</span> <span style="color: #993399">3</span><span style="color: #990000">,</span> <span style="color: #993399">3</span><span style="color: #990000">,</span> <span style="color: #993399">2</span><span style="color: #990000">,</span> <span style="color: #993399">2</span><span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #FF0000">}</span><span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> second<span style="color: #990000">[]</span> <span style="color: #990000">=</span> <span style="color: #FF0000">{</span> <span style="color: #993399">0</span><span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> <span style="color: #993399">0</span><span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> <span style="color: #993399">0</span><span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> <span style="color: #993399">0</span><span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #FF0000">}</span><span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> size     <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">sizeof</span></span><span style="color: #990000">(</span>first<span style="color: #990000">)</span> <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #0000FF">sizeof</span></span><span style="color: #990000">(</span>first<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]);</span>

          <span style="color: #008080">VectorKey</span> <span style="font-weight: bold"><span style="color: #000000">keys</span></span><span style="color: #990000">(</span>size<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> size<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               keys<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Key</span></span><span style="color: #990000">(</span>first<span style="color: #990000">[</span>i<span style="color: #990000">],</span> second<span style="color: #990000">[</span>i<span style="color: #990000">]);</span>

          <span style="color: #008080">VectorSize</span> <span style="font-weight: bold"><span style="color: #000000">ind</span></span><span style="color: #990000">(</span>size<span style="color: #990000">);</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">index_sort</span></span><span style="color: #990000">(</span>keys<span style="color: #990000">,</span> ind<span style="color: #990000">);</span>

          <span style="font-style: italic"><span style="color: #9A1900">// check that all the indices are different</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> size<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> size<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>i <span style="color: #990000">==</span> j<span style="color: #990000">)</span> <span style="color: #990000">|</span> <span style="color: #990000">(</span>ind<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">!=</span> ind<span style="color: #990000">[</span>j<span style="color: #990000">]);</span>
          <span style="color: #FF0000">}</span>

          <span style="font-style: italic"><span style="color: #9A1900">// check for increasing order</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> size<span style="color: #990000">-</span><span style="color: #993399">1</span><span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> first<span style="color: #990000">[</span> ind<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">==</span> first<span style="color: #990000">[</span> ind<span style="color: #990000">[</span>i<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">)</span>
                    ok <span style="color: #990000">&amp;=</span> second<span style="color: #990000">[</span> ind<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">&lt;=</span> second<span style="color: #990000">[</span> ind<span style="color: #990000">[</span>i<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">];</span>
               <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>     ok <span style="color: #990000">&amp;=</span> first<span style="color: #990000">[</span> ind<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">&lt;</span> first<span style="color: #990000">[</span> ind<span style="color: #990000">[</span>i<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>

          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">index_sort</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// some example simple vector template classes</span></span>
     ok <span style="color: #990000">&amp;=</span> vector_case<span style="color: #990000">&lt;</span>  std<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>Key<span style="color: #990000">&gt;,</span>  std<span style="color: #990000">::</span>valarray<span style="color: #990000">&lt;</span>size_t<span style="color: #990000">&gt;</span> <span style="color: #990000">&gt;();</span>
     ok <span style="color: #990000">&amp;=</span> vector_case<span style="color: #990000">&lt;</span> std<span style="color: #990000">::</span>valarray<span style="color: #990000">&lt;</span>Key<span style="color: #990000">&gt;,</span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>size_t<span style="color: #990000">&gt;</span> <span style="color: #990000">&gt;();</span>
     ok <span style="color: #990000">&amp;=</span> vector_case<span style="color: #990000">&lt;</span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>Key<span style="color: #990000">&gt;,</span>   std<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>size_t<span style="color: #990000">&gt;</span> <span style="color: #990000">&gt;();</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/index_sort.cpp

</body>
</html>
