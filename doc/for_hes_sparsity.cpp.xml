<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Forward Mode Hessian Sparsity: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Forward Mode Hessian Sparsity: Example and Test"/>
<meta name="keywords" id="keywords" content=" forward mode hessian sparsity: example test "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_for_hes_sparsity.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="for_hes_sparsity.xml" target="_top">Prev</a>
</td><td><a href="forsparsehes.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>sparsity_pattern</option>
<option>for_hes_sparsity</option>
<option>for_hes_sparsity.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>ADFun-&gt;</option>
<option>record_adfun</option>
<option>drivers</option>
<option>Forward</option>
<option>Reverse</option>
<option>sparsity_pattern</option>
<option>sparse_derivative</option>
<option>optimize</option>
<option>abs_normal</option>
<option>FunCheck</option>
<option>check_for_nan</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>sparsity_pattern-&gt;</option>
<option>for_jac_sparsity</option>
<option>ForSparseJac</option>
<option>rev_jac_sparsity</option>
<option>RevSparseJac</option>
<option>rev_hes_sparsity</option>
<option>RevSparseHes</option>
<option>for_hes_sparsity</option>
<option>ForSparseHes</option>
<option>dependency.cpp</option>
<option>rc_sparsity.cpp</option>
<option>subgraph_sparsity</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>for_hes_sparsity-&gt;</option>
<option>for_hes_sparsity.cpp</option>
</select>
</td>
<td>for_hes_sparsity.cpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>Forward Mode Hessian Sparsity: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/cppad.hpp&gt;</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">for_hes_sparsity</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>AD<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">typedef</span></span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>size_t<span style="color: #990000">)</span>     SizeVector<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">typedef</span></span> CppAD<span style="color: #990000">::</span><span style="color: #008080">sparse_rc&lt;SizeVector&gt;</span> sparsity<span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// domain space vector</span></span>
     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> <span style="color: #993399">3</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>AD<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;)</span> <span style="font-weight: bold"><span style="color: #000000">ax</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
     ax<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
     ax<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>
     ax<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">.;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// declare independent variables and start recording</span></span>
     CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">Independent</span></span><span style="color: #990000">(</span>ax<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// range space vector</span></span>
     <span style="color: #008080">size_t</span> m <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>AD<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;)</span> <span style="font-weight: bold"><span style="color: #000000">ay</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
     ay<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">sin</span></span><span style="color: #990000">(</span> ax<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">);</span>
     ay<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> ax<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> ax<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>

     <span style="font-style: italic"><span style="color: #9A1900">// create f: x -&gt; y and stop tape recording</span></span>
     CppAD<span style="color: #990000">::</span><span style="color: #008080">ADFun&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">f</span></span><span style="color: #990000">(</span>ax<span style="color: #990000">,</span> ay<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// include all x components in sparsity pattern</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">bool</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #000000">select_domain</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          select_domain<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// compute sparsity pattern for H(x) = F_1''(x)</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">bool</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #000000">select_range</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
     select_range<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span>    <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
     select_range<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span>    <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="color: #009900">bool</span> internal_bool <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="color: #008080">sparsity</span> pattern_out<span style="color: #990000">;</span>
     f<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">for_hes_sparsity</span></span><span style="color: #990000">(</span>
          select_domain<span style="color: #990000">,</span> select_range<span style="color: #990000">,</span> internal_bool<span style="color: #990000">,</span> pattern_out
     <span style="color: #990000">);</span>
     <span style="color: #008080">size_t</span> nnz <span style="color: #990000">=</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">nnz</span></span><span style="color: #990000">();</span>
     ok        <span style="color: #990000">&amp;=</span> nnz <span style="color: #990000">==</span> <span style="color: #993399">2</span><span style="color: #990000">;</span>
     ok        <span style="color: #990000">&amp;=</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">nr</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> n<span style="color: #990000">;</span>
     ok        <span style="color: #990000">&amp;=</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">nc</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> n<span style="color: #990000">;</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// check results</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> SizeVector<span style="color: #990000">&amp;</span> <span style="font-weight: bold"><span style="color: #000000">row</span></span><span style="color: #990000">(</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">row</span></span><span style="color: #990000">()</span> <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> SizeVector<span style="color: #990000">&amp;</span> <span style="font-weight: bold"><span style="color: #000000">col</span></span><span style="color: #990000">(</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">col</span></span><span style="color: #990000">()</span> <span style="color: #990000">);</span>
          <span style="color: #008080">SizeVector</span> row_major <span style="color: #990000">=</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">row_major</span></span><span style="color: #990000">();</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          ok <span style="color: #990000">&amp;=</span> row<span style="color: #990000">[</span> row_major<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">==</span>  <span style="color: #993399">0</span>  <span style="color: #990000">&amp;&amp;</span> col<span style="color: #990000">[</span> row_major<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">==</span>  <span style="color: #993399">1</span><span style="color: #990000">;</span>
          ok <span style="color: #990000">&amp;=</span> row<span style="color: #990000">[</span> row_major<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">==</span>  <span style="color: #993399">1</span>  <span style="color: #990000">&amp;&amp;</span> col<span style="color: #990000">[</span> row_major<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">==</span>  <span style="color: #993399">0</span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// compute sparsity pattern for H(x) = F_0''(x)</span></span>
     select_range<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     select_range<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
     f<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">for_hes_sparsity</span></span><span style="color: #990000">(</span>
          select_domain<span style="color: #990000">,</span> select_range<span style="color: #990000">,</span> internal_bool<span style="color: #990000">,</span> pattern_out
     <span style="color: #990000">);</span>
     nnz <span style="color: #990000">=</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">nnz</span></span><span style="color: #990000">();</span>
     ok <span style="color: #990000">&amp;=</span> nnz <span style="color: #990000">==</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>
     ok <span style="color: #990000">&amp;=</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">nr</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> n<span style="color: #990000">;</span>
     ok <span style="color: #990000">&amp;=</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">nc</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> n<span style="color: #990000">;</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// check results</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> SizeVector<span style="color: #990000">&amp;</span> <span style="font-weight: bold"><span style="color: #000000">row</span></span><span style="color: #990000">(</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">row</span></span><span style="color: #990000">()</span> <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> SizeVector<span style="color: #990000">&amp;</span> <span style="font-weight: bold"><span style="color: #000000">col</span></span><span style="color: #990000">(</span> pattern_out<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">col</span></span><span style="color: #990000">()</span> <span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          ok <span style="color: #990000">&amp;=</span> row<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span>  <span style="color: #993399">2</span>  <span style="color: #990000">&amp;&amp;</span> col<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span>  <span style="color: #993399">2</span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span></tt></pre>
</font></code>
<hr/>Input File: example/sparse/for_hes_sparsity.cpp

</body>
</html>
