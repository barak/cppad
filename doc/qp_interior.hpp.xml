<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>qp_interior Source Code</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="qp_interior Source Code"/>
<meta name="keywords" id="keywords" content=" qp_interior source code "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_qp_interior.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="qp_interior.cpp.xml" target="_top">Prev</a>
</td><td><a href="qp_box.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>abs_normal</option>
<option>qp_interior</option>
<option>qp_interior.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>ADFun-&gt;</option>
<option>record_adfun</option>
<option>drivers</option>
<option>Forward</option>
<option>Reverse</option>
<option>sparsity_pattern</option>
<option>sparse_derivative</option>
<option>optimize</option>
<option>abs_normal</option>
<option>FunCheck</option>
<option>check_for_nan</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>abs_normal-&gt;</option>
<option>abs_normal_fun</option>
<option>abs_print_mat</option>
<option>abs_eval</option>
<option>simplex_method</option>
<option>lp_box</option>
<option>abs_min_linear</option>
<option>min_nso_linear</option>
<option>qp_interior</option>
<option>qp_box</option>
<option>abs_min_quad</option>
<option>min_nso_quad</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>qp_interior-&gt;</option>
<option>qp_interior.cpp</option>
<option>qp_interior.hpp</option>
</select>
</td>
<td>qp_interior.hpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>qp_interior Source Code</big></big></b></center>
<pre><tt><span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="font-style: italic"><span style="color: #9A1900">// ------------------------------------------------------------------------</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">double</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_max_abs</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> v<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #009900">double</span> max_abs <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>v<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">());</span> j<span style="color: #990000">++)</span>
               max_abs <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">(</span> max_abs<span style="color: #990000">,</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>v<span style="color: #990000">[</span>j<span style="color: #990000">])</span> <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> max_abs<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// ------------------------------------------------------------------------</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_split</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> v<span style="color: #990000">,</span> Vector<span style="color: #990000">&amp;</span> v_x<span style="color: #990000">,</span> Vector<span style="color: #990000">&amp;</span> v_y<span style="color: #990000">,</span> Vector<span style="color: #990000">&amp;</span> v_s
     <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> v_x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="color: #008080">size_t</span> m <span style="color: #990000">=</span> v_y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>v_s<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> m <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>v<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> m <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               v_x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> v<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     v_y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> v<span style="color: #990000">[</span>n <span style="color: #990000">+</span> i<span style="color: #990000">];</span>
               v_s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> v<span style="color: #990000">[</span>n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> i<span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// ------------------------------------------------------------------------</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_join</span></span><span style="color: #990000">(</span>
          Vector<span style="color: #990000">&amp;</span> v<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> v_x<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> v_y<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> v_s
     <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> v_x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="color: #008080">size_t</span> m <span style="color: #990000">=</span> v_y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>v_s<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> m <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>v<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> m <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               v<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> v_x<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               v<span style="color: #990000">[</span>n <span style="color: #990000">+</span> i<span style="color: #990000">]</span> <span style="color: #990000">=</span> v_y<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               v<span style="color: #990000">[</span>n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> i<span style="color: #990000">]</span> <span style="color: #990000">=</span> v_s<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// ------------------------------------------------------------------------</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
     <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_F_0</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> c       <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> C       <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> g       <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> G       <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> x       <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> y       <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> s       <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> g<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="color: #008080">size_t</span> m <span style="color: #990000">=</span> c<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="font-style: italic"><span style="color: #9A1900">// compute r_x(x, y, s) = g + G x + y^T C</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">r_x</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     r_x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> g<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
                    r_x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">+=</span> G<span style="color: #990000">[</span>j <span style="color: #990000">*</span> n <span style="color: #990000">+</span> i<span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
                    r_x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">+=</span> y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> C<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// compute r_y(x, y, s) = C x + c + s</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">r_y</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     r_y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> c<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">+</span> s<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    r_y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">+=</span> C<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// compute r_s(x, y, s) = D(s) * D(y) * 1_m - mu * 1_m</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// where mu = 0</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">r_s</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               r_s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> y<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// combine into one vector</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">F_0</span></span><span style="color: #990000">(</span>n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #000000">qp_interior_join</span></span><span style="color: #990000">(</span>F_0<span style="color: #990000">,</span> r_x<span style="color: #990000">,</span> r_y<span style="color: #990000">,</span> r_s<span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> F_0<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>
<span style="font-style: italic"><span style="color: #9A1900">// BEGIN C++</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> CppAD <span style="color: #FF0000">{</span> <span style="font-style: italic"><span style="color: #9A1900">// BEGIN_CPPAD_NAMESPACE</span></span>

<span style="font-style: italic"><span style="color: #9A1900">// BEGIN PROTOTYPE</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior</span></span><span style="color: #990000">(</span>
     <span style="color: #008080">size_t</span>        level   <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> c       <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> C       <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> g       <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> G       <span style="color: #990000">,</span>
     <span style="color: #009900">double</span>        epsilon <span style="color: #990000">,</span>
     <span style="color: #008080">size_t</span>        maxitr  <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> xin     <span style="color: #990000">,</span>
     Vector<span style="color: #990000">&amp;</span>       xout    <span style="color: #990000">,</span>
     Vector<span style="color: #990000">&amp;</span>       yout    <span style="color: #990000">,</span>
     Vector<span style="color: #990000">&amp;</span>       sout    <span style="color: #990000">)</span>
<span style="font-style: italic"><span style="color: #9A1900">// END PROTOTYPE</span></span>
<span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> m <span style="color: #990000">=</span> c<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> g<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          level <span style="color: #990000">&lt;=</span> <span style="color: #993399">1</span><span style="color: #990000">,</span>
          <span style="color: #FF0000">"qp_interior: level is greater than one"</span>
     <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>C<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> m <span style="color: #990000">*</span> n<span style="color: #990000">,</span>
          <span style="color: #FF0000">"qp_interior: size of C is not m * n"</span>
     <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>G<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> n <span style="color: #990000">*</span> n<span style="color: #990000">,</span>
          <span style="color: #FF0000">"qp_interior: size of G is not n * n"</span>
     <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"start qp_interior</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"c"</span><span style="color: #990000">,</span> m<span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> c<span style="color: #990000">);</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"C"</span><span style="color: #990000">,</span> m<span style="color: #990000">,</span> n<span style="color: #990000">,</span> C<span style="color: #990000">);</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"g"</span><span style="color: #990000">,</span> n<span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> g<span style="color: #990000">);</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"G"</span><span style="color: #990000">,</span> n<span style="color: #990000">,</span> n<span style="color: #990000">,</span> G<span style="color: #990000">);</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"xin"</span><span style="color: #990000">,</span> n<span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> xin<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// compute the maximum absolute element of the problem vectors and matrices</span></span>
     <span style="color: #009900">double</span> max_element <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>C<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">());</span> i<span style="color: #990000">++)</span>
          max_element <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">(</span>max_element <span style="color: #990000">,</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>C<span style="color: #990000">[</span>i<span style="color: #990000">])</span> <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>c<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">());</span> i<span style="color: #990000">++)</span>
          max_element <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">(</span>max_element <span style="color: #990000">,</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>c<span style="color: #990000">[</span>i<span style="color: #990000">])</span> <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>G<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">());</span> i<span style="color: #990000">++)</span>
          max_element <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">(</span>max_element <span style="color: #990000">,</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>G<span style="color: #990000">[</span>i<span style="color: #990000">])</span> <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>g<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">());</span> i<span style="color: #990000">++)</span>
          max_element <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">(</span>max_element <span style="color: #990000">,</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>g<span style="color: #990000">[</span>i<span style="color: #990000">])</span> <span style="color: #990000">);</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="color: #009900">double</span> mu <span style="color: #990000">=</span> <span style="color: #993399">1e-1</span> <span style="color: #990000">*</span> max_element<span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> max_element <span style="color: #990000">==</span> <span style="color: #993399">0.0</span> <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
               std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"end qp_interior: line_search failed</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// initialize x, y, s</span></span>
     xout <span style="color: #990000">=</span> xin<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #009900">double</span> sum <span style="color: #990000">=</span> c<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               sum <span style="color: #990000">+=</span> C<span style="color: #990000">[</span> i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j <span style="color: #990000">]</span> <span style="color: #990000">*</span> xout<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> sum <span style="color: #990000">&gt;</span> <span style="color: #993399">0.0</span> <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span> std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span>
                    <span style="color: #FF0000">"end qp_interior: xin is not in interior of feasible set</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          sout<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">sqrt</span></span><span style="color: #990000">(</span>mu<span style="color: #990000">);</span>
          yout<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">sqrt</span></span><span style="color: #990000">(</span>mu<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// ----------------------------------------------------------------------</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// initialie F_0(xout, yout, sout)</span></span>
     <span style="color: #008080">Vector</span> F_0       <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_F_0</span></span><span style="color: #990000">(</span>c<span style="color: #990000">,</span> C<span style="color: #990000">,</span> g<span style="color: #990000">,</span> G<span style="color: #990000">,</span> xout<span style="color: #990000">,</span> yout<span style="color: #990000">,</span> sout<span style="color: #990000">);</span>
     <span style="color: #009900">double</span> F_max_abs <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_max_abs</span></span><span style="color: #990000">(</span> F_0 <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> itr <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> itr <span style="color: #990000">&lt;=</span> maxitr<span style="color: #990000">;</span> itr<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>
          <span style="font-style: italic"><span style="color: #9A1900">// check for convergence</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> F_max_abs <span style="color: #990000">&lt;=</span> epsilon <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
                    std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"end qp_interior: ok = true</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> itr <span style="color: #990000">==</span> maxitr <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span> std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span>
                    <span style="color: #FF0000">"end qp_interior: max # iterations without convergence</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// compute F_mu(xout, yout, sout)</span></span>
          <span style="color: #008080">Vector</span> F_mu  <span style="color: #990000">=</span> F_0<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               F_mu<span style="color: #990000">[</span>n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> i<span style="color: #990000">]</span> <span style="color: #990000">-=</span> mu<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// r_x, r_y, r_s (xout, yout, sout)</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">r_x</span></span><span style="color: #990000">(</span>n<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">r_y</span></span><span style="color: #990000">(</span>m<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">r_s</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #000000">qp_interior_split</span></span><span style="color: #990000">(</span>F_mu<span style="color: #990000">,</span> r_x<span style="color: #990000">,</span> r_y<span style="color: #990000">,</span> r_s<span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// tmp_m = D(s)^{-1} * [ r_s - D(y) r_y ]</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">tmp_m</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               tmp_m<span style="color: #990000">[</span>i<span style="color: #990000">]</span>  <span style="color: #990000">=</span> <span style="color: #990000">(</span> r_s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">-</span> yout<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> r_y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">)</span> <span style="color: #990000">/</span> sout<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// right_x = C^T * D(s)^{-1} * [ r_s - D(y) r_y ] - r_x</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">right_x</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     right_x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
                    right_x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">+=</span> C<span style="color: #990000">[</span> i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j <span style="color: #990000">]</span> <span style="color: #990000">*</span> tmp_m<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
               right_x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">-=</span> r_x<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// Left_x = G + C^T * D(y / s) * C</span></span>
          <span style="color: #008080">Vector</span> Left_x <span style="color: #990000">=</span> G<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
                    <span style="color: #FF0000">{</span>     <span style="color: #009900">double</span> y_s <span style="color: #990000">=</span> yout<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">/</span> sout<span style="color: #990000">[</span>k<span style="color: #990000">];</span>
                         Left_x<span style="color: #990000">[</span> i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">+=</span> C<span style="color: #990000">[</span>k <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">*</span> y_s <span style="color: #990000">*</span> C<span style="color: #990000">[</span>k <span style="color: #990000">*</span> n <span style="color: #990000">+</span> i<span style="color: #990000">];</span>
                    <span style="color: #FF0000">}</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// delta_x</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">delta_x</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
          <span style="color: #009900">double</span> logdet<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #000000">LuSolve</span></span><span style="color: #990000">(</span>n<span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> Left_x<span style="color: #990000">,</span> right_x<span style="color: #990000">,</span> delta_x<span style="color: #990000">,</span> logdet<span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// C_delta_x = C * delta_x</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">C_delta_x</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     C_delta_x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    C_delta_x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">+=</span> C<span style="color: #990000">[</span> i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j <span style="color: #990000">]</span> <span style="color: #990000">*</span> delta_x<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// delta_y = D(s)^-1 * [D(y) * r_y - r_s + D(y) * C * delta_x]</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">delta_y</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     delta_y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> yout<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> r_y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">-</span> r_s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">+</span> yout<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> C_delta_x<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
               delta_y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">/=</span> sout<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// delta_s = - r_y - C * delta_x</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">delta_s</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               delta_s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #990000">-</span> r_y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">-</span> C_delta_x<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// delta_xys</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">delta_xys</span></span><span style="color: #990000">(</span>n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> m<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #000000">qp_interior_join</span></span><span style="color: #990000">(</span>delta_xys<span style="color: #990000">,</span> delta_x<span style="color: #990000">,</span> delta_y<span style="color: #990000">,</span> delta_s<span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------------------</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// The initial derivative in direction  Delta_xys is equal to</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// the negative of the norm square of F_mu</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// line search parameter lam</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">x</span></span><span style="color: #990000">(</span>n<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">y</span></span><span style="color: #990000">(</span>m<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">s</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
          <span style="color: #009900">double</span>  lam <span style="color: #990000">=</span> <span style="color: #993399">2.0</span><span style="color: #990000">;</span>
          <span style="color: #009900">bool</span> lam_ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span> <span style="color: #990000">!</span> lam_ok <span style="color: #990000">&amp;&amp;</span> lam <span style="color: #990000">&gt;</span> <span style="color: #993399">1e-5</span> <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     lam <span style="color: #990000">=</span> lam <span style="color: #990000">/</span> <span style="color: #993399">2.0</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> xout<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">+</span> lam <span style="color: #990000">*</span> delta_xys<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
               lam_ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               <span style="color: #FF0000">{</span>     y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> yout<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">+</span> lam <span style="color: #990000">*</span> delta_xys<span style="color: #990000">[</span>n <span style="color: #990000">+</span> i<span style="color: #990000">];</span>
                    s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> sout<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">+</span> lam <span style="color: #990000">*</span> delta_xys<span style="color: #990000">[</span>n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> i<span style="color: #990000">];</span>
                    lam_ok <span style="color: #990000">&amp;=</span> s<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">&gt;</span> <span style="color: #993399">0.0</span> <span style="color: #990000">&amp;&amp;</span> y<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">&gt;</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> lam_ok <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="color: #008080">Vector</span> F_mu_tmp <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_F_0</span></span><span style="color: #990000">(</span>c<span style="color: #990000">,</span> C<span style="color: #990000">,</span> g<span style="color: #990000">,</span> G<span style="color: #990000">,</span> x<span style="color: #990000">,</span> y<span style="color: #990000">,</span> s<span style="color: #990000">);</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
                         F_mu_tmp<span style="color: #990000">[</span>n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> i<span style="color: #990000">]</span> <span style="color: #990000">-=</span> mu<span style="color: #990000">;</span>
                    <span style="font-style: italic"><span style="color: #9A1900">// avoid cancellation roundoff in difference of norm squared</span></span>
                    <span style="font-style: italic"><span style="color: #9A1900">// |v + dv|^2         = v^T * v + 2 * v^T * dv + dv^T * dv</span></span>
                    <span style="font-style: italic"><span style="color: #9A1900">// |v + dv|^2 - |v|^2 =           2 * v^T * dv + dv^T * dv</span></span>
                    <span style="color: #009900">double</span> F_norm_sq    <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
                    <span style="color: #009900">double</span> diff_norm_sq <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n <span style="color: #990000">+</span> m <span style="color: #990000">+</span> m<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
                    <span style="color: #FF0000">{</span>     <span style="color: #009900">double</span> dv     <span style="color: #990000">=</span> F_mu_tmp<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">-</span> F_mu<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
                         F_norm_sq    <span style="color: #990000">+=</span> F_mu<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> F_mu<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
                         diff_norm_sq <span style="color: #990000">+=</span> <span style="color: #993399">2.0</span> <span style="color: #990000">*</span> F_mu<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> dv <span style="color: #990000">+</span> dv <span style="color: #990000">*</span> dv<span style="color: #990000">;</span>
                    <span style="color: #FF0000">}</span>
                    lam_ok <span style="color: #990000">&amp;=</span> diff_norm_sq <span style="color: #990000">&lt;</span> <span style="color: #990000">-</span> lam <span style="color: #990000">*</span> F_norm_sq <span style="color: #990000">/</span> <span style="color: #993399">4.0</span><span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="color: #990000">!</span> lam_ok <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
                    std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"end qp_interior: line search failed</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// update current solution</span></span>
          xout <span style="color: #990000">=</span> x<span style="color: #990000">;</span>
          yout <span style="color: #990000">=</span> y<span style="color: #990000">;</span>
          sout <span style="color: #990000">=</span> s<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// updage F_0</span></span>
          F_0       <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_F_0</span></span><span style="color: #990000">(</span>c<span style="color: #990000">,</span> C<span style="color: #990000">,</span> g<span style="color: #990000">,</span> G<span style="color: #990000">,</span> xout<span style="color: #990000">,</span> yout<span style="color: #990000">,</span> sout<span style="color: #990000">);</span>
          F_max_abs <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">qp_interior_max_abs</span></span><span style="color: #990000">(</span> F_0 <span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// update mu</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> F_max_abs <span style="color: #990000">&lt;=</span> <span style="color: #993399">1e1</span> <span style="color: #990000">*</span>  mu <span style="color: #990000">)</span>
               mu <span style="color: #990000">=</span> mu <span style="color: #990000">/</span> <span style="color: #993399">1e2</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"itr = "</span> <span style="color: #990000">&lt;&lt;</span> itr
                    <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">", mu = "</span> <span style="color: #990000">&lt;&lt;</span> mu
                    <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">", lam = "</span> <span style="color: #990000">&lt;&lt;</span> lam
                    <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">", F_max_abs = "</span> <span style="color: #990000">&lt;&lt;</span> F_max_abs <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"xout"</span><span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> n<span style="color: #990000">,</span> xout<span style="color: #990000">);</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
          std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"end qp_interior: progam error</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span> <span style="font-style: italic"><span style="color: #9A1900">// END_CPPAD_NAMESPACE</span></span></tt></pre>

<hr/>Input File: example/abs_normal/qp_interior.omh

</body>
</html>
