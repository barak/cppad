<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>speed_test: Example and test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="speed_test: Example and test"/>
<meta name="keywords" id="keywords" content=" speed_test: example test speed_test "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_speed_test.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="speed_test.xml" target="_top">Prev</a>
</td><td><a href="speedtest.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>speed_test</option>
<option>speed_test.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>speed_test-&gt;</option>
<option>speed_test.cpp</option>
</select>
</td>
<td>speed_test.cpp</td>
<td>Headings</td>
</tr></table><br/>




<center><b><big><big>speed_test: Example and test</big></big></b></center>
<code><font color="blue"><pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/speed_test.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/vector.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span> <span style="font-style: italic"><span style="color: #9A1900">// empty namespace</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">;</span>
     <span style="color: #008080">vector&lt;double&gt;</span> a<span style="color: #990000">,</span> b<span style="color: #990000">,</span> c<span style="color: #990000">;</span>
     <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">test</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> size<span style="color: #990000">,</span> <span style="color: #008080">size_t</span> repeat<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// setup</span></span>
          a<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">resize</span></span><span style="color: #990000">(</span>size<span style="color: #990000">);</span>
          b<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">resize</span></span><span style="color: #990000">(</span>size<span style="color: #990000">);</span>
          c<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">resize</span></span><span style="color: #990000">(</span>size<span style="color: #990000">);</span>
          <span style="color: #008080">size_t</span> i  <span style="color: #990000">=</span> size<span style="color: #990000">;;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span>i<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="color: #990000">--</span>i<span style="color: #990000">;</span>
               a<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>i<span style="color: #990000">);</span>
               b<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #009900">double</span><span style="color: #990000">(</span><span style="color: #993399">2</span> <span style="color: #990000">*</span> i<span style="color: #990000">);</span>
               c<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// operations we are timing</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span>repeat<span style="color: #990000">--)</span>
          <span style="color: #FF0000">{</span>     i <span style="color: #990000">=</span> size<span style="color: #990000">;;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span>i<span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="color: #990000">--</span>i<span style="color: #990000">;</span>
                    c<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">+=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">sqrt</span></span><span style="color: #990000">(</span>a<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> a<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">+</span> b<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> b<span style="color: #990000">[</span>i<span style="color: #990000">]);</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>
<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">speed_test</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// size of the test cases</span></span>
     <span style="color: #008080">vector&lt;size_t&gt;</span> <span style="font-weight: bold"><span style="color: #000000">size_vec</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>
     size_vec<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">40</span><span style="color: #990000">;</span>
     size_vec<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">80</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// minimum amount of time to run test</span></span>
     <span style="color: #009900">double</span> time_min <span style="color: #990000">=</span> <span style="color: #993399">0.5</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// run the test cases</span></span>
     <span style="color: #008080">vector&lt;size_t&gt;</span> <span style="font-weight: bold"><span style="color: #000000">rate_vec</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>
     rate_vec <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">speed_test</span></span><span style="color: #990000">(</span>test<span style="color: #990000">,</span> size_vec<span style="color: #990000">,</span> time_min<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// time per repeat loop (note counting setup or teardown)</span></span>
     <span style="color: #009900">double</span> time_0 <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.</span> <span style="color: #990000">/</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>rate_vec<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]);</span>
     <span style="color: #009900">double</span> time_1 <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.</span> <span style="color: #990000">/</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>rate_vec<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// for this case, time should be linear w.r.t size</span></span>
     <span style="color: #009900">double</span> check    <span style="color: #990000">=</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>size_vec<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">])</span> <span style="color: #990000">*</span> time_0 <span style="color: #990000">/</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>size_vec<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]);</span>
     <span style="color: #009900">double</span> rel_diff <span style="color: #990000">=</span> <span style="color: #990000">(</span>check <span style="color: #990000">-</span> time_1<span style="color: #990000">)</span> <span style="color: #990000">/</span> time_1<span style="color: #990000">;</span>
     ok             <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>rel_diff<span style="color: #990000">)</span> <span style="color: #990000">&lt;=</span> <span style="color: #990000">.</span><span style="color: #993399">1</span><span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="color: #990000">!</span> ok <span style="color: #990000">)</span>
          std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> std<span style="color: #990000">::</span>endl <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"rel_diff = "</span> <span style="color: #990000">&lt;&lt;</span> rel_diff <span style="color: #990000">&lt;&lt;</span> std<span style="color: #990000">::</span>endl<span style="color: #990000">;</span>

     a<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">clear</span></span><span style="color: #990000">();</span>
     b<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">clear</span></span><span style="color: #990000">();</span>
     c<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">clear</span></span><span style="color: #990000">();</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span></tt></pre>
</font></code>
<hr/>Input File: speed/example/speed_test.cpp

</body>
</html>
