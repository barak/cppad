<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>ODE Inverse Problem Definitions: Source Code</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="ODE Inverse Problem Definitions: Source Code"/>
<meta name="keywords" id="keywords" content=" ode inverse problem definitions: source code example "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ipopt_nlp_ode_problem.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="ipopt_nlp_ode_problem.xml" target="_top">Prev</a>
</td><td><a href="ipopt_nlp_ode_simple.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>deprecated</option>
<option>cppad_ipopt_nlp</option>
<option>ipopt_nlp_ode</option>
<option>ipopt_nlp_ode_problem</option>
<option>ipopt_nlp_ode_problem.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_ipopt_nlp-&gt;</option>
<option>ipopt_nlp_get_started.cpp</option>
<option>ipopt_nlp_ode</option>
<option>ipopt_ode_speed.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>ipopt_nlp_ode-&gt;</option>
<option>ipopt_nlp_ode_problem</option>
<option>ipopt_nlp_ode_simple</option>
<option>ipopt_nlp_ode_fast</option>
<option>ipopt_nlp_ode_run.hpp</option>
<option>ipopt_nlp_ode_check.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ipopt_nlp_ode_problem-&gt;</option>
<option>ipopt_nlp_ode_problem.hpp</option>
</select>
</td>
<td>ipopt_nlp_ode_problem.hpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>ODE Inverse Problem Definitions: Source Code</big></big></b></center>
<code><font color="blue"><pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">"../src/cppad_ipopt_nlp.hpp"</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="font-style: italic"><span style="color: #9A1900">//------------------------------------------------------------------</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">typedef</span></span> Ipopt<span style="color: #990000">::</span><span style="color: #008080">Number</span> Number<span style="color: #990000">;</span>
     <span style="color: #008080">Number</span> a0 <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>  <span style="font-style: italic"><span style="color: #9A1900">// simulation value for a[0]</span></span>
     <span style="color: #008080">Number</span> a1 <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">.;</span>  <span style="font-style: italic"><span style="color: #9A1900">// simulation value for a[1]</span></span>
     <span style="color: #008080">Number</span> a2 <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>  <span style="font-style: italic"><span style="color: #9A1900">// simulatioln value for a[2]</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// function used to simulate data</span></span>
     <span style="color: #008080">Number</span> <span style="font-weight: bold"><span style="color: #000000">y_one</span></span><span style="color: #990000">(</span><span style="color: #008080">Number</span> t<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">Number</span> y_1 <span style="color: #990000">=</span>  a0<span style="color: #990000">*</span>a1 <span style="color: #990000">*</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #000000">exp</span></span><span style="color: #990000">(-</span>a2<span style="color: #990000">*</span>t<span style="color: #990000">)</span> <span style="color: #990000">-</span> <span style="font-weight: bold"><span style="color: #000000">exp</span></span><span style="color: #990000">(-</span>a1<span style="color: #990000">*</span>t<span style="color: #990000">))</span> <span style="color: #990000">/</span> <span style="color: #990000">(</span>a1 <span style="color: #990000">-</span> a2<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> y_1<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// time points were we have data (no data at first point)</span></span>
     <span style="color: #009900">double</span> s<span style="color: #990000">[]</span> <span style="color: #990000">=</span> <span style="color: #FF0000">{</span> <span style="color: #993399">0.0</span><span style="color: #990000">,</span>        <span style="color: #993399">0.5</span><span style="color: #990000">,</span>        <span style="color: #993399">1.0</span><span style="color: #990000">,</span>        <span style="color: #993399">1.5</span><span style="color: #990000">,</span>        <span style="color: #993399">2.0</span> <span style="color: #FF0000">}</span><span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// Simulated data for case with no noise (first point is not used)</span></span>
     <span style="color: #009900">double</span> z<span style="color: #990000">[]</span> <span style="color: #990000">=</span> <span style="color: #FF0000">{</span> <span style="color: #993399">0.0</span><span style="color: #990000">,</span>  <span style="font-weight: bold"><span style="color: #000000">y_one</span></span><span style="color: #990000">(</span><span style="color: #993399">0.5</span><span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">y_one</span></span><span style="color: #990000">(</span><span style="color: #993399">1.0</span><span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">y_one</span></span><span style="color: #990000">(</span><span style="color: #993399">1.5</span><span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">y_one</span></span><span style="color: #990000">(</span><span style="color: #993399">2.0</span><span style="color: #990000">)</span> <span style="color: #FF0000">}</span><span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// Number of measurement values</span></span>
     <span style="color: #008080">size_t</span> Nz  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">sizeof</span></span><span style="color: #990000">(</span>z<span style="color: #990000">)</span> <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #0000FF">sizeof</span></span><span style="color: #990000">(</span>z<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">])</span> <span style="color: #990000">-</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// Number of components in the function y(t, a)</span></span>
     <span style="color: #008080">size_t</span> Ny  <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// Number of components in the vectro a</span></span>
     <span style="color: #008080">size_t</span> Na  <span style="color: #990000">=</span> <span style="color: #993399">3</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Initial Condition function, F(a) = y(t, a) at t = 0</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// (for this particular example)</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
     <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">eval_F</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Vector</span> <span style="color: #990000">&amp;</span>a<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">F</span></span><span style="color: #990000">(</span>Ny<span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">// y_0 (t) = a[0]*exp(-a[1] * t)</span></span>
          F<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> a<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">];</span>
          <span style="font-style: italic"><span style="color: #9A1900">// y_1 (t) =</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// a[0]*a[1]*(exp(-a[2] * t) - exp(-a[1] * t))/(a[1] - a[2])</span></span>
          F<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> F<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// G(y, a) =  \partial_t y(t, a); i.e. the differential equation</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// (for this particular example)</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
     <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">eval_G</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Vector</span> <span style="color: #990000">&amp;</span>y <span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Vector</span> <span style="color: #990000">&amp;</span>a<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">G</span></span><span style="color: #990000">(</span>Ny<span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">// y_0 (t) = a[0]*exp(-a[1] * t)</span></span>
          G<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #990000">-</span>a<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> y<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">];</span>
          <span style="font-style: italic"><span style="color: #9A1900">// y_1 (t) =</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// a[0]*a[1]*(exp(-a[2] * t) - exp(-a[1] * t))/(a[1] - a[2])</span></span>
          G<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #990000">+</span>a<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> y<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> a<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> y<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> G<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// H(i, y, a) = contribution to objective at i-th data point</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// (for this particular example)</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Scalar</span><span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
     <span style="color: #008080">Scalar</span> <span style="font-weight: bold"><span style="color: #000000">eval_H</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Vector</span> <span style="color: #990000">&amp;</span>y<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Vector</span> <span style="color: #990000">&amp;</span>a<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// This particular H is for a case where y_1 (t) is measured</span></span>
          <span style="color: #008080">Scalar</span> diff <span style="color: #990000">=</span> z<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">-</span> y<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> diff <span style="color: #990000">*</span> diff<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// function used to count the number of calls to eval_r</span></span>
     <span style="color: #008080">size_t</span> <span style="font-weight: bold"><span style="color: #000000">count_eval_r</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">static</span></span> <span style="color: #008080">size_t</span> count <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="color: #990000">++</span>count<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> count<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span></tt></pre>
</font></code>
<hr/>Input File: cppad_ipopt/example/ode_problem.hpp

</body>
</html>
