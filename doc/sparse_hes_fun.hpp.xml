<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Source: sparse_hes_fun</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Source: sparse_hes_fun"/>
<meta name="keywords" id="keywords" content=" source: sparse_hes_fun source "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_hes_fun.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="sparse_hes_fun.cpp.xml" target="_top">Prev</a>
</td><td><a href="uniform_01.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>speed</option>
<option>speed_utility</option>
<option>sparse_hes_fun</option>
<option>sparse_hes_fun.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>speed-&gt;</option>
<option>speed_main</option>
<option>speed_utility</option>
<option>speed_double</option>
<option>speed_adolc</option>
<option>speed_cppad</option>
<option>speed_fadbad</option>
<option>speed_sacado</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>speed_utility-&gt;</option>
<option>det_by_lu</option>
<option>det_of_minor</option>
<option>det_by_minor</option>
<option>det_33</option>
<option>det_grad_33</option>
<option>mat_sum_sq</option>
<option>ode_evaluate</option>
<option>sparse_jac_fun</option>
<option>sparse_hes_fun</option>
<option>uniform_01</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>sparse_hes_fun-&gt;</option>
<option>sparse_hes_fun.cpp</option>
<option>sparse_hes_fun.hpp</option>
</select>
</td>
<td>sparse_hes_fun.hpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>Source: sparse_hes_fun</big></big></b></center>
<code><font color="blue"># ifndef CPPAD_SPARSE_HES_FUN_HPP
<code><span style='white-space: nowrap'><br/>
</span></code># define CPPAD_SPARSE_HES_FUN_HPP

<pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/core/cppad_assert.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_numeric_type.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/vector.hpp&gt;</span>

<span style="font-style: italic"><span style="color: #9A1900">// following needed by gcc under fedora 17 so that exp(double) is defined</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/base_require.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> CppAD <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Float</span><span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">FloatVector</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">sparse_hes_fun</span></span><span style="color: #990000">(</span>
          <span style="color: #008080">size_t</span>                       n    <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> FloatVector<span style="color: #990000">&amp;</span>           x    <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>size_t<span style="color: #990000">&gt;&amp;</span> row  <span style="color: #990000">,</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>size_t<span style="color: #990000">&gt;&amp;</span> col  <span style="color: #990000">,</span>
          <span style="color: #008080">size_t</span>                       p    <span style="color: #990000">,</span>
          FloatVector<span style="color: #990000">&amp;</span>                fp    <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>
          <span style="font-style: italic"><span style="color: #9A1900">// check numeric type specifications</span></span>
          CheckNumericType<span style="color: #990000">&lt;</span>Float<span style="color: #990000">&gt;();</span>

          <span style="font-style: italic"><span style="color: #9A1900">// check value of p</span></span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
               p <span style="color: #990000">==</span> <span style="color: #993399">0</span> <span style="color: #990000">||</span> p <span style="color: #990000">==</span> <span style="color: #993399">2</span><span style="color: #990000">,</span>
               <span style="color: #FF0000">"sparse_hes_fun: p != 0 and p != 2"</span>
          <span style="color: #990000">);</span>

          <span style="color: #008080">size_t</span> K <span style="color: #990000">=</span> row<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="color: #008080">size_t</span> i<span style="color: #990000">,</span> j<span style="color: #990000">,</span> k<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> p <span style="color: #990000">==</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
               fp<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> K<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
                    fp<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span>
          <span style="color: #FF0000">}</span>

          <span style="font-style: italic"><span style="color: #9A1900">// determine which diagonal entries are present in row[k], col[k]</span></span>
          CppAD<span style="color: #990000">::</span><span style="color: #008080">vector&lt;size_t&gt;</span> <span style="font-weight: bold"><span style="color: #000000">diagonal</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               diagonal<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> K<span style="color: #990000">;</span>   <span style="font-style: italic"><span style="color: #9A1900">// no diagonal entry for this row</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> K<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> row<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">==</span> col<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> diagonal<span style="color: #990000">[</span>row<span style="color: #990000">[</span>k<span style="color: #990000">]]</span> <span style="color: #990000">==</span> K <span style="color: #990000">);</span>
                    <span style="font-style: italic"><span style="color: #9A1900">// index of the diagonal entry</span></span>
                    diagonal<span style="color: #990000">[</span> row<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">]</span> <span style="color: #990000">=</span> k<span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>

          <span style="font-style: italic"><span style="color: #9A1900">// determine which entries must be multiplied by a factor of two</span></span>
          CppAD<span style="color: #990000">::</span><span style="color: #008080">vector&lt;Float&gt;</span> <span style="font-weight: bold"><span style="color: #000000">factor</span></span><span style="color: #990000">(</span>K<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> K<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     factor<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">);</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> k1 <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k1 <span style="color: #990000">&lt;</span> K<span style="color: #990000">;</span> k1<span style="color: #990000">++)</span>
               <span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> reflected <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
                    reflected <span style="color: #990000">&amp;=</span> k <span style="color: #990000">!=</span> k1<span style="color: #990000">;</span>
                    reflected <span style="color: #990000">&amp;=</span> row<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">!=</span> col<span style="color: #990000">[</span>k<span style="color: #990000">];</span>
                    reflected <span style="color: #990000">&amp;=</span> row<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">==</span> col<span style="color: #990000">[</span>k1<span style="color: #990000">];</span>
                    reflected <span style="color: #990000">&amp;=</span> col<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">==</span> row<span style="color: #990000">[</span>k1<span style="color: #990000">];</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> reflected <span style="color: #990000">)</span>
                         factor<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">);</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>

          <span style="color: #008080">Float</span> t<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> K<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     i    <span style="color: #990000">=</span> row<span style="color: #990000">[</span>k<span style="color: #990000">];</span>
               j    <span style="color: #990000">=</span> col<span style="color: #990000">[</span>k<span style="color: #990000">];</span>
               t    <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">exp</span></span><span style="color: #990000">(</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">);</span>
               <span style="font-weight: bold"><span style="color: #0000FF">switch</span></span><span style="color: #990000">(</span>p<span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">case</span></span> <span style="color: #993399">0</span><span style="color: #990000">:</span>
                    fp<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">+=</span> t<span style="color: #990000">;</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">break</span></span><span style="color: #990000">;</span>

                    <span style="font-weight: bold"><span style="color: #0000FF">case</span></span> <span style="color: #993399">2</span><span style="color: #990000">:</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> i <span style="color: #990000">==</span> j <span style="color: #990000">)</span>
                    <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// dt_dxi = 2.0 * xi * t</span></span>
                         fp<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">+=</span> <span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">)</span> <span style="color: #990000">+</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">4</span><span style="color: #990000">)</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">)</span> <span style="color: #990000">*</span> t<span style="color: #990000">;</span>
                    <span style="color: #FF0000">}</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>
                    <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// dt_dxi = xj * t</span></span>
                         fp<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">+=</span> factor<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">*</span> <span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">+</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">)</span> <span style="color: #990000">*</span> t<span style="color: #990000">;</span>
                         <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> diagonal<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">!=</span> K <span style="color: #990000">)</span>
                         <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> ki <span style="color: #990000">=</span> diagonal<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
                              fp<span style="color: #990000">[</span>ki<span style="color: #990000">]</span> <span style="color: #990000">+=</span> x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">*</span> t<span style="color: #990000">;</span>
                         <span style="color: #FF0000">}</span>
                         <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> diagonal<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">!=</span> K <span style="color: #990000">)</span>
                         <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> kj <span style="color: #990000">=</span> diagonal<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
                              fp<span style="color: #990000">[</span>kj<span style="color: #990000">]</span> <span style="color: #990000">+=</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> x<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> t<span style="color: #990000">;</span>
                         <span style="color: #FF0000">}</span>
                    <span style="color: #FF0000">}</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">break</span></span><span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>

     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span></tt></pre>
# endif
</font></code>


<hr/>Input File: omh/sparse_hes_fun.omh

</body>
</html>
