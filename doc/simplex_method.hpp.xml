<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>simplex_method Source Code</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="simplex_method Source Code"/>
<meta name="keywords" id="keywords" content=" simplex_method source code "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_simplex_method.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="simplex_method.cpp.xml" target="_top">Prev</a>
</td><td><a href="lp_box.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>abs_normal</option>
<option>simplex_method</option>
<option>simplex_method.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>ADFun-&gt;</option>
<option>record_adfun</option>
<option>drivers</option>
<option>Forward</option>
<option>Reverse</option>
<option>sparsity_pattern</option>
<option>sparse_derivative</option>
<option>optimize</option>
<option>abs_normal</option>
<option>FunCheck</option>
<option>check_for_nan</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>abs_normal-&gt;</option>
<option>abs_normal_fun</option>
<option>abs_print_mat</option>
<option>abs_eval</option>
<option>simplex_method</option>
<option>lp_box</option>
<option>abs_min_linear</option>
<option>min_nso_linear</option>
<option>qp_interior</option>
<option>qp_box</option>
<option>abs_min_quad</option>
<option>min_nso_quad</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>simplex_method-&gt;</option>
<option>simplex_method.cpp</option>
<option>simplex_method.hpp</option>
</select>
</td>
<td>simplex_method.hpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>simplex_method Source Code</big></big></b></center>
<pre><tt><span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> CppAD <span style="color: #FF0000">{</span> <span style="font-style: italic"><span style="color: #9A1900">// BEGIN_CPPAD_NAMESPACE</span></span>

<span style="font-style: italic"><span style="color: #9A1900">// BEGIN PROTOTYPE</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">simplex_method</span></span><span style="color: #990000">(</span>
     <span style="color: #008080">size_t</span>        level   <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> A       <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> b       <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Vector<span style="color: #990000">&amp;</span> c       <span style="color: #990000">,</span>
     <span style="color: #008080">size_t</span>        maxitr  <span style="color: #990000">,</span>
     Vector<span style="color: #990000">&amp;</span>       xout    <span style="color: #990000">)</span>
<span style="font-style: italic"><span style="color: #9A1900">// END PROTOTYPE</span></span>
<span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// number of equations</span></span>
     <span style="color: #008080">size_t</span> ne  <span style="color: #990000">=</span> b<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
     <span style="font-style: italic"><span style="color: #9A1900">// number of x variables</span></span>
     <span style="color: #008080">size_t</span> nx <span style="color: #990000">=</span> c<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>A<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> ne <span style="color: #990000">*</span> nx <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&lt;=</span> <span style="color: #993399">2</span> <span style="color: #990000">);</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"start simplex_method</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"A"</span><span style="color: #990000">,</span> ne<span style="color: #990000">,</span> nx<span style="color: #990000">,</span> A<span style="color: #990000">);</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"b"</span><span style="color: #990000">,</span> ne<span style="color: #990000">,</span>  <span style="color: #993399">1</span><span style="color: #990000">,</span> b<span style="color: #990000">);</span>
          CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"c"</span><span style="color: #990000">,</span> nx<span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> c<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// variables (columns) in the Tableau:</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// x: the original primary variables with size n</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// s: slack variables, one for each equation</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// a: auxillary variables, one for each negative right hand size</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// r: right hand size for equations</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// Determine number of auxillary variables</span></span>
     <span style="color: #008080">size_t</span> na <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> ne<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> b<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">&gt;</span> <span style="color: #993399">0.0</span> <span style="color: #990000">)</span>
               <span style="color: #990000">++</span>na<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// size of columns in the Tableau</span></span>
     <span style="color: #008080">size_t</span> nc <span style="color: #990000">=</span> nx <span style="color: #990000">+</span> ne <span style="color: #990000">+</span> na <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// number of rows in Tableau, the equations plust two objectives</span></span>
     <span style="color: #008080">size_t</span> nr <span style="color: #990000">=</span> ne <span style="color: #990000">+</span> <span style="color: #993399">2</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Initilize Tableau as zero</span></span>
     <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">T</span></span><span style="color: #990000">(</span>nr <span style="color: #990000">*</span> nc<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> nr <span style="color: #990000">*</span> nc<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          T<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// initialize basic variable flag as false</span></span>
     CppAD<span style="color: #990000">::</span><span style="color: #008080">vector&lt;size_t&gt;</span> <span style="font-weight: bold"><span style="color: #000000">basic</span></span><span style="color: #990000">(</span>nc<span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nc<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          basic<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// For i = 0 , ... , m-1, place the Equations</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// sum_j A_{i,j} * x_j + b_i &lt;= 0 in Tableau</span></span>
     na <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> <span style="font-style: italic"><span style="color: #9A1900">// use as index of next auxillary variable</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> ne<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> b<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">&gt;</span> <span style="color: #993399">0.0</span><span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// convert to - sum_j A_{i,j} x_j - b_i &gt;= 0</span></span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nx<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #990000">-</span> A<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nx <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
               <span style="font-style: italic"><span style="color: #9A1900">// slack variable has negative coefficient</span></span>
               T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nx <span style="color: #990000">+</span> i<span style="color: #990000">)]</span> <span style="color: #990000">=</span> <span style="color: #990000">-</span><span style="color: #993399">1.0</span><span style="color: #990000">;</span>
               <span style="font-style: italic"><span style="color: #9A1900">// auxillary variable is basic for this constraint</span></span>
               T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nx <span style="color: #990000">+</span> ne <span style="color: #990000">+</span> na<span style="color: #990000">)]</span> <span style="color: #990000">=</span> <span style="color: #993399">1.0</span><span style="color: #990000">;</span>
               basic<span style="color: #990000">[</span>nx <span style="color: #990000">+</span> ne <span style="color: #990000">+</span> na<span style="color: #990000">]</span>        <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
               <span style="font-style: italic"><span style="color: #9A1900">// right hand side</span></span>
               T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nc <span style="color: #990000">-</span> <span style="color: #993399">1</span><span style="color: #990000">)]</span> <span style="color: #990000">=</span> b<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
               <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
               <span style="color: #990000">++</span>na<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// sum_j A_{i,j} x_j + b_i &lt;= 0</span></span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nx<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">=</span> A<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nx <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
               <span style="font-style: italic"><span style="color: #9A1900">//  slack variable is also basic</span></span>
               T<span style="color: #990000">[</span> i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nx <span style="color: #990000">+</span> i<span style="color: #990000">)</span> <span style="color: #990000">]</span>  <span style="color: #990000">=</span> <span style="color: #993399">1.0</span><span style="color: #990000">;</span>
               basic<span style="color: #990000">[</span>nx <span style="color: #990000">+</span> i<span style="color: #990000">]</span>           <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
               <span style="font-style: italic"><span style="color: #9A1900">// right hand side for equations</span></span>
               T<span style="color: #990000">[</span> i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nc <span style="color: #990000">-</span> <span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #990000">-</span> b<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// na is back to its original value</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> nc <span style="color: #990000">==</span> nx <span style="color: #990000">+</span> ne <span style="color: #990000">+</span> na <span style="color: #990000">+</span> <span style="color: #993399">1</span> <span style="color: #990000">);</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// place the equation objective equation in Tablueau</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// row ne corresponds to the equation z - sum_j c_j x_j = 0</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// column index for z is nx + ne + na</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nx<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          T<span style="color: #990000">[</span>ne <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #990000">-</span> c<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// row ne+1 corresponds to the equation w - a_0 - ... - a_{na-1} = 0</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// column index for w is nx + ne + na +1</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> na<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          T<span style="color: #990000">[(</span>ne <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nx <span style="color: #990000">+</span> ne <span style="color: #990000">+</span> j<span style="color: #990000">)]</span> <span style="color: #990000">=</span> <span style="color: #990000">-</span><span style="color: #993399">1.0</span><span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// fix auxillary objective so coefficients in w</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// for auxillary variables are zero</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> na<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> ja  <span style="color: #990000">=</span> nx <span style="color: #990000">+</span> ne <span style="color: #990000">+</span> k<span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> ia  <span style="color: #990000">=</span> ne<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> ne<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> ja<span style="color: #990000">]</span> <span style="color: #990000">!=</span> <span style="color: #993399">0.0</span> <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> ja<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #993399">1.0</span> <span style="color: #990000">);</span>
                    <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> T<span style="color: #990000">[(</span>ne <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> ja<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #990000">-</span><span style="color: #993399">1.0</span> <span style="color: #990000">)</span>
                    <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> ia <span style="color: #990000">==</span> ne <span style="color: #990000">);</span>
                    ia <span style="color: #990000">=</span> i<span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> ia <span style="color: #990000">&lt;</span> ne <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nc<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               T<span style="color: #990000">[(</span>ne <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">+=</span> T<span style="color: #990000">[</span>ia <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
          <span style="font-style: italic"><span style="color: #9A1900">// The result in column ja is zero, avoid roundoff</span></span>
          T<span style="color: #990000">[(</span>ne <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> ja<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// index of current objective</span></span>
     <span style="color: #008080">size_t</span> iobj <span style="color: #990000">=</span> ne<span style="color: #990000">;</span>  <span style="font-style: italic"><span style="color: #9A1900">// original objective z</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> na <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
          iobj <span style="color: #990000">=</span> ne <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">;</span> <span style="font-style: italic"><span style="color: #9A1900">// auxillary objective w</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// simplex interations</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> itr <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> itr <span style="color: #990000">&lt;</span> maxitr<span style="color: #990000">;</span> itr<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// current value for xout</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nx<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     xout<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> basic<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// determine which row of column j is non-zero</span></span>
                    xout<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">quiet_NaN</span></span><span style="color: #990000">();</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> ne<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
                    <span style="color: #FF0000">{</span>     <span style="color: #009900">double</span> T_ij <span style="color: #990000">=</span> T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
                         <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> T_ij <span style="color: #990000">==</span> <span style="color: #993399">0.0</span> <span style="color: #990000">||</span> T_ij <span style="color: #990000">==</span> <span style="color: #993399">1.0</span> <span style="color: #990000">);</span>
                         <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> T_ij <span style="color: #990000">==</span> <span style="color: #993399">1.0</span> <span style="color: #990000">)</span>
                         <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// corresponding value in right hand side</span></span>
                              xout<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">=</span> T<span style="color: #990000">[</span> i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nc<span style="color: #990000">-</span><span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">];</span>
                         <span style="color: #FF0000">}</span>
                    <span style="color: #FF0000">}</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">1</span> <span style="color: #990000">)</span>
               CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"T"</span><span style="color: #990000">,</span> nr<span style="color: #990000">,</span> nc<span style="color: #990000">,</span> T<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">abs_print_mat</span></span><span style="color: #990000">(</span><span style="color: #FF0000">"x"</span><span style="color: #990000">,</span> nx<span style="color: #990000">,</span> <span style="color: #993399">1</span><span style="color: #990000">,</span> xout<span style="color: #990000">);</span>
               std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"itr = "</span> <span style="color: #990000">&lt;&lt;</span> itr<span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> iobj <span style="color: #990000">&gt;</span> ne <span style="color: #990000">)</span>
                    std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">", auxillary objective w = "</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>
                    std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">", objective z = "</span><span style="color: #990000">;</span>
               std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> T<span style="color: #990000">[</span>iobj <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nc <span style="color: #990000">-</span> <span style="color: #993399">1</span><span style="color: #990000">)]</span> <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// number of variables depends on objective</span></span>
          <span style="color: #008080">size_t</span> nv <span style="color: #990000">=</span> nx <span style="color: #990000">+</span> ne<span style="color: #990000">;</span>   <span style="font-style: italic"><span style="color: #9A1900">// (x, s)</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> iobj <span style="color: #990000">==</span> ne <span style="color: #990000">+</span> <span style="color: #993399">1</span> <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// check if we have solved the auxillary problem</span></span>
               <span style="color: #009900">bool</span> done <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> na<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> basic<span style="color: #990000">[</span>nx <span style="color: #990000">+</span> ne <span style="color: #990000">+</span> k<span style="color: #990000">]</span> <span style="color: #990000">)</span>
                         done <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> done <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// switch to optimizing the original objective</span></span>
                    iobj <span style="color: #990000">=</span> ne<span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
               <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>
                    nv <span style="color: #990000">=</span> nx <span style="color: #990000">+</span> ne <span style="color: #990000">+</span> na<span style="color: #990000">;</span> <span style="font-style: italic"><span style="color: #9A1900">// (x, s, a)</span></span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// determine variable with maximuim coefficient in objective row</span></span>
          <span style="color: #009900">double</span> cmax <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> jmax <span style="color: #990000">=</span> nv<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nv<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> T<span style="color: #990000">[</span>iobj <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">&gt;</span> cmax <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> <span style="color: #990000">!</span> basic<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">);</span>
                    cmax <span style="color: #990000">=</span> T<span style="color: #990000">[</span> iobj <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
                    jmax <span style="color: #990000">=</span> j<span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// check for solution</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> jmax <span style="color: #990000">==</span> nv <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> iobj <span style="color: #990000">==</span> ne <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
                         std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"end simplex_method</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
                    std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"end_simples_method: no feasible solution</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// We will increase the j-th variable.</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// Determine which row will be the pivot row.</span></span>
          <span style="color: #009900">double</span> rmin <span style="color: #990000">=</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">infinity</span></span><span style="color: #990000">();</span>
          <span style="color: #008080">size_t</span> imin <span style="color: #990000">=</span> ne<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> ne<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> jmax<span style="color: #990000">]</span> <span style="color: #990000">&gt;</span> <span style="color: #993399">0.0</span> <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="color: #009900">double</span> r <span style="color: #990000">=</span>     T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> <span style="color: #990000">(</span>nc<span style="color: #990000">-</span><span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">]</span> <span style="color: #990000">/</span> T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> jmax<span style="color: #990000">];</span>
                    <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> r <span style="color: #990000">&lt;</span> rmin <span style="color: #990000">)</span>
                    <span style="color: #FF0000">{</span>     rmin <span style="color: #990000">=</span> r<span style="color: #990000">;</span>
                         imin <span style="color: #990000">=</span> i<span style="color: #990000">;</span>
                    <span style="color: #FF0000">}</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> imin <span style="color: #990000">==</span> ne <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// not auxillary objective</span></span>
               <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> iobj <span style="color: #990000">==</span> ne <span style="color: #990000">);</span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span> std<span style="color: #990000">::</span>cout
                    <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"end simplex_method: objective is unbounded below</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="color: #009900">double</span> pivot <span style="color: #990000">=</span> T<span style="color: #990000">[</span>imin <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> jmax<span style="color: #990000">];</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// Which variable is changing from basic to non-basic.</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// Initilaize as not yet determined.</span></span>
          <span style="color: #008080">size_t</span> basic2not <span style="color: #990000">=</span> nc<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// Divide row imin by pivot element</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nc<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> basic<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">&amp;&amp;</span> T<span style="color: #990000">[</span>imin <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #993399">1.0</span> <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> basic2not <span style="color: #990000">==</span> nc <span style="color: #990000">);</span>
                    basic2not <span style="color: #990000">=</span> j<span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
               T<span style="color: #990000">[</span>imin <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">/=</span> pivot<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// The result in column jmax is one, avoid roundoff</span></span>
          T<span style="color: #990000">[</span>imin <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> jmax <span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1.0</span><span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// Check that we found the variable going from basic to non-basic</span></span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_UNKNOWN</span></span><span style="color: #990000">(</span> basic2not <span style="color: #990000">&lt;</span> nv <span style="color: #990000">&amp;&amp;</span> basic2not <span style="color: #990000">!=</span> jmax <span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// convert variable for column jmax to basic</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// and for column basic2not to non-basic</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> nr<span style="color: #990000">;</span> i<span style="color: #990000">++)</span> <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> i <span style="color: #990000">!=</span> imin <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="color: #009900">double</span> r <span style="color: #990000">=</span>     T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> jmax <span style="color: #990000">]</span> <span style="color: #990000">/</span> T<span style="color: #990000">[</span>imin <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> jmax<span style="color: #990000">];</span>
               <span style="font-style: italic"><span style="color: #9A1900">// row_i = row_i - r * row_imin</span></span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> nc<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">-=</span> r <span style="color: #990000">*</span> T<span style="color: #990000">[</span>imin <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> j<span style="color: #990000">];</span>
               <span style="font-style: italic"><span style="color: #9A1900">// The result in column jmax is zero, avoid roundoff</span></span>
               T<span style="color: #990000">[</span>i <span style="color: #990000">*</span> nc <span style="color: #990000">+</span> jmax<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// update flag for basic variables</span></span>
          basic<span style="color: #990000">[</span> basic2not <span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          basic<span style="color: #990000">[</span> jmax <span style="color: #990000">]</span>      <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> level <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span> std<span style="color: #990000">::</span>cout
          <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"end simplex_method: maximum # iterations without solution</span><span style="color: #CC33CC">\n</span><span style="color: #FF0000">"</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span> <span style="font-style: italic"><span style="color: #9A1900">// END_CPPAD_NAMESPACE</span></span></tt></pre>

<hr/>Input File: example/abs_normal/simplex_method.omh

</body>
</html>
