<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Tracking Use of New and Delete: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Tracking Use of New and Delete: Example and Test"/>
<meta name="keywords" id="keywords" content=" tracking use new delete: example test delete "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_tracknewdel.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="tracknewdel.xml" target="_top">Prev</a>
</td><td><a href="omp_alloc.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>deprecated</option>
<option>TrackNewDel</option>
<option>TrackNewDel.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>Appendix-&gt;</option>
<option>Faq</option>
<option>Theory</option>
<option>glossary</option>
<option>Bib</option>
<option>wish_list</option>
<option>whats_new</option>
<option>deprecated</option>
<option>compare_c</option>
<option>numeric_ad</option>
<option>addon</option>
<option>License</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>deprecated-&gt;</option>
<option>include_deprecated</option>
<option>FunDeprecated</option>
<option>CompareChange</option>
<option>omp_max_thread</option>
<option>TrackNewDel</option>
<option>omp_alloc</option>
<option>memory_leak</option>
<option>epsilon</option>
<option>test_vector</option>
<option>cppad_ipopt_nlp</option>
<option>old_atomic</option>
<option>zdouble</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>TrackNewDel-&gt;</option>
<option>TrackNewDel.cpp</option>
</select>
</td>
<td>TrackNewDel.cpp</td>
<td>Headings</td>
</tr></table><br/>


<center><b><big><big>Tracking Use of New and Delete: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/track_new_del.hpp&gt;</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">track_new_del</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// initial count</span></span>
     <span style="color: #008080">size_t</span> count <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TRACK_COUNT</span></span><span style="color: #990000">();</span>

     <span style="font-style: italic"><span style="color: #9A1900">// allocate an array of lenght 5</span></span>
     <span style="color: #009900">double</span> <span style="color: #990000">*</span>ptr <span style="color: #990000">=</span> CPPAD_NULL<span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span>  newlen <span style="color: #990000">=</span> <span style="color: #993399">5</span><span style="color: #990000">;</span>
     ptr <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TRACK_NEW_VEC</span></span><span style="color: #990000">(</span>newlen<span style="color: #990000">,</span> ptr<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// copy data into the array</span></span>
     <span style="color: #008080">size_t</span> ncopy <span style="color: #990000">=</span> newlen<span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> i<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> ncopy<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          ptr<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>i<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// extend the buffer to be lenght 10</span></span>
     newlen <span style="color: #990000">=</span> <span style="color: #993399">10</span><span style="color: #990000">;</span>
     ptr    <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TRACK_EXTEND</span></span><span style="color: #990000">(</span>newlen<span style="color: #990000">,</span> ncopy<span style="color: #990000">,</span> ptr<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// copy data into the new part of the array</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> ncopy<span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> newlen<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          ptr<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>i<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check the values in the array</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> newlen<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>ptr<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>i<span style="color: #990000">));</span>

     <span style="font-style: italic"><span style="color: #9A1900">// free the memory allocated since previous call to TrackCount</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TRACK_DEL_VEC</span></span><span style="color: #990000">(</span>ptr<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check for memory leak</span></span>
     ok <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>count <span style="color: #990000">==</span> <span style="font-weight: bold"><span style="color: #000000">CPPAD_TRACK_COUNT</span></span><span style="color: #990000">());</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: test_more/track_new_del.cpp

</body>
</html>
