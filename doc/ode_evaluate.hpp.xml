<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Source: ode_evaluate</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Source: ode_evaluate"/>
<meta name="keywords" id="keywords" content=" source: ode_evaluate source "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ode_evaluate.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="ode_evaluate.cpp.xml" target="_top">Prev</a>
</td><td><a href="sparse_jac_fun.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>speed</option>
<option>speed_utility</option>
<option>ode_evaluate</option>
<option>ode_evaluate.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>speed-&gt;</option>
<option>speed_main</option>
<option>speed_utility</option>
<option>speed_double</option>
<option>speed_adolc</option>
<option>speed_cppad</option>
<option>speed_fadbad</option>
<option>speed_sacado</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>speed_utility-&gt;</option>
<option>det_by_lu</option>
<option>det_of_minor</option>
<option>det_by_minor</option>
<option>det_33</option>
<option>det_grad_33</option>
<option>mat_sum_sq</option>
<option>ode_evaluate</option>
<option>sparse_jac_fun</option>
<option>sparse_hes_fun</option>
<option>uniform_01</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ode_evaluate-&gt;</option>
<option>ode_evaluate.cpp</option>
<option>ode_evaluate.hpp</option>
</select>
</td>
<td>ode_evaluate.hpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>Source: ode_evaluate</big></big></b></center>
<code><font color="blue"># ifndef CPPAD_ODE_EVALUATE_HPP
<code><span style='white-space: nowrap'><br/>
</span></code># define CPPAD_ODE_EVALUATE_HPP

<pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/ode_err_control.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/runge_45.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> CppAD <span style="color: #FF0000">{</span>

     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Float</span><span style="color: #990000">&gt;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">ode_evaluate_fun</span> <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">public</span></span><span style="color: #990000">:</span>
          <span style="font-style: italic"><span style="color: #9A1900">// Given that y_i (0) = x_i,</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// the following y_i (t) satisfy the ODE below:</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// y_0 (t) = x[0]</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// y_1 (t) = x[1] + x[0] * t</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// y_2 (t) = x[2] + x[1] * t + x[0] * t^2/2</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// y_3 (t) = x[3] + x[2] * t + x[1] * t^2/2 + x[0] * t^3 / 3!</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// ...</span></span>
          <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">Ode</span></span><span style="color: #990000">(</span>
               <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Float<span style="color: #990000">&amp;</span>                    t<span style="color: #990000">,</span>
               <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>Float<span style="color: #990000">&gt;&amp;</span>     y<span style="color: #990000">,</span>
               CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>Float<span style="color: #990000">&gt;&amp;</span>           f<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> n  <span style="color: #990000">=</span> y<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
               f<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span>      <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> k <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
                    f<span style="color: #990000">[</span>k<span style="color: #990000">]</span> <span style="color: #990000">=</span> y<span style="color: #990000">[</span>k<span style="color: #990000">-</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span><span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Float</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">ode_evaluate</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>Float<span style="color: #990000">&gt;&amp;</span> x  <span style="color: #990000">,</span>
          <span style="color: #008080">size_t</span>                      p  <span style="color: #990000">,</span>
          CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">&lt;</span>Float<span style="color: #990000">&gt;&amp;</span>       fp <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">typedef</span></span> <span style="color: #008080">vector&lt;Float&gt;</span> VectorFloat<span style="color: #990000">;</span>

          <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span> p <span style="color: #990000">==</span> <span style="color: #993399">0</span> <span style="color: #990000">||</span> p <span style="color: #990000">==</span> <span style="color: #993399">1</span><span style="color: #990000">,</span>
               <span style="color: #FF0000">"ode_evaluate: p is not zero or one"</span>
          <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
               <span style="color: #990000">((</span>p<span style="color: #990000">==</span><span style="color: #993399">0</span><span style="color: #990000">)</span> <span style="color: #990000">&amp;</span> <span style="color: #990000">(</span>fp<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()==</span>n<span style="color: #990000">))</span> <span style="color: #990000">||</span> <span style="color: #990000">((</span>p<span style="color: #990000">==</span><span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">&amp;</span> <span style="color: #990000">(</span>fp<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()==</span>n<span style="color: #990000">*</span>n<span style="color: #990000">)),</span>
               <span style="color: #FF0000">"ode_evaluate: the size of fp is not correct"</span>
          <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> p <span style="color: #990000">==</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// function that defines the ode</span></span>
               <span style="color: #008080">ode_evaluate_fun&lt;Float&gt;</span> F<span style="color: #990000">;</span>

               <span style="font-style: italic"><span style="color: #9A1900">// number of Runge45 steps to use</span></span>
               <span style="color: #008080">size_t</span> M <span style="color: #990000">=</span> <span style="color: #993399">10</span><span style="color: #990000">;</span>

               <span style="font-style: italic"><span style="color: #9A1900">// initial and final time</span></span>
               <span style="color: #008080">Float</span> ti <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
               <span style="color: #008080">Float</span> tf <span style="color: #990000">=</span> <span style="color: #993399">1.0</span><span style="color: #990000">;</span>

               <span style="font-style: italic"><span style="color: #9A1900">// initial value for y(x, t); i.e. y(x, 0)</span></span>
               <span style="font-style: italic"><span style="color: #9A1900">// (is a reference to x)</span></span>
               <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> VectorFloat<span style="color: #990000">&amp;</span> yi <span style="color: #990000">=</span> x<span style="color: #990000">;</span>

               <span style="font-style: italic"><span style="color: #9A1900">// final value for y(x, t); i.e., y(x, 1)</span></span>
               <span style="font-style: italic"><span style="color: #9A1900">// (is a reference to fp)</span></span>
               VectorFloat<span style="color: #990000">&amp;</span> yf <span style="color: #990000">=</span> fp<span style="color: #990000">;</span>

               <span style="font-style: italic"><span style="color: #9A1900">// Use fourth order Runge-Kutta to solve ODE</span></span>
               yf <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">Runge45</span></span><span style="color: #990000">(</span>F<span style="color: #990000">,</span> M<span style="color: #990000">,</span> ti<span style="color: #990000">,</span> tf<span style="color: #990000">,</span> yi<span style="color: #990000">);</span>

               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">/* Compute derivaitve of y(x, 1) w.r.t x</span></span>
<span style="font-style: italic"><span style="color: #9A1900">          y_0 (x, t) = x[0]</span></span>
<span style="font-style: italic"><span style="color: #9A1900">          y_1 (x, t) = x[1] + x[0] * t</span></span>
<span style="font-style: italic"><span style="color: #9A1900">          y_2 (x, t) = x[2] + x[1] * t + x[0] * t^2/2</span></span>
<span style="font-style: italic"><span style="color: #9A1900">          y_3 (x, t) = x[3] + x[2] * t + x[1] * t^2/2 + x[0] * t^3 / 3!</span></span>
<span style="font-style: italic"><span style="color: #9A1900">          ...</span></span>
<span style="font-style: italic"><span style="color: #9A1900">          */</span></span>
          <span style="color: #008080">size_t</span> i<span style="color: #990000">,</span> j<span style="color: #990000">,</span> k<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    fp<span style="color: #990000">[</span> i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j <span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">0.0</span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="color: #008080">size_t</span> factorial <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> k <span style="color: #990000">&gt;</span> <span style="color: #993399">1</span> <span style="color: #990000">)</span>
                    factorial <span style="color: #990000">*=</span> k<span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> k<span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// partial w.r.t x[i-k] of x[i-k] * t^k / k!</span></span>
                    j <span style="color: #990000">=</span> i <span style="color: #990000">-</span> k<span style="color: #990000">;</span>
                    fp<span style="color: #990000">[</span> i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j <span style="color: #990000">]</span> <span style="color: #990000">+=</span> <span style="color: #993399">1.0</span> <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span>factorial<span style="color: #990000">);</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span></tt></pre>
# endif
</font></code>


<hr/>Input File: omh/ode_evaluate.omh

</body>
</html>
