<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>exp_eps: Implementation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="exp_eps: Implementation"/>
<meta name="keywords" id="keywords" content=" exp_eps: implementation exp_eps "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_exp_eps.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="exp_eps.xml" target="_top">Prev</a>
</td><td><a href="exp_eps.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Introduction</option>
<option>exp_eps</option>
<option>exp_eps.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Introduction-&gt;</option>
<option>get_started.cpp</option>
<option>exp_2</option>
<option>exp_eps</option>
<option>exp_apx_main.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>exp_eps-&gt;</option>
<option>exp_eps.hpp</option>
<option>exp_eps.cpp</option>
<option>exp_eps_for0</option>
<option>exp_eps_for1</option>
<option>exp_eps_rev1</option>
<option>exp_eps_for2</option>
<option>exp_eps_rev2</option>
<option>exp_eps_cppad</option>
</select>
</td>
<td>exp_eps.hpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>exp_eps: Implementation</big></big></b></center>
<code><font color="blue"><pre><tt><span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Type</span><span style="color: #990000">&gt;</span>
<span style="color: #008080">Type</span> <span style="font-weight: bold"><span style="color: #000000">exp_eps</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Type</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Type</span> <span style="color: #990000">&amp;</span>epsilon<span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// abs_x = |x|</span></span>
     <span style="color: #008080">Type</span> abs_x <span style="color: #990000">=</span> x<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">)</span> <span style="color: #990000">&gt;</span> x <span style="color: #990000">)</span>
          abs_x <span style="color: #990000">=</span> <span style="color: #990000">-</span> x<span style="color: #990000">;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// initialize</span></span>
     <span style="color: #009900">int</span>  k    <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// initial order</span></span>
     <span style="color: #008080">Type</span> term <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>         <span style="font-style: italic"><span style="color: #9A1900">// term = |x|^k / k !</span></span>
     <span style="color: #008080">Type</span> sum  <span style="color: #990000">=</span> term<span style="color: #990000">;</span>       <span style="font-style: italic"><span style="color: #9A1900">// initial sum</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span>term <span style="color: #990000">&gt;</span> epsilon<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     k         <span style="color: #990000">=</span> k <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// order for next term</span></span>
          <span style="color: #008080">Type</span> temp <span style="color: #990000">=</span> term <span style="color: #990000">*</span> abs_x<span style="color: #990000">;</span>   <span style="font-style: italic"><span style="color: #9A1900">// term = |x|^k / (k-1)!</span></span>
          term      <span style="color: #990000">=</span> temp <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span>k<span style="color: #990000">);</span> <span style="font-style: italic"><span style="color: #9A1900">// term = |x|^k / k !</span></span>
          sum       <span style="color: #990000">=</span> sum <span style="color: #990000">+</span> term<span style="color: #990000">;</span>     <span style="font-style: italic"><span style="color: #9A1900">// sum  = 1 + ... + |x|^k / k !</span></span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// In the case where x is negative, use exp(x) = 1 / exp(-|x|)</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">)</span> <span style="color: #990000">&gt;</span> x <span style="color: #990000">)</span>
          sum <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Type</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">/</span> sum<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> sum<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span></tt></pre>
</font></code>
<hr/>Input File: introduction/exp_apx/exp_eps.omh

</body>
</html>
