<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Interpolation With Out Retaping: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Interpolation With Out Retaping: Example and Test"/>
<meta name="keywords" id="keywords" content=" interpolation with out retaping: example test interpolate tape retape see also "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_interp_onetape.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="tape_index.cpp.xml" target="_top">Prev</a>
</td><td><a href="interp_retape.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>Discrete</option>
<option>interp_onetape.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>AD-&gt;</option>
<option>ad_ctor</option>
<option>ad_assign</option>
<option>Convert</option>
<option>ADValued</option>
<option>BoolValued</option>
<option>VecAD</option>
<option>base_require</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>ADValued-&gt;</option>
<option>Arithmetic</option>
<option>unary_standard_math</option>
<option>binary_math</option>
<option>CondExp</option>
<option>Discrete</option>
<option>numeric_limits</option>
<option>atomic</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Discrete-&gt;</option>
<option>tape_index.cpp</option>
<option>interp_onetape.cpp</option>
<option>interp_retape.cpp</option>
</select>
</td>
<td>interp_onetape.cpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>See Also</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>Interpolation With Out Retaping: Example and Test</big></big></b></center>
<br/>
<b><big><a name="See Also" id="See Also">See Also</a></big></b>

<br/>
<a href="interp_retape.cpp.xml" target="_top"><span style='white-space: nowrap'>interp_retape.cpp</span></a>

<code><span style='white-space: nowrap'><br/>
<br/>
</span></code><code><font color="blue"><pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/cppad.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cassert&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cmath&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="color: #009900">double</span> ArgumentValue<span style="color: #990000">[]</span> <span style="color: #990000">=</span> <span style="color: #FF0000">{</span>
          <span style="color: #990000">.</span><span style="color: #993399">0</span> <span style="color: #990000">,</span>
          <span style="color: #990000">.</span><span style="color: #993399">2</span> <span style="color: #990000">,</span>
          <span style="color: #990000">.</span><span style="color: #993399">4</span> <span style="color: #990000">,</span>
          <span style="color: #990000">.</span><span style="color: #993399">8</span> <span style="color: #990000">,</span>
          <span style="color: #993399">1</span><span style="color: #990000">.</span>
     <span style="color: #FF0000">}</span><span style="color: #990000">;</span>
     <span style="color: #009900">double</span> FunctionValue<span style="color: #990000">[]</span> <span style="color: #990000">=</span> <span style="color: #FF0000">{</span>
          std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">sin</span></span><span style="color: #990000">(</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">)</span> <span style="color: #990000">,</span>
          std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">sin</span></span><span style="color: #990000">(</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">)</span> <span style="color: #990000">,</span>
          std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">sin</span></span><span style="color: #990000">(</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">)</span> <span style="color: #990000">,</span>
          std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">sin</span></span><span style="color: #990000">(</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">)</span> <span style="color: #990000">,</span>
          std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">sin</span></span><span style="color: #990000">(</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">4</span><span style="color: #990000">]</span> <span style="color: #990000">)</span>
     <span style="color: #FF0000">}</span><span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> TableLength <span style="color: #990000">=</span> <span style="color: #993399">5</span><span style="color: #990000">;</span>

     <span style="color: #008080">size_t</span> <span style="font-weight: bold"><span style="color: #000000">Index</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">double</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// determine the index j such that x is between</span></span>
          <span style="font-style: italic"><span style="color: #9A1900">// ArgumentValue[j] and ArgumentValue[j+1]</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">static</span></span> <span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">while</span></span> <span style="color: #990000">(</span> x <span style="color: #990000">&lt;</span> ArgumentValue<span style="color: #990000">[</span>j<span style="color: #990000">]</span> <span style="color: #990000">&amp;&amp;</span> j <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
               j<span style="color: #990000">--;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">while</span></span> <span style="color: #990000">(</span> x <span style="color: #990000">&gt;</span> ArgumentValue<span style="color: #990000">[</span>j<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">&amp;&amp;</span> j <span style="color: #990000">&lt;</span> TableLength <span style="color: #990000">-</span> <span style="color: #993399">2</span><span style="color: #990000">)</span>
               j<span style="color: #990000">++;</span>
          <span style="font-style: italic"><span style="color: #9A1900">// assert conditions that must be true given logic above</span></span>
          <span style="font-weight: bold"><span style="color: #000000">assert</span></span><span style="color: #990000">(</span> j <span style="color: #990000">&gt;=</span> <span style="color: #993399">0</span> <span style="color: #990000">&amp;&amp;</span> j <span style="color: #990000">&lt;</span> TableLength <span style="color: #990000">-</span> <span style="color: #993399">1</span> <span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> j<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>

     <span style="color: #009900">double</span> <span style="font-weight: bold"><span style="color: #000000">Argument</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">double</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Index</span></span><span style="color: #990000">(</span>x<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ArgumentValue<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
     <span style="color: #FF0000">}</span>
     <span style="color: #009900">double</span> <span style="font-weight: bold"><span style="color: #000000">Function</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">double</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> j <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Index</span></span><span style="color: #990000">(</span>x<span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> FunctionValue<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
     <span style="color: #FF0000">}</span>

     <span style="color: #009900">double</span> <span style="font-weight: bold"><span style="color: #000000">Slope</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">double</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> j  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Index</span></span><span style="color: #990000">(</span>x<span style="color: #990000">);</span>
          <span style="color: #009900">double</span> dx <span style="color: #990000">=</span> ArgumentValue<span style="color: #990000">[</span>j<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> ArgumentValue<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
          <span style="color: #009900">double</span> dy <span style="color: #990000">=</span> FunctionValue<span style="color: #990000">[</span>j<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> FunctionValue<span style="color: #990000">[</span>j<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> dy <span style="color: #990000">/</span> dx<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_DISCRETE_FUNCTION</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">,</span> Argument<span style="color: #990000">)</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_DISCRETE_FUNCTION</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">,</span> Function<span style="color: #990000">)</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_DISCRETE_FUNCTION</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">,</span> Slope<span style="color: #990000">)</span>
<span style="color: #FF0000">}</span>


<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">interp_onetape</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>

     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>AD<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>NearEqual<span style="color: #990000">;</span>
     <span style="color: #009900">double</span> eps99 <span style="color: #990000">=</span> <span style="color: #993399">99.0</span> <span style="color: #990000">*</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">epsilon</span></span><span style="color: #990000">();</span>

     <span style="font-style: italic"><span style="color: #9A1900">// domain space vector</span></span>
     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>AD<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;)</span> <span style="font-weight: bold"><span style="color: #000000">X</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
     X<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #990000">.</span><span style="color: #993399">4</span> <span style="color: #990000">*</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">+</span> <span style="color: #990000">.</span><span style="color: #993399">6</span> <span style="color: #990000">*</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">];</span>

     <span style="font-style: italic"><span style="color: #9A1900">// declare independent variables and start tape recording</span></span>
     CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">Independent</span></span><span style="color: #990000">(</span>X<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// evaluate piecewise linear interpolant at X[0]</span></span>
     <span style="color: #008080">AD&lt;double&gt;</span> A <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Argument</span></span><span style="color: #990000">(</span>X<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]);</span>
     <span style="color: #008080">AD&lt;double&gt;</span> F <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Function</span></span><span style="color: #990000">(</span>X<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]);</span>
     <span style="color: #008080">AD&lt;double&gt;</span> S <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Slope</span></span><span style="color: #990000">(</span>X<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]);</span>
     <span style="color: #008080">AD&lt;double&gt;</span> I <span style="color: #990000">=</span> F <span style="color: #990000">+</span> <span style="color: #990000">(</span>X<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> A<span style="color: #990000">)</span> <span style="color: #990000">*</span> S<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// range space vector</span></span>
     <span style="color: #008080">size_t</span> m <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span>AD<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;)</span> <span style="font-weight: bold"><span style="color: #000000">Y</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>
     Y<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> I<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// create f: X -&gt; Y and stop tape recording</span></span>
     CppAD<span style="color: #990000">::</span><span style="color: #008080">ADFun&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">f</span></span><span style="color: #990000">(</span>X<span style="color: #990000">,</span> Y<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// vectors for arguments to the function object f</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #000000">x</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>   <span style="font-style: italic"><span style="color: #9A1900">// argument values</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #000000">y</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>   <span style="font-style: italic"><span style="color: #9A1900">// function values</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #000000">dx</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>  <span style="font-style: italic"><span style="color: #9A1900">// differentials in x space</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_TESTVECTOR</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #000000">dy</span></span><span style="color: #990000">(</span>m<span style="color: #990000">);</span>  <span style="font-style: italic"><span style="color: #9A1900">// differentials in y space</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// to check function value we use the fact that X[0] is between</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// ArgumentValue[1] and ArgumentValue[2]</span></span>
     x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span>          <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Value</span></span><span style="color: #990000">(</span>X<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]);</span>
     <span style="color: #009900">double</span> delta  <span style="color: #990000">=</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">];</span>
     <span style="color: #009900">double</span> check  <span style="color: #990000">=</span> FunctionValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> <span style="color: #990000">(</span>x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">])</span> <span style="color: #990000">/</span> delta
                   <span style="color: #990000">+</span> FunctionValue<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> <span style="color: #990000">(</span>ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">])</span> <span style="color: #990000">/</span> delta<span style="color: #990000">;</span>
     ok  <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>Y<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">],</span> check<span style="color: #990000">,</span> eps99<span style="color: #990000">,</span> eps99<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// evaluate f where x has different value</span></span>
     x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span>   <span style="color: #990000">=</span> <span style="color: #990000">.</span><span style="color: #993399">7</span> <span style="color: #990000">*</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">+</span> <span style="color: #990000">.</span><span style="color: #993399">3</span> <span style="color: #990000">*</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">];</span>
     y      <span style="color: #990000">=</span> f<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">Forward</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">,</span> x<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check function value</span></span>
     delta  <span style="color: #990000">=</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">];</span>
     check  <span style="color: #990000">=</span> FunctionValue<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> <span style="color: #990000">(</span>x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">])</span> <span style="color: #990000">/</span> delta
                   <span style="color: #990000">+</span> FunctionValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]</span> <span style="color: #990000">*</span> <span style="color: #990000">(</span>ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> x<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">])</span> <span style="color: #990000">/</span> delta<span style="color: #990000">;</span>
     ok  <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>y<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">],</span> check<span style="color: #990000">,</span> eps99<span style="color: #990000">,</span> eps99<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// evaluate partials w.r.t. x[0]</span></span>
     dx<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>
     dy    <span style="color: #990000">=</span> f<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">Forward</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">,</span> dx<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check that the derivative is the slope</span></span>
     check <span style="color: #990000">=</span> <span style="color: #990000">(</span>FunctionValue<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> FunctionValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">])</span>
           <span style="color: #990000">/</span> <span style="color: #990000">(</span>ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">3</span><span style="color: #990000">]</span> <span style="color: #990000">-</span> ArgumentValue<span style="color: #990000">[</span><span style="color: #993399">2</span><span style="color: #990000">]);</span>
     ok   <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>dy<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">],</span> check<span style="color: #990000">,</span> eps99<span style="color: #990000">,</span> eps99<span style="color: #990000">);</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/general/interp_onetape.cpp

</body>
</html>
