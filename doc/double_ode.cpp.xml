<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Double Speed: Ode Solution</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Double Speed: Ode Solution"/>
<meta name="keywords" id="keywords" content=" double speed: ode solution link_ode speed specifications implementation "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_double_ode.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="double_mat_mul.cpp.xml" target="_top">Prev</a>
</td><td><a href="double_poly.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>speed</option>
<option>speed_double</option>
<option>double_ode.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>speed-&gt;</option>
<option>speed_main</option>
<option>speed_utility</option>
<option>speed_double</option>
<option>speed_adolc</option>
<option>speed_cppad</option>
<option>speed_fadbad</option>
<option>speed_sacado</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>speed_double-&gt;</option>
<option>double_det_minor.cpp</option>
<option>double_det_lu.cpp</option>
<option>double_mat_mul.cpp</option>
<option>double_ode.cpp</option>
<option>double_poly.cpp</option>
<option>double_sparse_hessian.cpp</option>
<option>double_sparse_jacobian.cpp</option>
</select>
</td>
<td>double_ode.cpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Specifications</option>
<option>Implementation</option>
</select>
</td>
</tr></table><br/>



<center><b><big><big>Double Speed: Ode Solution</big></big></b></center>
<br/>
<b><big><a name="Specifications" id="Specifications">Specifications</a></big></b>
<br/>
See <a href="link_ode.xml" target="_top"><span style='white-space: nowrap'>link_ode</span></a>
.

<br/>
<br/>
<b><big><a name="Implementation" id="Implementation">Implementation</a></big></b>


<code><font color='blue'><pre style='display:inline'> 
# include &lt;cstring&gt;
# include &lt;cppad/utility/vector.hpp&gt;
# include &lt;cppad/speed/ode_evaluate.hpp&gt;
# include &lt;cppad/speed/uniform_01.hpp&gt;

// Note that CppAD uses global_memory at the main program level
extern bool
	global_onetape, global_atomic, global_optimize;

bool link_ode(
	size_t                     size       ,
	size_t                     repeat     ,
	CppAD::vector&lt;double&gt;      &amp;x         ,
	CppAD::vector&lt;double&gt;      &amp;jacobian
)
{
	if(global_onetape||global_atomic||global_optimize)
		return false;
	// -------------------------------------------------------------
	// setup
	assert( x.size() == size );

	size_t n = size;

	size_t m = 0;
	CppAD::vector&lt;double&gt; f(n);

	while(repeat--)
	{	// choose next x value
		uniform_01(n, x);

		// evaluate function
		CppAD::ode_evaluate(x, m, f);

	}
	size_t i;
	for(i = 0; i &lt; n; i++)
		jacobian[i] = f[i];
	return true;
}
</pre></font></code>


<hr/>Input File: speed/double/ode.cpp

</body>
</html>
