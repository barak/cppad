<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Object that Runs a Group of Tests</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Object that Runs a Group of Tests"/>
<meta name="keywords" id="keywords" content=" object that runs group tests syntax purpose width test name memory_ok ok example "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_test_boolofvoid_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="time_test.cpp.xml" target="_top">Prev</a>
</td><td><a href="numerictype.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>test_boolofvoid</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>test_boolofvoid</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>group</option>
<option>width</option>
<option>test</option>
<option>name</option>
<option>memory_ok</option>
<option>ok</option>
<option>Example</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>Object that Runs a Group of Tests</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>

<code><font color="blue"><span style='white-space: nowrap'>test_boolofvoid&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Run</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>group</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>width</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>Run</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>test</span></font></i><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>name</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>ok</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>Run</span></font></i><font color="blue"><span style='white-space: nowrap'>.summary(</span></font><i><font color="black"><span style='white-space: nowrap'>memory_ok</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br/>
<br/>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br/>
The object 
<code><i><font color="black"><span style='white-space: nowrap'>Run</span></font></i></code>
 is used to run a group of tests functions
and report the results on standard output.

<br/>
<br/>
<b><big><a name="group" id="group">group</a></big></b>
<br/>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;std::string&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>group</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is the name for this group of tests.

<br/>
<br/>
<b><big><a name="width" id="width">width</a></big></b>
<br/>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>width</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is the number of columns used to display the name of each test.
It must be greater than the maximum number of characters in a test name.

<br/>
<br/>
<b><big><a name="test" id="test">test</a></big></b>
<br/>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>test</span></font></i><font color="blue"><span style='white-space: nowrap'>(void)<br/>
</span></font></code>
It is a function that returns true (when the test passes) and false
otherwise.

<br/>
<br/>
<b><big><a name="name" id="name">name</a></big></b>
<br/>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;std::string&amp;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>name</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is the name for the corresponding 
<code><i><font color="black"><span style='white-space: nowrap'>test</span></font></i></code>
.

<br/>
<br/>
<b><big><a name="memory_ok" id="memory_ok">memory_ok</a></big></b>
<br/>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;bool&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>memory_ok</span></font></i><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>
It is false if a memory leak is detected (and true otherwise).

<br/>
<br/>
<b><big><a name="ok" id="ok">ok</a></big></b>
<br/>
This is true if all of the tests pass (including the memory leak test),
otherwise it is false.

<br/>
<br/>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br/>
See any of the main programs in the example directory; e.g.,
<code><font color="blue">example/ipopt_solve.cpp</font></code>.


<hr/>Input File: cppad/utility/test_boolofvoid.hpp

</body>
</html>
