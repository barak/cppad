<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Compare AD with Base Objects: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Compare AD with Base Objects: Example and Test"/>
<meta name="keywords" id="keywords" content=" compare ad with base objects: example test Nearequalext "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_near_equal_ext.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="nearequalext.xml" target="_top">Prev</a>
</td><td><a href="boolfun.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>BoolValued</option>
<option>NearEqualExt</option>
<option>near_equal_ext.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>AD-&gt;</option>
<option>ad_ctor</option>
<option>ad_assign</option>
<option>Convert</option>
<option>ADValued</option>
<option>BoolValued</option>
<option>VecAD</option>
<option>base_require</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>BoolValued-&gt;</option>
<option>Compare</option>
<option>NearEqualExt</option>
<option>BoolFun</option>
<option>ParVar</option>
<option>EqualOpSeq</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>NearEqualExt-&gt;</option>
<option>near_equal_ext.cpp</option>
</select>
</td>
<td>near_equal_ext.cpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>Compare AD with Base Objects: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/cppad.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;complex&gt;</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">NearEqualExt</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>AD<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>NearEqual<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// double</span></span>
     <span style="color: #009900">double</span> x    <span style="color: #990000">=</span> <span style="color: #993399">1.00000</span><span style="color: #990000">;</span>
     <span style="color: #009900">double</span> y    <span style="color: #990000">=</span> <span style="color: #993399">1.00001</span><span style="color: #990000">;</span>
     <span style="color: #009900">double</span> a    <span style="color: #990000">=</span>  <span style="color: #990000">.</span><span style="color: #993399">00005</span><span style="color: #990000">;</span>
     <span style="color: #009900">double</span> r    <span style="color: #990000">=</span>  <span style="color: #990000">.</span><span style="color: #993399">00005</span><span style="color: #990000">;</span>
     <span style="color: #009900">double</span> zero <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// AD&lt;double&gt;</span></span>
     <span style="color: #008080">AD&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">ax</span></span><span style="color: #990000">(</span>x<span style="color: #990000">);</span>
     <span style="color: #008080">AD&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">ay</span></span><span style="color: #990000">(</span>y<span style="color: #990000">);</span>

     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>ax<span style="color: #990000">,</span> ay<span style="color: #990000">,</span> zero<span style="color: #990000">,</span> a<span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>ax<span style="color: #990000">,</span> y<span style="color: #990000">,</span>  r<span style="color: #990000">,</span> zero<span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>x<span style="color: #990000">,</span> ay<span style="color: #990000">,</span>  r<span style="color: #990000">,</span>    a<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// std::complex&lt;double&gt;</span></span>
     <span style="color: #008080">AD&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">cx</span></span><span style="color: #990000">(</span>x<span style="color: #990000">);</span>
     <span style="color: #008080">AD&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">cy</span></span><span style="color: #990000">(</span>y<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// AD&lt; std::complex&lt;double&gt; &gt;</span></span>
     <span style="color: #008080">AD&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">acx</span></span><span style="color: #990000">(</span>x<span style="color: #990000">);</span>
     <span style="color: #008080">AD&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">acy</span></span><span style="color: #990000">(</span>y<span style="color: #990000">);</span>

     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>acx<span style="color: #990000">,</span> acy<span style="color: #990000">,</span> zero<span style="color: #990000">,</span> a<span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>acx<span style="color: #990000">,</span>  cy<span style="color: #990000">,</span> r<span style="color: #990000">,</span> zero<span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>acx<span style="color: #990000">,</span>   y<span style="color: #990000">,</span> r<span style="color: #990000">,</span>    a<span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span> cx<span style="color: #990000">,</span> acy<span style="color: #990000">,</span> r<span style="color: #990000">,</span>    a<span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>  x<span style="color: #990000">,</span> acy<span style="color: #990000">,</span> r<span style="color: #990000">,</span>    a<span style="color: #990000">);</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/near_equal_ext.cpp

</body>
</html>
