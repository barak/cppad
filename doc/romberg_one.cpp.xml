<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>One Dimensional Romberg Integration: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="One Dimensional Romberg Integration: Example and Test"/>
<meta name="keywords" id="keywords" content=" one dimensional romberg integration: example test "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_romberg_one.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="rombergone.xml" target="_top">Prev</a>
</td><td><a href="rombergmul.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>RombergOne</option>
<option>romberg_one.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>RombergOne-&gt;</option>
<option>romberg_one.cpp</option>
</select>
</td>
<td>romberg_one.cpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>One Dimensional Romberg Integration: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/romberg_one.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/near_equal.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Fun</span> <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">private</span></span><span style="color: #990000">:</span>
          <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">size_t</span> degree<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">public</span></span><span style="color: #990000">:</span>
          <span style="font-style: italic"><span style="color: #9A1900">// constructor</span></span>
          <span style="font-weight: bold"><span style="color: #000000">Fun</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> degree_<span style="color: #990000">)</span> <span style="color: #990000">:</span> <span style="font-weight: bold"><span style="color: #000000">degree</span></span><span style="color: #990000">(</span>degree_<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span> <span style="color: #FF0000">}</span>

          <span style="font-style: italic"><span style="color: #9A1900">// function F(x) = x^degree</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Type</span><span style="color: #990000">&gt;</span>
          <span style="color: #008080">Type</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">()</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Type</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> i<span style="color: #990000">;</span>
               <span style="color: #008080">Type</span>   f <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> degree<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
                    f <span style="color: #990000">*=</span> x<span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> f<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span><span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">RombergOne</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> i<span style="color: #990000">;</span>

     <span style="color: #008080">size_t</span> degree <span style="color: #990000">=</span> <span style="color: #993399">4</span><span style="color: #990000">;</span>
     <span style="color: #008080">Fun</span> <span style="font-weight: bold"><span style="color: #000000">F</span></span><span style="color: #990000">(</span>degree<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// arguments to RombergOne</span></span>
     <span style="color: #009900">double</span> a <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
     <span style="color: #009900">double</span> b <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>
     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> <span style="color: #993399">4</span><span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> p<span style="color: #990000">;</span>
     <span style="color: #009900">double</span> r<span style="color: #990000">,</span> e<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// int_a^b F(x) dx = [ b^(degree+1) - a^(degree+1) ] / (degree+1)</span></span>
     <span style="color: #009900">double</span> bpow <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>
     <span style="color: #009900">double</span> apow <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;=</span> degree<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     bpow <span style="color: #990000">*=</span> b<span style="color: #990000">;</span>
          apow <span style="color: #990000">*=</span> a<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="color: #009900">double</span> check <span style="color: #990000">=</span> <span style="color: #990000">(</span>bpow <span style="color: #990000">-</span> apow<span style="color: #990000">)</span> <span style="color: #990000">/</span> <span style="color: #990000">(</span>degree<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// step size corresponding to r</span></span>
     <span style="color: #009900">double</span> step <span style="color: #990000">=</span> <span style="color: #990000">(</span>b <span style="color: #990000">-</span> a<span style="color: #990000">)</span> <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #000000">exp</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #000000">log</span></span><span style="color: #990000">(</span><span style="color: #993399">2</span><span style="color: #990000">.)*(</span>n<span style="color: #990000">-</span><span style="color: #993399">1</span><span style="color: #990000">));</span>
     <span style="font-style: italic"><span style="color: #9A1900">// step size corresponding to error estimate</span></span>
     step <span style="color: #990000">*=</span> <span style="color: #993399">2</span><span style="color: #990000">.;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// step size raised to a power</span></span>
     <span style="color: #009900">double</span> spow <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>

     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>p <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> p <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> p<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     spow <span style="color: #990000">=</span> spow <span style="color: #990000">*</span> step <span style="color: #990000">*</span> step<span style="color: #990000">;</span>

          r <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">RombergOne</span></span><span style="color: #990000">(</span>F<span style="color: #990000">,</span> a<span style="color: #990000">,</span> b<span style="color: #990000">,</span> n<span style="color: #990000">,</span> p<span style="color: #990000">,</span> e<span style="color: #990000">);</span>

          ok  <span style="color: #990000">&amp;=</span> e <span style="color: #990000">&lt;</span> <span style="color: #990000">(</span>degree<span style="color: #990000">+</span><span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">*</span> spow<span style="color: #990000">;</span>
          ok  <span style="color: #990000">&amp;=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>check<span style="color: #990000">,</span> r<span style="color: #990000">,</span> <span style="color: #993399">0</span><span style="color: #990000">.,</span> e<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/romberg_one.cpp

</body>
</html>
