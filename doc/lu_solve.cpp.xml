<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>LuSolve With Complex Arguments: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="LuSolve With Complex Arguments: Example and Test"/>
<meta name="keywords" id="keywords" content=" lusolve with complex arguments: example test "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_lu_solve.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="lusolve.xml" target="_top">Prev</a>
</td><td><a href="lu_solve.hpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>LuDetAndSolve</option>
<option>LuSolve</option>
<option>lu_solve.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>LuDetAndSolve-&gt;</option>
<option>LuSolve</option>
<option>LuFactor</option>
<option>LuInvert</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>LuSolve-&gt;</option>
<option>lu_solve.cpp</option>
<option>lu_solve.hpp</option>
</select>
</td>
<td>lu_solve.cpp</td>
<td>Headings</td>
</tr></table><br/>



<center><b><big><big>LuSolve With Complex Arguments: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/lu_solve.hpp&gt;</span>       <span style="font-style: italic"><span style="color: #9A1900">// for CppAD::LuSolve</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/near_equal.hpp&gt;</span>     <span style="font-style: italic"><span style="color: #9A1900">// for CppAD::NearEqual</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/vector.hpp&gt;</span>  <span style="font-style: italic"><span style="color: #9A1900">// for CppAD::vector</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;complex&gt;</span>               <span style="font-style: italic"><span style="color: #9A1900">// for std::complex</span></span>

<span style="font-weight: bold"><span style="color: #0000FF">typedef</span></span> std<span style="color: #990000">::</span><span style="color: #008080">complex&lt;double&gt;</span> Complex<span style="color: #990000">;</span>    <span style="font-style: italic"><span style="color: #9A1900">// define the Complex type</span></span>
<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">LuSolve</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span>  ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> <span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> CppAD<span style="color: #990000">;</span>

     <span style="color: #008080">size_t</span>   n <span style="color: #990000">=</span> <span style="color: #993399">3</span><span style="color: #990000">;</span>           <span style="font-style: italic"><span style="color: #9A1900">// number rows in A and B</span></span>
     <span style="color: #008080">size_t</span>   m <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">;</span>           <span style="font-style: italic"><span style="color: #9A1900">// number columns in B, X and S</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// A is an n by n matrix, B, X, and S are n by m matrices</span></span>
     CppAD<span style="color: #990000">::</span><span style="color: #008080">vector&lt;Complex&gt;</span> <span style="font-weight: bold"><span style="color: #000000">A</span></span><span style="color: #990000">(</span>n <span style="color: #990000">*</span> n<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">B</span></span><span style="color: #990000">(</span>n <span style="color: #990000">*</span> m<span style="color: #990000">),</span> <span style="font-weight: bold"><span style="color: #000000">X</span></span><span style="color: #990000">(</span>n <span style="color: #990000">*</span> m<span style="color: #990000">)</span> <span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #000000">S</span></span><span style="color: #990000">(</span>n <span style="color: #990000">*</span> m<span style="color: #990000">);</span>

     <span style="color: #008080">Complex</span>  logdet<span style="color: #990000">;</span>          <span style="font-style: italic"><span style="color: #9A1900">// log of determinant of A</span></span>
     <span style="color: #009900">int</span>      signdet<span style="color: #990000">;</span>         <span style="font-style: italic"><span style="color: #9A1900">// zero if A is singular</span></span>
     <span style="color: #008080">Complex</span>  det<span style="color: #990000">;</span>             <span style="font-style: italic"><span style="color: #9A1900">// determinant of A</span></span>
     <span style="color: #008080">size_t</span>   i<span style="color: #990000">,</span> j<span style="color: #990000">,</span> k<span style="color: #990000">;</span>         <span style="font-style: italic"><span style="color: #9A1900">// some temporary indices</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// set A equal to the n by n Hilbert Matrix</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
               A<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.</span> <span style="color: #990000">/</span> <span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">)</span> <span style="color: #990000">(</span>i <span style="color: #990000">+</span> j <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// set S to the solution of the equation we will solve</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
               S<span style="color: #990000">[</span> j <span style="color: #990000">*</span> m <span style="color: #990000">+</span> k <span style="color: #990000">]</span> <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Complex</span></span><span style="color: #990000">(</span><span style="color: #009900">double</span><span style="color: #990000">(</span>j<span style="color: #990000">),</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>j <span style="color: #990000">+</span> k<span style="color: #990000">));</span>

     <span style="font-style: italic"><span style="color: #9A1900">// set B = A * S</span></span>
     <span style="color: #008080">size_t</span> ik<span style="color: #990000">;</span>
     <span style="color: #008080">Complex</span> sum<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>k <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> k <span style="color: #990000">&lt;</span> m<span style="color: #990000">;</span> k<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     sum <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">.;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>j <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> j <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> j<span style="color: #990000">++)</span>
                    sum <span style="color: #990000">+=</span> A<span style="color: #990000">[</span>i <span style="color: #990000">*</span> n <span style="color: #990000">+</span> j<span style="color: #990000">]</span> <span style="color: #990000">*</span> S<span style="color: #990000">[</span>j <span style="color: #990000">*</span> m <span style="color: #990000">+</span> k<span style="color: #990000">];</span>
               B<span style="color: #990000">[</span>i <span style="color: #990000">*</span> m <span style="color: #990000">+</span> k<span style="color: #990000">]</span> <span style="color: #990000">=</span> sum<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// solve the equation A * X = B and compute determinant of A</span></span>
     signdet <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">LuSolve</span></span><span style="color: #990000">(</span>n<span style="color: #990000">,</span> m<span style="color: #990000">,</span> A<span style="color: #990000">,</span> B<span style="color: #990000">,</span> X<span style="color: #990000">,</span> logdet<span style="color: #990000">);</span>
     det     <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Complex</span></span><span style="color: #990000">(</span> signdet <span style="color: #990000">)</span> <span style="color: #990000">*</span> <span style="font-weight: bold"><span style="color: #000000">exp</span></span><span style="color: #990000">(</span> logdet <span style="color: #990000">);</span>

     <span style="color: #009900">double</span> cond  <span style="color: #990000">=</span> <span style="color: #993399">4.62963e-4</span><span style="color: #990000">;</span>       <span style="font-style: italic"><span style="color: #9A1900">// condition number of A when n = 3</span></span>
     <span style="color: #009900">double</span> determinant <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.</span> <span style="color: #990000">/</span> <span style="color: #993399">2160</span><span style="color: #990000">.;</span> <span style="font-style: italic"><span style="color: #9A1900">// determinant of A when n = 3</span></span>
     <span style="color: #009900">double</span> delta <span style="color: #990000">=</span> <span style="color: #993399">1e-14</span> <span style="color: #990000">/</span> cond<span style="color: #990000">;</span>     <span style="font-style: italic"><span style="color: #9A1900">// accuracy expected in X</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// check determinant</span></span>
     ok <span style="color: #990000">&amp;=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>det<span style="color: #990000">,</span> determinant<span style="color: #990000">,</span> delta<span style="color: #990000">,</span> delta<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check solution</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>ik <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> ik <span style="color: #990000">&lt;</span> n <span style="color: #990000">*</span> m<span style="color: #990000">;</span> ik<span style="color: #990000">++)</span>
          ok <span style="color: #990000">&amp;=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">NearEqual</span></span><span style="color: #990000">(</span>X<span style="color: #990000">[</span>ik<span style="color: #990000">],</span> S<span style="color: #990000">[</span>ik<span style="color: #990000">],</span> delta<span style="color: #990000">,</span> delta<span style="color: #990000">);</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span></tt></pre>
</font></code>
<hr/>Input File: example/utility/lu_solve.cpp

</body>
</html>
