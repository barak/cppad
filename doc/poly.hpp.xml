<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Source: Poly</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Source: Poly"/>
<meta name="keywords" id="keywords" content=" source: poly source "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_poly.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="poly.cpp.xml" target="_top">Prev</a>
</td><td><a href="ludetandsolve.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>Poly</option>
<option>poly.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Poly-&gt;</option>
<option>poly.cpp</option>
<option>poly.hpp</option>
</select>
</td>
<td>poly.hpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>Source: Poly</big></big></b></center>
<code><font color="blue"># ifndef CPPAD_POLY_HPP
<code><span style='white-space: nowrap'><br/>
</span></code># define CPPAD_POLY_HPP

<pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cstddef&gt;</span>  <span style="font-style: italic"><span style="color: #9A1900">// used to defined size_t</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_simple_vector.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> CppAD <span style="color: #FF0000">{</span>    <span style="font-style: italic"><span style="color: #9A1900">// BEGIN CppAD namespace</span></span>

<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Type</span><span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
<span style="color: #008080">Type</span> <span style="font-weight: bold"><span style="color: #000000">Poly</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> k<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Vector</span> <span style="color: #990000">&amp;</span>a<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Type</span> <span style="color: #990000">&amp;</span>z<span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> i<span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> d <span style="color: #990000">=</span> a<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">-</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>

     <span style="color: #008080">Type</span> tmp<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check Vector is Simple Vector class with Type elements</span></span>
     CheckSimpleVector<span style="color: #990000">&lt;</span>Type<span style="color: #990000">,</span> Vector<span style="color: #990000">&gt;();</span>

     <span style="font-style: italic"><span style="color: #9A1900">// case where derivative order greater than degree of polynomial</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> k <span style="color: #990000">&gt;</span> d <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     tmp <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> tmp<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// case where we are evaluating a derivative</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> k <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// initialize factor as (k-1) !</span></span>
          <span style="color: #008080">size_t</span> factor <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> k<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               factor <span style="color: #990000">*=</span> i<span style="color: #990000">;</span>

          <span style="font-style: italic"><span style="color: #9A1900">// set b to coefficient vector corresponding to derivative</span></span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">b</span></span><span style="color: #990000">(</span>d <span style="color: #990000">-</span> k <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> k<span style="color: #990000">;</span> i <span style="color: #990000">&lt;=</span> d<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
          <span style="color: #FF0000">{</span>     factor   <span style="color: #990000">*=</span> i<span style="color: #990000">;</span>
               tmp       <span style="color: #990000">=</span> <span style="color: #009900">double</span><span style="color: #990000">(</span> factor <span style="color: #990000">);</span>
               b<span style="color: #990000">[</span>i <span style="color: #990000">-</span> k<span style="color: #990000">]</span>  <span style="color: #990000">=</span> a<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">*</span> tmp<span style="color: #990000">;</span>
               factor   <span style="color: #990000">/=</span> <span style="color: #990000">(</span>i <span style="color: #990000">-</span> k <span style="color: #990000">+</span> <span style="color: #993399">1</span><span style="color: #990000">);</span>
          <span style="color: #FF0000">}</span>
          <span style="font-style: italic"><span style="color: #9A1900">// value of derivative polynomial</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #000000">Poly</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">,</span> b<span style="color: #990000">,</span> z<span style="color: #990000">);</span>
     <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// case where we are evaluating the original polynomial</span></span>
     <span style="color: #008080">Type</span> sum <span style="color: #990000">=</span> a<span style="color: #990000">[</span>d<span style="color: #990000">];</span>
     i        <span style="color: #990000">=</span> d<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span>i <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     sum <span style="color: #990000">*=</span> z<span style="color: #990000">;</span>
          sum <span style="color: #990000">+=</span> a<span style="color: #990000">[--</span>i<span style="color: #990000">];</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> sum<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span> <span style="font-style: italic"><span style="color: #9A1900">// END CppAD namespace</span></span></tt></pre>
# endif
</font></code>


<hr/>Input File: omh/poly_hpp.omh

</body>
</html>
