<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Source: LuSolve</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Source: LuSolve"/>
<meta name="keywords" id="keywords" content=" source: lusolve source "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_lu_solve.hpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="lu_solve.cpp.xml" target="_top">Prev</a>
</td><td><a href="lufactor.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>LuDetAndSolve</option>
<option>LuSolve</option>
<option>lu_solve.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>LuDetAndSolve-&gt;</option>
<option>LuSolve</option>
<option>LuFactor</option>
<option>LuInvert</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>LuSolve-&gt;</option>
<option>lu_solve.cpp</option>
<option>lu_solve.hpp</option>
</select>
</td>
<td>lu_solve.hpp</td>
<td>Headings</td>
</tr></table><br/>
<center><b><big><big>Source: LuSolve</big></big></b></center>
<code><font color="blue"># ifndef CPPAD_LU_SOLVE_HPP
<code><span style='white-space: nowrap'><br/>
</span></code># define CPPAD_LU_SOLVE_HPP

<pre><tt><span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;complex&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;vector&gt;</span>

<span style="font-style: italic"><span style="color: #9A1900">// link exp for float and double cases</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/base_require.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/core/cppad_assert.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_simple_vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_numeric_type.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/lu_factor.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/lu_invert.hpp&gt;</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> CppAD <span style="color: #FF0000">{</span> <span style="font-style: italic"><span style="color: #9A1900">// BEGIN CppAD namespace</span></span>

<span style="font-style: italic"><span style="color: #9A1900">// LeqZero</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">typename</span></span> <span style="color: #008080">Float</span><span style="color: #990000">&gt;</span>
<span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">LeqZero</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Float</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> x <span style="color: #990000">&lt;=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">LeqZero</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> std<span style="color: #990000">::</span><span style="color: #008080">complex&lt;double&gt;</span> <span style="color: #990000">&amp;</span>x <span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> x <span style="color: #990000">==</span> std<span style="color: #990000">::</span>complex<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;(</span><span style="color: #993399">0</span><span style="color: #990000">);</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">LeqZero</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> std<span style="color: #990000">::</span><span style="color: #008080">complex&lt;float&gt;</span> <span style="color: #990000">&amp;</span>x <span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> x <span style="color: #990000">==</span> std<span style="color: #990000">::</span>complex<span style="color: #990000">&lt;</span><span style="color: #009900">float</span><span style="color: #990000">&gt;(</span><span style="color: #993399">0</span><span style="color: #990000">);</span> <span style="color: #FF0000">}</span>

<span style="font-style: italic"><span style="color: #9A1900">// LuSolve</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">typename</span></span> <span style="color: #008080">Float</span><span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">typename</span></span> <span style="color: #008080">FloatVector</span><span style="color: #990000">&gt;</span>
<span style="color: #009900">int</span> <span style="font-weight: bold"><span style="color: #000000">LuSolve</span></span><span style="color: #990000">(</span>
     <span style="color: #008080">size_t</span>             n      <span style="color: #990000">,</span>
     <span style="color: #008080">size_t</span>             m      <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">FloatVector</span> <span style="color: #990000">&amp;</span>A      <span style="color: #990000">,</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">FloatVector</span> <span style="color: #990000">&amp;</span>B      <span style="color: #990000">,</span>
     <span style="color: #008080">FloatVector</span>       <span style="color: #990000">&amp;</span>X      <span style="color: #990000">,</span>
     <span style="color: #008080">Float</span>        <span style="color: #990000">&amp;</span>logdet      <span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>
     <span style="font-style: italic"><span style="color: #9A1900">// check numeric type specifications</span></span>
     CheckNumericType<span style="color: #990000">&lt;</span>Float<span style="color: #990000">&gt;();</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check simple vector class specifications</span></span>
     CheckSimpleVector<span style="color: #990000">&lt;</span>Float<span style="color: #990000">,</span> FloatVector<span style="color: #990000">&gt;();</span>

     <span style="color: #008080">size_t</span>        p<span style="color: #990000">;</span>       <span style="font-style: italic"><span style="color: #9A1900">// index of pivot element (diagonal of L)</span></span>
     <span style="color: #009900">int</span>     signdet<span style="color: #990000">;</span>       <span style="font-style: italic"><span style="color: #9A1900">// sign of the determinant</span></span>
     <span style="color: #008080">Float</span>     pivot<span style="color: #990000">;</span>       <span style="font-style: italic"><span style="color: #9A1900">// pivot element</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// the value zero</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Float</span> <span style="font-weight: bold"><span style="color: #000000">zero</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// pivot row and column order in the matrix</span></span>
     std<span style="color: #990000">::</span><span style="color: #008080">vector&lt;size_t&gt;</span> <span style="font-weight: bold"><span style="color: #000000">ip</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
     std<span style="color: #990000">::</span><span style="color: #008080">vector&lt;size_t&gt;</span> <span style="font-weight: bold"><span style="color: #000000">jp</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------</span></span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>A<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> n <span style="color: #990000">*</span> n<span style="color: #990000">,</span>
          <span style="color: #FF0000">"Error in LuSolve: A must have size equal to n * n"</span>
     <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>B<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> n <span style="color: #990000">*</span> m<span style="color: #990000">,</span>
          <span style="color: #FF0000">"Error in LuSolve: B must have size equal to n * m"</span>
     <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #000000">CPPAD_ASSERT_KNOWN</span></span><span style="color: #990000">(</span>
          <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>X<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">())</span> <span style="color: #990000">==</span> n <span style="color: #990000">*</span> m<span style="color: #990000">,</span>
          <span style="color: #FF0000">"Error in LuSolve: X must have size equal to n * m"</span>
     <span style="color: #990000">);</span>
     <span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------</span></span>

     <span style="font-style: italic"><span style="color: #9A1900">// copy A so that it does not change</span></span>
     <span style="color: #008080">FloatVector</span> <span style="font-weight: bold"><span style="color: #000000">Lu</span></span><span style="color: #990000">(</span>A<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// copy B so that it does not change</span></span>
     X <span style="color: #990000">=</span> B<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// Lu factor the matrix A</span></span>
     signdet <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">LuFactor</span></span><span style="color: #990000">(</span>ip<span style="color: #990000">,</span> jp<span style="color: #990000">,</span> Lu<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// compute the log of the determinant</span></span>
     logdet  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>p <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> p <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> p<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// pivot using the max absolute element</span></span>
          pivot   <span style="color: #990000">=</span> Lu<span style="color: #990000">[</span> ip<span style="color: #990000">[</span>p<span style="color: #990000">]</span> <span style="color: #990000">*</span> n <span style="color: #990000">+</span> jp<span style="color: #990000">[</span>p<span style="color: #990000">]</span> <span style="color: #990000">];</span>

          <span style="font-style: italic"><span style="color: #9A1900">// check for determinant equal to zero</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> pivot <span style="color: #990000">==</span> zero <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// abort the mission</span></span>
               logdet <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">);</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span>   <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>

          <span style="font-style: italic"><span style="color: #9A1900">// update the determinant</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">LeqZero</span></span> <span style="color: #990000">(</span> pivot <span style="color: #990000">)</span> <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     logdet <span style="color: #990000">+=</span> <span style="font-weight: bold"><span style="color: #000000">log</span></span><span style="color: #990000">(</span> <span style="color: #990000">-</span> pivot <span style="color: #990000">);</span>
               signdet <span style="color: #990000">=</span> <span style="color: #990000">-</span> signdet<span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>     logdet <span style="color: #990000">+=</span> <span style="font-weight: bold"><span style="color: #000000">log</span></span><span style="color: #990000">(</span> pivot <span style="color: #990000">);</span>

     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// solve the linear equations</span></span>
     <span style="font-weight: bold"><span style="color: #000000">LuInvert</span></span><span style="color: #990000">(</span>ip<span style="color: #990000">,</span> jp<span style="color: #990000">,</span> Lu<span style="color: #990000">,</span> X<span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// return the sign factor for the determinant</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> signdet<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span> <span style="font-style: italic"><span style="color: #9A1900">// END CppAD namespace</span></span></tt></pre>
# endif
</font></code>


<hr/>Input File: omh/lu_solve_hpp.omh

</body>
</html>
