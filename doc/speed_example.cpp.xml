<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Run the Speed Examples</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Run the Speed Examples"/>
<meta name="keywords" id="keywords" content=" run the speed examples program running tests "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_speed_example.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="example.cpp.xml" target="_top">Prev</a>
</td><td><a href="lu_vec_ad.cpp.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Example</option>
<option>ExampleUtility</option>
<option>speed_example.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>Example-&gt;</option>
<option>General</option>
<option>ExampleUtility</option>
<option>ListAllExamples</option>
<option>testvector</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ExampleUtility-&gt;</option>
<option>example.cpp</option>
<option>speed_example.cpp</option>
<option>lu_vec_ad.cpp</option>
</select>
</td>
<td>speed_example.cpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Running Tests</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>Run the Speed Examples</big></big></b></center>
<br/>
<b><big><a name="Running Tests" id="Running Tests">Running Tests</a></big></b>
<br/>
To build this program and run its correctness tests see <a href="cmake_check.xml" target="_top"><span style='white-space: nowrap'>cmake_check</span></a>
.


<code><font color="blue">
<pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/cppad.hpp&gt;</span>

<span style="font-style: italic"><span style="color: #9A1900">// various example routines</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">det_of_minor</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">det_by_lu</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">det_by_minor</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">elapsed_seconds</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">mat_sum_sq</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">ode_evaluate</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">sparse_hes_fun</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">sparse_jac_fun</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">speed_test</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>
<span style="font-weight: bold"><span style="color: #0000FF">extern</span></span> <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">time_test</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">);</span>

<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="font-style: italic"><span style="color: #9A1900">// function that runs one test</span></span>
     <span style="color: #008080">size_t</span> Run_ok_count    <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> Run_error_count <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #009900">char</span><span style="color: #990000">*</span> exception_list<span style="color: #990000">[]</span> <span style="color: #990000">=</span> <span style="color: #FF0000">{</span>
          <span style="color: #FF0000">"elapsed_seconds"</span><span style="color: #990000">,</span>
          <span style="color: #FF0000">"speed_test"</span><span style="color: #990000">,</span>
          <span style="color: #FF0000">"time_test"</span>
     <span style="color: #FF0000">}</span><span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> n_exception <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">sizeof</span></span><span style="color: #990000">(</span>exception_list<span style="color: #990000">)</span> <span style="color: #990000">/</span> <span style="font-weight: bold"><span style="color: #0000FF">sizeof</span></span><span style="color: #990000">(</span>exception_list<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]);</span>
     <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span><span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">TestOk</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">),</span> std<span style="color: #990000">::</span><span style="color: #008080">string</span> name<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok               <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          std<span style="color: #990000">::</span><span style="color: #008080">streamsize</span> width <span style="color: #990000">=</span>  <span style="color: #993399">20</span><span style="color: #990000">;</span>
          std<span style="color: #990000">::</span>cout<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">width</span></span><span style="color: #990000">(</span> width <span style="color: #990000">);</span>
          std<span style="color: #990000">::</span>cout<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">setf</span></span><span style="color: #990000">(</span> std<span style="color: #990000">::</span>ios_base<span style="color: #990000">::</span>left <span style="color: #990000">);</span>
          std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> name<span style="color: #990000">;</span>
          <span style="color: #009900">bool</span> exception <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n_exception<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               exception <span style="color: #990000">|=</span> exception_list<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">==</span> name<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          ok <span style="color: #990000">&amp;=</span> name<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">&lt;</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span>width<span style="color: #990000">);</span>
          ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">TestOk</span></span><span style="color: #990000">();</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> ok <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"OK"</span> <span style="color: #990000">&lt;&lt;</span> std<span style="color: #990000">::</span>endl<span style="color: #990000">;</span>
               Run_ok_count<span style="color: #990000">++;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">else</span></span> <span style="font-weight: bold"><span style="color: #0000FF">if</span></span> <span style="color: #990000">(</span> exception <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"Error: perhaps too many other programs running"</span><span style="color: #990000">;</span>
               std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> std<span style="color: #990000">::</span>endl<span style="color: #990000">;</span>
               <span style="font-style: italic"><span style="color: #9A1900">// no change to Run_ok_count</span></span>
               ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>
          <span style="color: #FF0000">{</span>     std<span style="color: #990000">::</span>cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"Error"</span> <span style="color: #990000">&lt;&lt;</span> std<span style="color: #990000">::</span>endl<span style="color: #990000">;</span>
               Run_error_count<span style="color: #990000">++;</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>

<span style="font-style: italic"><span style="color: #9A1900">// main program that runs all the tests</span></span>
<span style="color: #009900">int</span> <span style="font-weight: bold"><span style="color: #000000">main</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> std<span style="color: #990000">::</span>cout<span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> std<span style="color: #990000">::</span>endl<span style="color: #990000">;</span>

     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>det_of_minor<span style="color: #990000">,</span>          <span style="color: #FF0000">"det_of_minor"</span>   <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>det_by_minor<span style="color: #990000">,</span>         <span style="color: #FF0000">"det_by_minor"</span>    <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>det_by_lu<span style="color: #990000">,</span>               <span style="color: #FF0000">"det_by_lu"</span>    <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>elapsed_seconds<span style="color: #990000">,</span>   <span style="color: #FF0000">"elapsed_seconds"</span>    <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>mat_sum_sq<span style="color: #990000">,</span>             <span style="color: #FF0000">"mat_sum_sq"</span>    <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>ode_evaluate<span style="color: #990000">,</span>         <span style="color: #FF0000">"ode_evaluate"</span>    <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>sparse_hes_fun<span style="color: #990000">,</span>    <span style="color: #FF0000">"sparse_hes_fun"</span>     <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>sparse_jac_fun<span style="color: #990000">,</span>    <span style="color: #FF0000">"sparse_jac_fun"</span>     <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>speed_test<span style="color: #990000">,</span>             <span style="color: #FF0000">"speed_test"</span>    <span style="color: #990000">);</span>
     ok <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">Run</span></span><span style="color: #990000">(</span>time_test<span style="color: #990000">,</span>               <span style="color: #FF0000">"time_test"</span>    <span style="color: #990000">);</span>
     <span style="font-weight: bold"><span style="color: #000000">assert</span></span><span style="color: #990000">(</span> ok <span style="color: #990000">||</span> <span style="color: #990000">(</span>Run_error_count <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span><span style="color: #990000">)</span> <span style="color: #990000">);</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check for memory leak in previous calculations</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="color: #990000">!</span> CppAD<span style="color: #990000">::</span>thread_alloc<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">free_all</span></span><span style="color: #990000">()</span> <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
          cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"Error: memroy leak detected"</span> <span style="color: #990000">&lt;&lt;</span> endl<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>

     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> ok <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"All "</span> <span style="color: #990000">&lt;&lt;</span> <span style="color: #009900">int</span><span style="color: #990000">(</span>Run_ok_count<span style="color: #990000">)</span> <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">" tests passed "</span><span style="color: #990000">;</span>
          cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">"(possibly excepting elapsed_seconds)."</span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>     cout <span style="color: #990000">&lt;&lt;</span> <span style="color: #009900">int</span><span style="color: #990000">(</span>Run_error_count<span style="color: #990000">)</span> <span style="color: #990000">&lt;&lt;</span> <span style="color: #FF0000">" tests failed."</span><span style="color: #990000">;</span>
     cout <span style="color: #990000">&lt;&lt;</span> endl<span style="color: #990000">;</span>


     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="font-weight: bold"><span style="color: #0000FF">static_cast</span></span><span style="color: #990000">&lt;</span><span style="color: #009900">int</span><span style="color: #990000">&gt;(</span> <span style="color: #990000">!</span> ok <span style="color: #990000">);</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: speed/example/example.cpp

</body>
</html>
