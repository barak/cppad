<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Do One Thread's Work for Multi-Threaded Newton Method</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Do One Thread's Work for Multi-Threaded Newton Method"/>
<meta name="keywords" id="keywords" content=" do one thread's work multi-threaded newton method syntax purpose low up thread_num source "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_multi_newton_worker_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="multi_newton_setup.xml" target="_top">Prev</a>
</td><td><a href="multi_newton_takedown.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>multi_thread</option>
<option>thread_test.cpp</option>
<option>multi_newton.cpp</option>
<option>multi_newton_worker</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>multi_thread-&gt;</option>
<option>parallel_ad</option>
<option>thread_test.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>thread_test.cpp-&gt;</option>
<option>a11c_openmp.cpp</option>
<option>a11c_bthread.cpp</option>
<option>a11c_pthread.cpp</option>
<option>simple_ad_openmp.cpp</option>
<option>simple_ad_bthread.cpp</option>
<option>simple_ad_pthread.cpp</option>
<option>team_example.cpp</option>
<option>harmonic.cpp</option>
<option>multi_atomic.cpp</option>
<option>multi_newton.cpp</option>
<option>team_thread.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>multi_newton.cpp-&gt;</option>
<option>multi_newton_common</option>
<option>multi_newton_setup</option>
<option>multi_newton_worker</option>
<option>multi_newton_takedown</option>
<option>multi_newton_run</option>
<option>multi_newton_time</option>
</select>
</td>
<td>multi_newton_worker</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>low</option>
<option>up</option>
<option>thread_num</option>
<option>Source</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>Do One Thread's Work for Multi-Threaded Newton Method</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>

<code><font color="blue"><span style='white-space: nowrap'>multi_newton_worker()</span></font></code>



<br/>
<br/>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br/>
This function finds all the zeros in the interval 
<code><font color="blue"><span style='white-space: nowrap'>[&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>low</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;,&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>up</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;]</span></font></code>
.

<br/>
<br/>
<b><big><a name="low" id="low">low</a></big></b>
<br/>
This is the value of the <a href="multi_newton_common.xml" target="_top"><span style='white-space: nowrap'>multi_newton_common</span></a>
 information

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>low</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;work_all_[</span></font><i><font color="black"><span style='white-space: nowrap'>thread_num</span></font></i><font color="blue"><span style='white-space: nowrap'>]-&gt;xlow<br/>
</span></font></code>
<br/>
<b><big><a name="up" id="up">up</a></big></b>
<br/>
This is the value of the <a href="multi_newton_common.xml" target="_top"><span style='white-space: nowrap'>multi_newton_common</span></a>
 information

<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font><i><font color="black"><span style='white-space: nowrap'>up</span></font></i><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;work_all_[</span></font><i><font color="black"><span style='white-space: nowrap'>thread_num</span></font></i><font color="blue"><span style='white-space: nowrap'>]-&gt;xup<br/>
</span></font></code>
<br/>
<b><big><a name="thread_num" id="thread_num">thread_num</a></big></b>
<br/>
This is the number for the current thread; see
<a href="ta_thread_num.xml" target="_top"><span style='white-space: nowrap'>thread_num</span></a>
.

<br/>
<br/>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>
<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
<span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">multi_newton_worker</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>
     <span style="font-style: italic"><span style="color: #9A1900">// Split [xlow, xup] into num_sub intervales and</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// look for one zero in each sub-interval.</span></span>
     <span style="color: #008080">size_t</span> thread_num    <span style="color: #990000">=</span> thread_alloc<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">thread_num</span></span><span style="color: #990000">();</span>
     <span style="color: #008080">size_t</span> num_threads   <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">(</span>num_threads_<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #000000">size_t</span></span><span style="color: #990000">(</span><span style="color: #993399">1</span><span style="color: #990000">));</span>
     <span style="color: #009900">bool</span>   ok            <span style="color: #990000">=</span> thread_num <span style="color: #990000">&lt;</span> num_threads<span style="color: #990000">;</span>
     <span style="color: #008080">size_t</span> num_sub       <span style="color: #990000">=</span> work_all_<span style="color: #990000">[</span>thread_num<span style="color: #990000">]-&gt;</span>num_sub<span style="color: #990000">;</span>
     <span style="color: #009900">double</span> xlow          <span style="color: #990000">=</span> work_all_<span style="color: #990000">[</span>thread_num<span style="color: #990000">]-&gt;</span>xlow<span style="color: #990000">;</span>
     <span style="color: #009900">double</span> xup           <span style="color: #990000">=</span> work_all_<span style="color: #990000">[</span>thread_num<span style="color: #990000">]-&gt;</span>xup<span style="color: #990000">;</span>
     vector<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;&amp;</span> x    <span style="color: #990000">=</span> work_all_<span style="color: #990000">[</span>thread_num<span style="color: #990000">]-&gt;</span>x<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check arguments</span></span>
     ok <span style="color: #990000">&amp;=</span> max_itr_ <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     ok <span style="color: #990000">&amp;=</span> num_sub <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     ok <span style="color: #990000">&amp;=</span> xlow <span style="color: #990000">&lt;</span> xup<span style="color: #990000">;</span>
     ok <span style="color: #990000">&amp;=</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check for special case where there is nothing for this thread to do</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> num_sub <span style="color: #990000">==</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     work_all_<span style="color: #990000">[</span>thread_num<span style="color: #990000">]-&gt;</span>ok <span style="color: #990000">=</span> ok<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>

     <span style="font-style: italic"><span style="color: #9A1900">// check for a zero on each sub-interval</span></span>
     <span style="color: #008080">size_t</span> i<span style="color: #990000">;</span>
     <span style="color: #009900">double</span> xlast <span style="color: #990000">=</span> xlow <span style="color: #990000">-</span> <span style="color: #993399">2.0</span> <span style="color: #990000">*</span> sub_length_<span style="color: #990000">;</span> <span style="font-style: italic"><span style="color: #9A1900">// over sub_length_ away from x_low</span></span>
     <span style="color: #009900">double</span> flast <span style="color: #990000">=</span> <span style="color: #993399">2.0</span> <span style="color: #990000">*</span> epsilon_<span style="color: #990000">;</span>           <span style="font-style: italic"><span style="color: #9A1900">// any value &gt; epsilon_ would do</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> num_sub<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
     <span style="color: #FF0000">{</span>
          <span style="font-style: italic"><span style="color: #9A1900">// note that when i == 0, xlow_i == xlow (exactly)</span></span>
          <span style="color: #009900">double</span> xlow_i <span style="color: #990000">=</span> xlow <span style="color: #990000">+</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>i<span style="color: #990000">)</span> <span style="color: #990000">*</span> sub_length_<span style="color: #990000">;</span>

          <span style="font-style: italic"><span style="color: #9A1900">// note that when i == num_sub - 1, xup_i = xup (exactly)</span></span>
          <span style="color: #009900">double</span> xup_i  <span style="color: #990000">=</span> xup  <span style="color: #990000">-</span> <span style="color: #009900">double</span><span style="color: #990000">(</span>num_sub <span style="color: #990000">-</span> i <span style="color: #990000">-</span> <span style="color: #993399">1</span><span style="color: #990000">)</span> <span style="color: #990000">*</span> sub_length_<span style="color: #990000">;</span>

          <span style="font-style: italic"><span style="color: #9A1900">// initial point for Newton iterations</span></span>
          <span style="color: #009900">double</span> xcur <span style="color: #990000">=</span> <span style="color: #990000">(</span>xup_i <span style="color: #990000">+</span> xlow_i<span style="color: #990000">)</span> <span style="color: #990000">/</span> <span style="color: #993399">2</span><span style="color: #990000">.;</span>

          <span style="font-style: italic"><span style="color: #9A1900">// Newton iterations</span></span>
          <span style="color: #009900">bool</span> more_itr <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> itr    <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">// initialize these values to avoid MSC C++ warning</span></span>
          <span style="color: #009900">double</span> fcur<span style="color: #990000">=</span><span style="color: #993399">0.0</span><span style="color: #990000">,</span> dfcur<span style="color: #990000">=</span><span style="color: #993399">0.0</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span> more_itr <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #000000">fun_</span></span><span style="color: #990000">(</span>xcur<span style="color: #990000">,</span> fcur<span style="color: #990000">,</span> dfcur<span style="color: #990000">);</span>

               <span style="font-style: italic"><span style="color: #9A1900">// check end of iterations</span></span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>fcur<span style="color: #990000">)</span> <span style="color: #990000">&lt;=</span> epsilon_ <span style="color: #990000">)</span>
                    more_itr <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="color: #990000">(</span>xcur <span style="color: #990000">==</span> xlow_i <span style="color: #990000">)</span> <span style="color: #990000">&amp;</span> <span style="color: #990000">(</span>fcur <span style="color: #990000">*</span> dfcur <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span><span style="color: #990000">.)</span> <span style="color: #990000">)</span>
                    more_itr <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="color: #990000">(</span>xcur <span style="color: #990000">==</span> xup_i<span style="color: #990000">)</span>   <span style="color: #990000">&amp;</span> <span style="color: #990000">(</span>fcur <span style="color: #990000">*</span> dfcur <span style="color: #990000">&lt;</span> <span style="color: #993399">0</span><span style="color: #990000">.)</span> <span style="color: #990000">)</span>
                    more_itr <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">false</span></span><span style="color: #990000">;</span>

               <span style="font-style: italic"><span style="color: #9A1900">// next Newton iterate</span></span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> more_itr <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     xcur <span style="color: #990000">=</span> xcur <span style="color: #990000">-</span> fcur <span style="color: #990000">/</span> dfcur<span style="color: #990000">;</span>
                    <span style="font-style: italic"><span style="color: #9A1900">// keep in bounds</span></span>
                    xcur <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">(</span>xcur<span style="color: #990000">,</span> xlow_i<span style="color: #990000">);</span>
                    xcur <span style="color: #990000">=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">min</span></span><span style="color: #990000">(</span>xcur<span style="color: #990000">,</span> xup_i<span style="color: #990000">);</span>

                    more_itr <span style="color: #990000">=</span> <span style="color: #990000">++</span>itr <span style="color: #990000">&lt;</span> max_itr_<span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span> fcur <span style="color: #990000">)</span> <span style="color: #990000">&lt;=</span> epsilon_ <span style="color: #990000">)</span>
          <span style="color: #FF0000">{</span>     <span style="font-style: italic"><span style="color: #9A1900">// check for case where xcur is lower bound for this</span></span>
               <span style="font-style: italic"><span style="color: #9A1900">// sub-interval and upper bound for previous sub-interval</span></span>
               <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>xcur <span style="color: #990000">-</span> xlast<span style="color: #990000">)</span> <span style="color: #990000">&gt;=</span> sub_length_ <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">push_back</span></span><span style="color: #990000">(</span> xcur <span style="color: #990000">);</span>
                    xlast <span style="color: #990000">=</span> xcur<span style="color: #990000">;</span>
                    flast <span style="color: #990000">=</span> fcur<span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
               <span style="font-weight: bold"><span style="color: #0000FF">else</span></span> <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> <span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>fcur<span style="color: #990000">)</span> <span style="color: #990000">&lt;</span> <span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span>flast<span style="color: #990000">)</span> <span style="color: #990000">)</span>
               <span style="color: #FF0000">{</span>     x<span style="color: #990000">[</span> x<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">-</span> <span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">=</span> xcur<span style="color: #990000">;</span>
                    xlast            <span style="color: #990000">=</span> xcur<span style="color: #990000">;</span>
                    flast            <span style="color: #990000">=</span> fcur<span style="color: #990000">;</span>
               <span style="color: #FF0000">}</span>
          <span style="color: #FF0000">}</span>
     <span style="color: #FF0000">}</span>
     work_all_<span style="color: #990000">[</span>thread_num<span style="color: #990000">]-&gt;</span>ok <span style="color: #990000">=</span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span></tt></pre>

<hr/>Input File: example/multi_thread/multi_newton.cpp

</body>
</html>
