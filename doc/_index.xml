<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>Keyword Index</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="Keyword Index"/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='__index_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="_reference.xml" target="_top">Prev</a>
</td><td><a href="_search_xml.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>_index</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>_index</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>A</option>
<option>B</option>
<option>C</option>
<option>D</option>
<option>E</option>
<option>F</option>
<option>G</option>
<option>H</option>
<option>I</option>
<option>J</option>
<option>K</option>
<option>L</option>
<option>M</option>
<option>N</option>
<option>O</option>
<option>P</option>
<option>Q</option>
<option>R</option>
<option>S</option>
<option>T</option>
<option>U</option>
<option>V</option>
<option>W</option>
<option>X</option>
<option>Y</option>
<option>Z</option>
</select>
</td>
</tr></table><br/>
<center><b><big><big>Keyword Index</big></big></b></center>
<b>!=</b>&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
<b>(</b>checkpointing<b>):</b>&#160;<a href="reverse_checkpoint.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
<b>(</b>double&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
<b>*</b>&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;<a href="mul.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
<b>*=</b>&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
<b>+</b>&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;<a href="add.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;<a href="unaryplus.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator</a><br/>
&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
<b>+=</b>&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
<b>-</b>&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;<a href="sub.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;<a href="unaryminus.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator</a><br/>
<b>--</b>with<b>-</b>deprecated&#160;<a href="auto_tools.xml#--with-deprecated" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;--with-deprecated</a><br/>
<b>--</b>with<b>-</b>documentation&#160;<a href="auto_tools.xml#--with-Documentation" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;--with-Documentation</a><br/>
<b>--</b>with<b>-</b>testvector&#160;<a href="auto_tools.xml#--with-testvector" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;--with-testvector</a><br/>
<b>-=</b>&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
<b>/</b>&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;<a href="div.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
<b>/=</b>&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
0&#160;<a href="ode_evaluate.xml#p.p == 0" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;p.p&#xA0;==&#xA0;0</a><br/>
&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode.Case k &gt; 0" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode.Case&#xA0;k&#xA0;&gt;&#xA0;0</a><br/>
&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode.Case k = 0" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode.Case&#xA0;k&#xA0;=&#xA0;0</a><br/>
01<b>-</b>02&#160;<a href="whats_new_06.xml#01-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;01-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#01-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-02</a><br/>
01<b>-</b>04&#160;<a href="whats_new_10.xml#01-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;01-04</a><br/>
01<b>-</b>05&#160;<a href="whats_new_06.xml#01-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;01-05</a><br/>
01<b>-</b>06&#160;<a href="whats_new_09.xml#01-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;01-06</a><br/>
01<b>-</b>07&#160;<a href="whats_new_06.xml#01-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;01-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#01-07" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-07" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-07</a><br/>
01<b>-</b>08&#160;<a href="whats_new_05.xml#01-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;01-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#01-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;01-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#01-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;01-08</a><br/>
01<b>-</b>09&#160;<a href="whats_new_11.xml#01-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;01-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-09</a><br/>
01<b>-</b>10&#160;<a href="whats_new_14.xml#01-10" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;01-10</a><br/>
01<b>-</b>11&#160;<a href="whats_new_08.xml#01-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;01-11</a><br/>
01<b>-</b>12&#160;<a href="whats_new_12.xml#01-12" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-12</a><br/>
01<b>-</b>15&#160;<a href="whats_new_12.xml#01-15" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-15</a><br/>
01<b>-</b>16&#160;<a href="whats_new_11.xml#01-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;01-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#01-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-16</a><br/>
01<b>-</b>18&#160;<a href="whats_new_06.xml#01-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;01-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#01-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;01-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#01-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;01-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#01-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;01-18</a><br/>
01<b>-</b>19&#160;<a href="whats_new_11.xml#01-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;01-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#01-19" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-19</a><br/>
01<b>-</b>20&#160;<a href="whats_new_06.xml#01-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;01-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#01-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;01-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#01-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;01-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#01-20" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-20" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#01-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;01-20</a><br/>
01<b>-</b>21&#160;<a href="whats_new_08.xml#01-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;01-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#01-21" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;01-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-21" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#01-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;01-21</a><br/>
01<b>-</b>22&#160;<a href="whats_new_04.xml#01-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;01-22</a><br/>
01<b>-</b>23&#160;<a href="whats_new_10.xml#01-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;01-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#01-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-23</a><br/>
01<b>-</b>24&#160;<a href="whats_new_08.xml#01-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;01-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#01-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;01-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#01-24" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-24</a><br/>
01<b>-</b>26&#160;<a href="whats_new_08.xml#01-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;01-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#01-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;01-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#01-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;01-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-26</a><br/>
01<b>-</b>27&#160;<a href="whats_new_12.xml#01-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-27</a><br/>
01<b>-</b>28&#160;<a href="whats_new_04.xml#01-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;01-28</a><br/>
01<b>-</b>29&#160;<a href="whats_new_04.xml#01-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;01-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#01-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;01-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-29" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-29</a><br/>
01<b>-</b>30&#160;<a href="whats_new_12.xml#01-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;01-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#01-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;01-30</a><br/>
01<b>-</b>31&#160;<a href="whats_new_09.xml#01-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;01-31</a><br/>
02<b>-</b>01&#160;<a href="whats_new_04.xml#02-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#02-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;02-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#02-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;02-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#02-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;02-01</a><br/>
02<b>-</b>02&#160;<a href="whats_new_07.xml#02-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;02-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#02-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;02-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-02</a><br/>
02<b>-</b>03&#160;<a href="whats_new_07.xml#02-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;02-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#02-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;02-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#02-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;02-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-03" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-03</a><br/>
02<b>-</b>04&#160;<a href="whats_new_06.xml#02-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#02-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;02-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-04" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-04</a><br/>
02<b>-</b>05&#160;<a href="whats_new_08.xml#02-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;02-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#02-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;02-05</a><br/>
02<b>-</b>06&#160;<a href="whats_new_07.xml#02-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;02-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#02-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;02-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#02-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;02-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-06" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-06</a><br/>
02<b>-</b>07&#160;<a href="whats_new_15.xml#02-07" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-07</a><br/>
02<b>-</b>08&#160;<a href="whats_new_10.xml#02-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;02-08</a><br/>
02<b>-</b>09&#160;<a href="whats_new_11.xml#02-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;02-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#02-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;02-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-09</a><br/>
02<b>-</b>10&#160;<a href="whats_new_06.xml#02-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#02-10" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;02-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-10" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-10</a><br/>
02<b>-</b>11&#160;<a href="whats_new_06.xml#02-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#02-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;02-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#02-11" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;02-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-11" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-11</a><br/>
02<b>-</b>12&#160;<a href="whats_new_04.xml#02-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-12</a><br/>
02<b>-</b>13&#160;<a href="whats_new_06.xml#02-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-13</a><br/>
02<b>-</b>14&#160;<a href="whats_new_06.xml#02-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-14" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-14</a><br/>
02<b>-</b>15&#160;<a href="whats_new_04.xml#02-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#02-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-09.02-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-09.02-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#02-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;02-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#02-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;02-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#02-15" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;02-15</a><br/>
02<b>-</b>16&#160;<a href="whats_new_04.xml#02-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-09.02-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-09.02-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-16</a><br/>
02<b>-</b>17&#160;<a href="whats_new_04.xml#02-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-09.02-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-09.02-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#02-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;02-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#02-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;02-17</a><br/>
02<b>-</b>18&#160;<a href="whats_new_15.xml#02-18" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-18</a><br/>
02<b>-</b>19&#160;<a href="whats_new_11.xml#02-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;02-19</a><br/>
02<b>-</b>20&#160;<a href="whats_new_04.xml#02-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#02-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;02-20</a><br/>
02<b>-</b>21&#160;<a href="whats_new_04.xml#02-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#02-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-21</a><br/>
02<b>-</b>22&#160;<a href="whats_new_07.xml#03-09.02-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-09.02-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#02-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;02-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#02-22" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;02-22</a><br/>
02<b>-</b>23&#160;<a href="whats_new_06.xml#02-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#02-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;02-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#02-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;02-23</a><br/>
02<b>-</b>24&#160;<a href="whats_new_05.xml#02-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;02-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#02-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-24</a><br/>
02<b>-</b>25&#160;<a href="whats_new_06.xml#02-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#02-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;02-25</a><br/>
02<b>-</b>26&#160;<a href="whats_new_14.xml#02-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;02-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#02-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;02-26</a><br/>
02<b>-</b>27&#160;<a href="whats_new_07.xml#03-09.02-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-09.02-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#02-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;02-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#02-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;02-27</a><br/>
02<b>-</b>28&#160;<a href="whats_new_04.xml#02-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#02-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;02-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#02-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;02-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#02-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;02-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#02-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;02-28</a><br/>
02<b>-</b>29&#160;<a href="whats_new_04.xml#02-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;02-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#02-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;02-29</a><br/>
03<b>-</b>01&#160;<a href="whats_new_04.xml#03-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#03-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;03-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#03-01" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;03-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-01</a><br/>
03<b>-</b>02&#160;<a href="whats_new_12.xml#03-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;03-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#03-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;03-02</a><br/>
03<b>-</b>03&#160;<a href="whats_new_04.xml#03-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#03-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;03-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#03-03" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;03-03</a><br/>
03<b>-</b>04&#160;<a href="whats_new_04.xml#03-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#03-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;03-04</a><br/>
03<b>-</b>05&#160;<a href="whats_new_04.xml#03-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#03-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;03-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#03-05" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;03-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-05</a><br/>
03<b>-</b>06&#160;<a href="whats_new_04.xml#03-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#03-06" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;03-06</a><br/>
03<b>-</b>07&#160;<a href="whats_new_04.xml#03-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-07</a><br/>
03<b>-</b>09&#160;<a href="whats_new_04.xml#03-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#03-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;03-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#03-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;03-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#03-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;03-09</a><br/>
03<b>-</b>10&#160;<a href="whats_new_06.xml#03-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#03-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;03-10</a><br/>
03<b>-</b>11&#160;<a href="whats_new_04.xml#03-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#03-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;03-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#03-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;03-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#03-11" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;03-11</a><br/>
03<b>-</b>12&#160;<a href="whats_new_04.xml#03-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-12</a><br/>
03<b>-</b>13&#160;<a href="whats_new_07.xml#03-15.03-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-15.03-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#03-13" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;03-13</a><br/>
03<b>-</b>14&#160;<a href="whats_new_07.xml#03-15.03-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-15.03-14</a><br/>
03<b>-</b>15&#160;<a href="whats_new_04.xml#03-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-15.03-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-15.03-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-15</a><br/>
03<b>-</b>16&#160;<a href="whats_new_06.xml#03-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-16</a><br/>
03<b>-</b>17&#160;<a href="whats_new_04.xml#03-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#03-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;03-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#03-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;03-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-17</a><br/>
03<b>-</b>18&#160;<a href="whats_new_04.xml#03-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#03-18" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;03-18</a><br/>
03<b>-</b>19&#160;<a href="whats_new_11.xml#03-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;03-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-19</a><br/>
03<b>-</b>20&#160;<a href="whats_new_07.xml#03-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-20</a><br/>
03<b>-</b>21&#160;<a href="whats_new_12.xml#03-21" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;03-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-21</a><br/>
03<b>-</b>22&#160;<a href="whats_new_05.xml#03-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;03-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-22</a><br/>
03<b>-</b>23&#160;<a href="whats_new_05.xml#03-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;03-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#03-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;03-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-23</a><br/>
03<b>-</b>24&#160;<a href="whats_new_06.xml#03-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#03-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;03-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-24</a><br/>
03<b>-</b>25&#160;<a href="whats_new_04.xml#03-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-25</a><br/>
03<b>-</b>26&#160;<a href="whats_new_05.xml#03-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;03-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#03-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;03-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-26</a><br/>
03<b>-</b>27&#160;<a href="whats_new_06.xml#03-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#03-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;03-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#03-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;03-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#03-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;03-27</a><br/>
03<b>-</b>28&#160;<a href="whats_new_04.xml#03-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-09.03-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-09.03-28</a><br/>
03<b>-</b>29&#160;<a href="whats_new_06.xml#03-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-29</a><br/>
03<b>-</b>30&#160;<a href="whats_new_04.xml#03-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;03-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#03-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-31.03-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-31.03-30</a><br/>
03<b>-</b>31&#160;<a href="whats_new_06.xml#03-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;03-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-31.03-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-31.03-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#03-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;03-31</a><br/>
04<b>-</b>01&#160;<a href="whats_new_04.xml#04-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#04-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#04-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;04-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#04-01" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;04-01</a><br/>
04<b>-</b>02&#160;<a href="whats_new_04.xml#04-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#04-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-02</a><br/>
04<b>-</b>03&#160;<a href="whats_new_04.xml#04-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#04-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-03</a><br/>
04<b>-</b>04&#160;<a href="whats_new_06.xml#04-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#04-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;04-04</a><br/>
04<b>-</b>05&#160;<a href="whats_new_06.xml#04-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#04-11.04-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-11.04-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#04-05" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;04-05</a><br/>
04<b>-</b>06&#160;<a href="whats_new_06.xml#04-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#04-11.04-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-11.04-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#04-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;04-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#04-06" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;04-06</a><br/>
04<b>-</b>07&#160;<a href="whats_new_04.xml#04-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#04-11.04-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-11.04-07</a><br/>
04<b>-</b>08&#160;<a href="whats_new_04.xml#04-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#04-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-08</a><br/>
04<b>-</b>09&#160;<a href="whats_new_04.xml#04-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-09</a><br/>
04<b>-</b>10&#160;<a href="whats_new_07.xml#04-11.04-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-11.04-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#04-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;04-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#04-10" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;04-10</a><br/>
04<b>-</b>11&#160;<a href="whats_new_07.xml#04-11.04-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-11.04-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#04-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-11</a><br/>
04<b>-</b>13&#160;<a href="whats_new_06.xml#04-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-13</a><br/>
04<b>-</b>14&#160;<a href="whats_new_06.xml#04-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#04-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-14</a><br/>
04<b>-</b>15&#160;<a href="whats_new_06.xml#04-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-15</a><br/>
04<b>-</b>17&#160;<a href="whats_new_06.xml#04-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#04-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#04-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;04-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#04-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;04-17</a><br/>
04<b>-</b>18&#160;<a href="whats_new_06.xml#04-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#04-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;04-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#04-18" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;04-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#04-18" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;04-18</a><br/>
04<b>-</b>19&#160;<a href="whats_new_04.xml#04-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#04-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;04-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#04-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#04-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;04-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#04-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;04-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#04-19" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;04-19</a><br/>
04<b>-</b>20&#160;<a href="whats_new_04.xml#04-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#04-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;04-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#04-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;04-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#04-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;04-20</a><br/>
04<b>-</b>21&#160;<a href="whats_new_04.xml#04-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#04-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;04-21</a><br/>
04<b>-</b>22&#160;<a href="whats_new_04.xml#04-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-22</a><br/>
04<b>-</b>24&#160;<a href="whats_new_04.xml#04-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#04-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;04-24</a><br/>
04<b>-</b>25&#160;<a href="whats_new_04.xml#04-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#04-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-25</a><br/>
04<b>-</b>26&#160;<a href="whats_new_06.xml#04-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#04-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;04-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#04-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;04-26</a><br/>
04<b>-</b>27&#160;<a href="whats_new_13.xml#04-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;04-27</a><br/>
04<b>-</b>28&#160;<a href="whats_new_04.xml#04-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#04-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#04-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;04-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#04-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;04-28</a><br/>
04<b>-</b>29&#160;<a href="whats_new_04.xml#04-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;04-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#04-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;04-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#04-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;04-29</a><br/>
05<b>-</b>01&#160;<a href="whats_new_05.xml#05-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;05-01</a><br/>
05<b>-</b>03&#160;<a href="whats_new_04.xml#05-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#05-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;05-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#05-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;05-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#05-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;05-03</a><br/>
05<b>-</b>04&#160;<a href="whats_new_04.xml#05-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#05-04" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;05-04</a><br/>
05<b>-</b>05&#160;<a href="whats_new_07.xml#05-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;05-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#05-05" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#05-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;05-05</a><br/>
05<b>-</b>06&#160;<a href="whats_new_05.xml#05-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;05-06</a><br/>
05<b>-</b>07&#160;<a href="whats_new_04.xml#05-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#05-07" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-07</a><br/>
05<b>-</b>08&#160;<a href="whats_new_07.xml#05-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;05-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#05-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;05-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#05-08" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-08</a><br/>
05<b>-</b>09&#160;<a href="whats_new_04.xml#05-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#05-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-09</a><br/>
05<b>-</b>10&#160;<a href="whats_new_15.xml#05-10" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-10</a><br/>
05<b>-</b>11&#160;<a href="whats_new_11.xml#05-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;05-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#05-11" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;05-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#05-11" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-11</a><br/>
05<b>-</b>12&#160;<a href="whats_new_04.xml#05-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#05-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;05-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#05-12" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;05-12</a><br/>
05<b>-</b>14&#160;<a href="whats_new_04.xml#05-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#05-14" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;05-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#05-14" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;05-14</a><br/>
05<b>-</b>15&#160;<a href="whats_new_13.xml#05-15" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;05-15</a><br/>
05<b>-</b>16&#160;<a href="whats_new_05.xml#05-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;05-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#05-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;05-16</a><br/>
05<b>-</b>17&#160;<a href="whats_new_13.xml#05-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;05-17</a><br/>
05<b>-</b>18&#160;<a href="whats_new_05.xml#05-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;05-18</a><br/>
05<b>-</b>19&#160;<a href="whats_new_05.xml#05-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;05-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#05-19" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;05-19</a><br/>
05<b>-</b>20&#160;<a href="whats_new_09.xml#05-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;05-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#05-20" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;05-20</a><br/>
05<b>-</b>21&#160;<a href="whats_new_13.xml#05-21" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;05-21</a><br/>
05<b>-</b>22&#160;<a href="whats_new_07.xml#05-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;05-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#05-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;05-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#05-22" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;05-22</a><br/>
05<b>-</b>23&#160;<a href="whats_new_14.xml#05-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;05-23</a><br/>
05<b>-</b>24&#160;<a href="whats_new_07.xml#05-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;05-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#05-24" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;05-24</a><br/>
05<b>-</b>25&#160;<a href="whats_new_04.xml#05-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#05-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;05-25</a><br/>
05<b>-</b>26&#160;<a href="whats_new_04.xml#05-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#05-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;05-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#05-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;05-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#05-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-26</a><br/>
05<b>-</b>27&#160;<a href="whats_new_06.xml#05-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#05-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#05-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;05-27</a><br/>
05<b>-</b>28&#160;<a href="whats_new_11.xml#05-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;05-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#05-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;05-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#05-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;05-28</a><br/>
05<b>-</b>29&#160;<a href="whats_new_04.xml#05-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#05-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;05-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#05-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;05-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#05-29" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;05-29</a><br/>
05<b>-</b>30&#160;<a href="whats_new_04.xml#05-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;05-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#05-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;05-30</a><br/>
05<b>-</b>31&#160;<a href="whats_new_06.xml#05-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;05-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#05-31" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;05-31</a><br/>
06<b>-</b>01&#160;<a href="whats_new_04.xml#06-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;06-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#06-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;06-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-01" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-01</a><br/>
06<b>-</b>02&#160;<a href="whats_new_06.xml#06-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-02</a><br/>
06<b>-</b>03&#160;<a href="whats_new_04.xml#06-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;06-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-03" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-03</a><br/>
06<b>-</b>04&#160;<a href="whats_new_04.xml#06-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;06-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-04" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-04</a><br/>
06<b>-</b>05&#160;<a href="whats_new_06.xml#06-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-05" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-05</a><br/>
06<b>-</b>06&#160;<a href="whats_new_05.xml#06-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;06-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#06-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;06-06</a><br/>
06<b>-</b>07&#160;<a href="whats_new_06.xml#06-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-07" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#06-07" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;06-07</a><br/>
06<b>-</b>08&#160;<a href="whats_new_12.xml#06-08" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-08</a><br/>
06<b>-</b>09&#160;<a href="whats_new_06.xml#06-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#06-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;06-09</a><br/>
06<b>-</b>10&#160;<a href="whats_new_08.xml#06-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;06-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-10" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#06-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;06-10</a><br/>
06<b>-</b>11&#160;<a href="whats_new_08.xml#06-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;06-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#06-11" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;06-11</a><br/>
06<b>-</b>12&#160;<a href="whats_new_04.xml#06-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;06-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-12" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-12</a><br/>
06<b>-</b>13&#160;<a href="whats_new_05.xml#06-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;06-13</a><br/>
06<b>-</b>14&#160;<a href="whats_new_05.xml#06-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;06-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#06-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;06-14</a><br/>
06<b>-</b>15&#160;<a href="whats_new_06.xml#06-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#06-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;06-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-15" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-15</a><br/>
06<b>-</b>16&#160;<a href="whats_new_12.xml#06-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#06-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;06-16</a><br/>
06<b>-</b>17&#160;<a href="whats_new_06.xml#06-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#06-19.06-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-19.06-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#06-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;06-17</a><br/>
06<b>-</b>18&#160;<a href="whats_new_05.xml#06-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;06-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#06-19.06-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-19.06-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#06-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;06-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#06-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;06-18</a><br/>
06<b>-</b>19&#160;<a href="whats_new_06.xml#06-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-19</a><br/>
06<b>-</b>20&#160;<a href="whats_new_07.xml#06-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;06-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#06-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;06-20</a><br/>
06<b>-</b>21&#160;<a href="whats_new_09.xml#06-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;06-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#06-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;06-21</a><br/>
06<b>-</b>22&#160;<a href="whats_new_06.xml#06-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#06-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;06-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#06-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;06-22</a><br/>
06<b>-</b>23&#160;<a href="whats_new_11.xml#06-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;06-23</a><br/>
06<b>-</b>24&#160;<a href="whats_new_05.xml#06-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;06-24</a><br/>
06<b>-</b>25&#160;<a href="whats_new_04.xml#06-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;06-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#06-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;06-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#06-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;06-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#06-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;06-25</a><br/>
06<b>-</b>27&#160;<a href="whats_new_16.xml#06-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;06-27</a><br/>
06<b>-</b>28&#160;<a href="whats_new_09.xml#07-04.06-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-04.06-28</a><br/>
06<b>-</b>29&#160;<a href="whats_new_04.xml#06-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;06-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#06-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;06-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-04.06-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-04.06-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#06-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;06-29</a><br/>
06<b>-</b>30&#160;<a href="whats_new_09.xml#07-04.06-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-04.06-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#06-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;06-30</a><br/>
07<b>-</b>01&#160;<a href="whats_new_05.xml#07-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-04.07-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-04.07-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#07-01" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;07-01</a><br/>
07<b>-</b>02&#160;<a href="whats_new_04.xml#07-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;07-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#07-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#07-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;07-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-04.07-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-04.07-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#07-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;07-02</a><br/>
07<b>-</b>03&#160;<a href="whats_new_04.xml#07-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;07-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#07-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-04.07-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-04.07-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#07-03" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;07-03</a><br/>
07<b>-</b>04&#160;<a href="whats_new_05.xml#07-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-04.07-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-04.07-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#07-04" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;07-04</a><br/>
07<b>-</b>05&#160;<a href="whats_new_05.xml#07-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#07-05" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;07-05</a><br/>
07<b>-</b>06&#160;<a href="whats_new_09.xml#07-23.07-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-23.07-06</a><br/>
07<b>-</b>07&#160;<a href="whats_new_04.xml#07-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;07-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#07-07" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;07-07</a><br/>
07<b>-</b>08&#160;<a href="whats_new_04.xml#07-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;07-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#07-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#07-08" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;07-08</a><br/>
07<b>-</b>09&#160;<a href="whats_new_11.xml#07-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-09</a><br/>
07<b>-</b>10&#160;<a href="whats_new_11.xml#07-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-10</a><br/>
07<b>-</b>11&#160;<a href="whats_new_05.xml#07-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#07-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;07-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-11</a><br/>
07<b>-</b>12&#160;<a href="whats_new_06.xml#07-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;07-12</a><br/>
07<b>-</b>13&#160;<a href="whats_new_07.xml#07-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-13</a><br/>
07<b>-</b>14&#160;<a href="whats_new_03.xml#07-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;07-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#07-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;07-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#07-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;07-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#07-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;07-14</a><br/>
07<b>-</b>15&#160;<a href="whats_new_05.xml#07-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-15</a><br/>
07<b>-</b>16&#160;<a href="whats_new_03.xml#07-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;07-16</a><br/>
07<b>-</b>17&#160;<a href="whats_new_11.xml#07-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#07-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;07-17</a><br/>
07<b>-</b>18&#160;<a href="whats_new_03.xml#07-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;07-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-18</a><br/>
07<b>-</b>19&#160;<a href="whats_new_05.xml#07-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-19</a><br/>
07<b>-</b>20&#160;<a href="whats_new_03.xml#07-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;07-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-20</a><br/>
07<b>-</b>21&#160;<a href="whats_new_05.xml#07-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;07-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-21</a><br/>
07<b>-</b>22&#160;<a href="whats_new_03.xml#07-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;07-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-22</a><br/>
07<b>-</b>23&#160;<a href="whats_new_07.xml#07-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-23</a><br/>
07<b>-</b>24&#160;<a href="whats_new_09.xml#07-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-24</a><br/>
07<b>-</b>25&#160;<a href="whats_new_07.xml#07-26.07-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-26.07-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-25</a><br/>
07<b>-</b>26&#160;<a href="whats_new_03.xml#07-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;07-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-26.07-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-26.07-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#07-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;07-26</a><br/>
07<b>-</b>27&#160;<a href="whats_new_11.xml#07-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-27</a><br/>
07<b>-</b>28&#160;<a href="whats_new_07.xml#07-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-28</a><br/>
07<b>-</b>29&#160;<a href="whats_new_03.xml#07-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;07-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-29</a><br/>
07<b>-</b>30&#160;<a href="whats_new_03.xml#07-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;07-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#07-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;07-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#07-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;07-30</a><br/>
07<b>-</b>31&#160;<a href="whats_new_04.xml#07-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;07-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#07-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;07-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#07-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#07-31" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;07-31</a><br/>
08<b>-</b>01&#160;<a href="whats_new_03.xml#08-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#08-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08-01</a><br/>
08<b>-</b>02&#160;<a href="whats_new_09.xml#08-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-02</a><br/>
08<b>-</b>03&#160;<a href="whats_new_03.xml#08-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-03</a><br/>
08<b>-</b>04&#160;<a href="whats_new_03.xml#08-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-11.08-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-11.08-04</a><br/>
08<b>-</b>05&#160;<a href="whats_new_03.xml#08-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#08-05" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;08-05</a><br/>
08<b>-</b>06&#160;<a href="whats_new_03.xml#08-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#08-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-11.08-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-11.08-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#08-06" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;08-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-06" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-06</a><br/>
08<b>-</b>07&#160;<a href="whats_new_03.xml#08-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#08-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;08-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#08-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;08-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-11.08-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-11.08-07</a><br/>
08<b>-</b>08&#160;<a href="whats_new_08.xml#08-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;08-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-11.08-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-11.08-08</a><br/>
08<b>-</b>09&#160;<a href="whats_new_07.xml#08-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;08-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#08_13.08-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08_13.08-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-11.08-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-11.08-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-09</a><br/>
08<b>-</b>10&#160;<a href="whats_new_03.xml#08-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#08_13.08-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08_13.08-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-11.08-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-11.08-10</a><br/>
08<b>-</b>11&#160;<a href="whats_new_03.xml#08-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#08_13.08-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08_13.08-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#08-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;08-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#08-11" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;08-11</a><br/>
08<b>-</b>12&#160;<a href="whats_new_04.xml#08-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;08-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#08-12" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;08-12</a><br/>
08<b>-</b>13&#160;<a href="whats_new_05.xml#08-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;08-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#08_13.08-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08_13.08-13</a><br/>
08<b>-</b>14&#160;<a href="whats_new_05.xml#08-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;08-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#08-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08-14</a><br/>
08<b>-</b>15&#160;<a href="whats_new_05.xml#08-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;08-15</a><br/>
08<b>-</b>16&#160;<a href="whats_new_03.xml#08-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-16</a><br/>
08<b>-</b>17&#160;<a href="whats_new_03.xml#08-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#08-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;08-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-17</a><br/>
08<b>-</b>19&#160;<a href="whats_new_03.xml#08-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#08-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;08-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#08-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;08-19</a><br/>
08<b>-</b>20&#160;<a href="whats_new_05.xml#08-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;08-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-20" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-20</a><br/>
08<b>-</b>21&#160;<a href="whats_new_10.xml#08-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;08-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#09-01.08-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-01.08-21</a><br/>
08<b>-</b>22&#160;<a href="whats_new_03.xml#08-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-22</a><br/>
08<b>-</b>23&#160;<a href="whats_new_03.xml#08-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;08-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#09-01.08-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-01.08-23</a><br/>
08<b>-</b>24&#160;<a href="whats_new_04.xml#08-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;08-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#08-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;08-24</a><br/>
08<b>-</b>25&#160;<a href="whats_new_04.xml#08-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;08-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#08-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#09-01.08-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-01.08-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-25" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#08-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;08-25</a><br/>
08<b>-</b>26&#160;<a href="whats_new_15.xml#08-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-26</a><br/>
08<b>-</b>27&#160;<a href="whats_new_04.xml#08-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;08-27</a><br/>
08<b>-</b>28&#160;<a href="whats_new_15.xml#08-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-28</a><br/>
08<b>-</b>29&#160;<a href="whats_new_08.xml#08-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;08-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-29" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-29</a><br/>
08<b>-</b>30&#160;<a href="whats_new_05.xml#08-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;08-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#09-01.08-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-01.08-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#08-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;08-30</a><br/>
08<b>-</b>31&#160;<a href="whats_new_11.xml#09-01.08-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-01.08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#08-31" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;08-31</a><br/>
08<b>_</b>13&#160;<a href="whats_new_09.xml#08_13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;08_13</a><br/>
09<b>-</b>01&#160;<a href="whats_new_08.xml#09-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#09-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-01</a><br/>
09<b>-</b>02&#160;<a href="whats_new_04.xml#09-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#09-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-02</a><br/>
09<b>-</b>03&#160;<a href="whats_new_03.xml#09-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-03" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-03</a><br/>
09<b>-</b>04&#160;<a href="whats_new_03.xml#09-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#09-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-04</a><br/>
09<b>-</b>05&#160;<a href="whats_new_03.xml#09-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#09-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-05</a><br/>
09<b>-</b>06&#160;<a href="whats_new_03.xml#09-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#09-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;09-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#09-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;09-06</a><br/>
09<b>-</b>07&#160;<a href="whats_new_04.xml#09-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#09-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;09-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#09-07" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;09-07</a><br/>
09<b>-</b>09&#160;<a href="whats_new_04.xml#09-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#09-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;09-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-09</a><br/>
09<b>-</b>10&#160;<a href="whats_new_04.xml#09-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-10</a><br/>
09<b>-</b>11&#160;<a href="whats_new_12.xml#09-11" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;09-11</a><br/>
09<b>-</b>12&#160;<a href="whats_new_08.xml#09-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-12</a><br/>
09<b>-</b>13&#160;<a href="whats_new_03.xml#09-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#09-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#09-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;09-13</a><br/>
09<b>-</b>14&#160;<a href="whats_new_03.xml#09-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#09-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;09-14</a><br/>
09<b>-</b>15&#160;<a href="whats_new_03.xml#09-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-15</a><br/>
09<b>-</b>16&#160;<a href="whats_new_08.xml#09-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#09-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;09-16</a><br/>
09<b>-</b>17&#160;<a href="whats_new_08.xml#09-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-17</a><br/>
09<b>-</b>18&#160;<a href="whats_new_03.xml#09-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#09-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;09-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#09-18" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;09-18</a><br/>
09<b>-</b>19&#160;<a href="whats_new_03.xml#09-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#09-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;09-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#09-19" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;09-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-19" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-19</a><br/>
09<b>-</b>20&#160;<a href="whats_new_03.xml#09-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#09-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;09-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#09-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;09-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#09-20" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;09-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-20" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-20</a><br/>
09<b>-</b>21&#160;<a href="whats_new_04.xml#09-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#09-21" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;09-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-21" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-21</a><br/>
09<b>-</b>22&#160;<a href="whats_new_10.xml#09-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;09-22</a><br/>
09<b>-</b>23&#160;<a href="whats_new_04.xml#09-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-23</a><br/>
09<b>-</b>24&#160;<a href="whats_new_05.xml#09-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;09-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#09-24" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;09-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-24" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-24</a><br/>
09<b>-</b>25&#160;<a href="whats_new_14.xml#09-25" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;09-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-25" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-25</a><br/>
09<b>-</b>26&#160;<a href="whats_new_04.xml#09-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#09-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;09-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#09-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;09-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#09-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;09-26</a><br/>
09<b>-</b>27&#160;<a href="whats_new_05.xml#09-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;09-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#09-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;09-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#09-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;09-27</a><br/>
09<b>-</b>28&#160;<a href="whats_new_09.xml#09-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;09-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#09-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;09-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#09-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;09-28</a><br/>
09<b>-</b>29&#160;<a href="whats_new_04.xml#09-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;09-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#09-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;09-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#09-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;09-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#09-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;09-29</a><br/>
09<b>-</b>30&#160;<a href="whats_new_03.xml#09-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;09-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#09-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;09-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#09-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;09-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#09-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;09-30</a><br/>
1&#160;<a href="ode_evaluate.xml#p.p = 1" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;p.p&#xA0;=&#xA0;1</a><br/>
&#160;&#160;<a href="cholesky_theory.xml#Lemma 1" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Lemma&#xA0;1</a><br/>
1<b>/</b>i&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
10&#160;<a href="log10.xml" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10</a><br/>
10<b>-</b>02&#160;<a href="whats_new_07.xml#10-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;10-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#10-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;10-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#10-02" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;10-02</a><br/>
10<b>-</b>03&#160;<a href="whats_new_09.xml#10-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#10-03" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;10-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#10-03" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;10-03</a><br/>
10<b>-</b>04&#160;<a href="whats_new_12.xml#10-04" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;10-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#10-04" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;10-04</a><br/>
10<b>-</b>05&#160;<a href="whats_new_03.xml#10-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;10-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#10-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;10-05</a><br/>
10<b>-</b>06&#160;<a href="whats_new_03.xml#10-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;10-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#10-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;10-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#10-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;10-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#10-06" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;10-06</a><br/>
10<b>-</b>10&#160;<a href="whats_new_03.xml#10-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;10-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#10-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-10</a><br/>
10<b>-</b>12&#160;<a href="whats_new_05.xml#10-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;10-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#10-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;10-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#10-12" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;10-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#10-12" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;10-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#10-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;10-12</a><br/>
10<b>-</b>13&#160;<a href="whats_new_07.xml#10-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;10-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#10-13" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;10-13</a><br/>
10<b>-</b>14&#160;<a href="whats_new_03.xml#10-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;10-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#10-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;10-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#10-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#10-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;10-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#10-14" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;10-14</a><br/>
10<b>-</b>15&#160;<a href="whats_new_13.xml#10-15" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;10-15</a><br/>
10<b>-</b>16&#160;<a href="whats_new_03.xml#10-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;10-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#10-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;10-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#10-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#10-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;10-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#10-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;10-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#10-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#10-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;10-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#10-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;10-16</a><br/>
10<b>-</b>17&#160;<a href="whats_new_08.xml#10-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;10-17</a><br/>
10<b>-</b>18&#160;<a href="whats_new_05.xml#10-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;10-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#10-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-18</a><br/>
10<b>-</b>19&#160;<a href="whats_new_04.xml#10-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;10-19</a><br/>
10<b>-</b>20&#160;<a href="whats_new_05.xml#10-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;10-20</a><br/>
10<b>-</b>21&#160;<a href="whats_new_03.xml#10-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;10-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#10-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;10-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#10-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#10-21" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;10-21</a><br/>
10<b>-</b>22&#160;<a href="whats_new_07.xml#10-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;10-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#10-22" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;10-22</a><br/>
10<b>-</b>23&#160;<a href="whats_new_07.xml#10-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;10-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#10-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#10-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;10-23</a><br/>
10<b>-</b>24&#160;<a href="whats_new_09.xml#10-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#10-24" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;10-24</a><br/>
10<b>-</b>25&#160;<a href="whats_new_06.xml#10-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#10-25" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;10-25</a><br/>
10<b>-</b>26&#160;<a href="whats_new_06.xml#10-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-26</a><br/>
10<b>-</b>27&#160;<a href="whats_new_04.xml#10-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;10-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#10-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#10-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;10-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#10-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;10-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#10-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#10-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;10-27</a><br/>
10<b>-</b>28&#160;<a href="whats_new_04.xml#10-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;10-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#10-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#10-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-28</a><br/>
10<b>-</b>29&#160;<a href="whats_new_04.xml#10-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;10-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#10-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#10-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#10-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;10-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#10-29" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;10-29</a><br/>
10<b>-</b>30&#160;<a href="whats_new_07.xml#10-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;10-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#10-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;10-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#10-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;10-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#10-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;10-30</a><br/>
10<b>-</b>31&#160;<a href="whats_new_06.xml#10-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;10-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#10-31" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;10-31</a><br/>
11<b>-</b>01&#160;<a href="whats_new_04.xml#11-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#11-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#11-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#11-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-01</a><br/>
11<b>-</b>02&#160;<a href="whats_new_03.xml#11-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#11-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#11-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#11-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-02</a><br/>
11<b>-</b>03&#160;<a href="whats_new_07.xml#11-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-03</a><br/>
11<b>-</b>04&#160;<a href="whats_new_03.xml#11-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#11-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#11-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#11-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-04" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-04</a><br/>
11<b>-</b>05&#160;<a href="whats_new_06.xml#11-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#11-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-05</a><br/>
11<b>-</b>06&#160;<a href="whats_new_03.xml#11-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#11-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#11-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#11-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-06" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#11-06" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;11-06</a><br/>
11<b>-</b>07&#160;<a href="whats_new_05.xml#11-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-07</a><br/>
11<b>-</b>08&#160;<a href="whats_new_06.xml#11-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#11-08" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;11-08</a><br/>
11<b>-</b>09&#160;<a href="whats_new_05.xml#11-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-09" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-09</a><br/>
11<b>-</b>10&#160;<a href="whats_new_04.xml#11-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-10</a><br/>
11<b>-</b>11&#160;<a href="whats_new_03.xml#11-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-11</a><br/>
11<b>-</b>12&#160;<a href="whats_new_03.xml#11-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#11-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#11-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#11-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#11-12" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;11-12</a><br/>
11<b>-</b>13&#160;<a href="whats_new_04.xml#11-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#11-13" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;11-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#11-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;11-13</a><br/>
11<b>-</b>14&#160;<a href="whats_new_03.xml#11-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#11-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-14" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#11-14" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;11-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#11-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;11-14</a><br/>
11<b>-</b>15&#160;<a href="whats_new_03.xml#11-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#11-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#11-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-15</a><br/>
11<b>-</b>16&#160;<a href="whats_new_03.xml#11-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#11-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-16</a><br/>
11<b>-</b>17&#160;<a href="whats_new_04.xml#11-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;11-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-17</a><br/>
11<b>-</b>18&#160;<a href="whats_new_06.xml#11-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#11-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#11-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;11-18</a><br/>
11<b>-</b>19&#160;<a href="whats_new_05.xml#11-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-19</a><br/>
11<b>-</b>20&#160;<a href="whats_new_03.xml#11-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#11-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#11-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;11-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-20" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-20</a><br/>
11<b>-</b>21&#160;<a href="whats_new_03.xml#11-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;11-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#11-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;11-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-21" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-21</a><br/>
11<b>-</b>22&#160;<a href="whats_new_05.xml#11-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#11-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;11-22</a><br/>
11<b>-</b>23&#160;<a href="whats_new_05.xml#11-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;11-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#11-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#11-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-23</a><br/>
11<b>-</b>24&#160;<a href="whats_new_11.xml#11-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#11-24" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;11-24</a><br/>
11<b>-</b>25&#160;<a href="whats_new_15.xml#11-25" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;11-25</a><br/>
11<b>-</b>26&#160;<a href="whats_new_09.xml#11-26" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;11-26</a><br/>
11<b>-</b>27&#160;<a href="whats_new_09.xml#11-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;11-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#11-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;11-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-27" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#11-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;11-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#11-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;11-27</a><br/>
11<b>-</b>28&#160;<a href="whats_new_06.xml#11-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#11-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;11-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#11-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;11-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#11-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;11-28</a><br/>
11<b>-</b>29&#160;<a href="whats_new_06.xml#11-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#11-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;11-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#11-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;11-29</a><br/>
11<b>-</b>30&#160;<a href="whats_new_06.xml#11-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;11-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#11-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;11-30</a><br/>
12<b>-</b>01&#160;<a href="whats_new_03.xml#12-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;12-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#12-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-01" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#12-01" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;12-01</a><br/>
12<b>-</b>02&#160;<a href="whats_new_05.xml#12-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#12-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;12-02</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#12-02" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;12-02</a><br/>
12<b>-</b>03&#160;<a href="whats_new_04.xml#12-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;12-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#12-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#12-03" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;12-03</a><br/>
12<b>-</b>04&#160;<a href="whats_new_07.xml#12-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;12-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#12-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;12-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#12-04" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;12-04</a><br/>
12<b>-</b>05&#160;<a href="whats_new_03.xml#12-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;12-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#12-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-05</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#12-05" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;12-05</a><br/>
12<b>-</b>06&#160;<a href="whats_new_05.xml#12-06" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-06</a><br/>
12<b>-</b>07&#160;<a href="whats_new_05.xml#12-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-07" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-07</a><br/>
12<b>-</b>08&#160;<a href="whats_new_05.xml#12-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#12-08" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;12-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#12-08" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;12-08</a><br/>
12<b>-</b>09&#160;<a href="whats_new_04.xml#12-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;12-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-09</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#12-09" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;12-09</a><br/>
12<b>-</b>10&#160;<a href="whats_new_03.xml#12-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;12-10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-10" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-10</a><br/>
12<b>-</b>11&#160;<a href="whats_new_04.xml#12-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;12-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#12-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-11</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#12-11" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;12-11</a><br/>
12<b>-</b>12&#160;<a href="whats_new_03.xml#12-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;12-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-12</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#12-12" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;12-12</a><br/>
12<b>-</b>13&#160;<a href="whats_new_03.xml#12-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;12-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-13" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-13</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#12-13" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;12-13</a><br/>
12<b>-</b>14&#160;<a href="whats_new_03.xml#12-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;12-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#12-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#12-14" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;12-14</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-14" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-14</a><br/>
12<b>-</b>15&#160;<a href="whats_new_05.xml#12-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-15" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-15" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-15</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-15" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-15</a><br/>
12<b>-</b>16&#160;<a href="whats_new_05.xml#12-16" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-16</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-16" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-16</a><br/>
12<b>-</b>17&#160;<a href="whats_new_06.xml#12-17" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-17" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-17</a><br/>
12<b>-</b>18&#160;<a href="whats_new_06.xml#12-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#12-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;12-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#12-18" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;12-18</a><br/>
12<b>-</b>19&#160;<a href="whats_new_05.xml#12-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#12-19" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;12-19</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-19" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-19</a><br/>
12<b>-</b>20&#160;<a href="whats_new_05.xml#12-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#12-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;12-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-20" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#12-20" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;12-20</a><br/>
12<b>-</b>21&#160;<a href="whats_new_06.xml#12-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#12-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;12-21</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#12-21" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;12-21</a><br/>
12<b>-</b>22&#160;<a href="whats_new_03.xml#12-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;12-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#12-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#12-22" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;12-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-22" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-22</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-22" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-22</a><br/>
12<b>-</b>23&#160;<a href="whats_new_05.xml#12-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#12-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;12-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-23" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#12-23" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;12-23</a><br/>
12<b>-</b>24&#160;<a href="whats_new_03.xml#12-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;12-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml#12-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005:&#160;12-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#12-24" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;12-24</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#12-24" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;12-24</a><br/>
12<b>-</b>25&#160;<a href="whats_new_07.xml#12-25" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;12-25</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-25" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-25</a><br/>
12<b>-</b>26&#160;<a href="whats_new_12.xml#12-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#12-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;12-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-26" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-26</a><br/>
12<b>-</b>27&#160;<a href="whats_new_12.xml#12-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#12-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;12-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-27" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-27</a><br/>
12<b>-</b>28&#160;<a href="whats_new_11.xml#12-28" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;12-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#12-28" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;12-28</a><br/>
12<b>-</b>29&#160;<a href="whats_new_07.xml#12-29" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;12-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-29" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#12-29" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;12-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-29" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-29</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#12-29" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;12-29</a><br/>
12<b>-</b>30&#160;<a href="whats_new_11.xml#12-30" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;12-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#12-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;12-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#12-30" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;12-30</a><br/>
12<b>-</b>31&#160;<a href="whats_new_10.xml#12-31" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;12-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#12-31" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;12-31</a><br/>
1<b>:</b>&#160;<a href="install.xml#Instructions.Step 1: Download" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;1:&#xA0;Download</a><br/>
2&#160;<a href="cholesky_theory.xml#Lemma 2" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Lemma&#xA0;2</a><br/>
2003&#160;<a href="whats_new_03.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003</a><br/>
2004&#160;<a href="whats_new_04.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004</a><br/>
2005&#160;<a href="whats_new_05.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005</a><br/>
2005<b>-</b>08<b>-</b>07&#160;<a href="condexp.xml#Deprecate 2005-08-07" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Deprecate&#xA0;2005-08-07</a><br/>
2006&#160;<a href="whats_new_06.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006</a><br/>
2006<b>-</b>03<b>-</b>31&#160;<a href="fundeprecated.xml#Memory.Deprecated 2006-03-31" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Memory.Deprecated&#xA0;2006-03-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Order.Deprecated 2006-03-31" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Order.Deprecated&#xA0;2006-03-31</a><br/>
2006<b>-</b>04<b>-</b>03&#160;<a href="fundeprecated.xml#Size.Deprecated 2006-04-03" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Size.Deprecated&#xA0;2006-04-03</a><br/>
2006<b>-</b>04<b>-</b>08&#160;<a href="fundeprecated.xml#use_VecAD.Deprecated 2006-04-08" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;use_VecAD.Deprecated&#xA0;2006-04-08</a><br/>
2006<b>-</b>06<b>-</b>17&#160;<a href="fundeprecated.xml#taylor_size.Deprecated 2006-06-17" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;taylor_size.Deprecated&#xA0;2006-06-17</a><br/>
2006<b>-</b>12<b>-</b>17&#160;<a href="include_deprecated.xml#Deprecated 2006-12-17" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Deprecated&#xA0;2006-12-17</a><br/>
2007&#160;<a href="whats_new_07.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007</a><br/>
2007<b>-</b>07<b>-</b>23&#160;<a href="tracknewdel.xml#Deprecated 2007-07-23" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;Deprecated&#xA0;2007-07-23</a><br/>
2007<b>-</b>07<b>-</b>28&#160;<a href="test_vector.xml#CppADvector Deprecated 2007-07-28" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;CppADvector&#xA0;Deprecated&#xA0;2007-07-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#CppADCreateDiscrete Deprecated 2007-07-28" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;CppADCreateDiscrete&#xA0;Deprecated&#xA0;2007-07-28</a><br/>
2007<b>-</b>07<b>-</b>31&#160;<a href="boolfun.xml#Deprecated 2007-07-31" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Deprecated&#xA0;2007-07-31</a><br/>
2007<b>-</b>08<b>-</b>07&#160;<a href="fundeprecated.xml#Dependent.Deprecated 2007-08-07" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Dependent.Deprecated&#xA0;2007-08-07</a><br/>
2008&#160;<a href="whats_new_08.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008</a><br/>
2009&#160;<a href="whats_new_09.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009</a><br/>
2010&#160;<a href="whats_new_10.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010</a><br/>
2011&#160;<a href="whats_new_11.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011</a><br/>
2011<b>-</b>06<b>-</b>23&#160;<a href="omp_max_thread.xml#Deprecated 2011-06-23" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup:&#160;Deprecated&#xA0;2011-06-23</a><br/>
2011<b>-</b>08<b>-</b>23&#160;<a href="omp_alloc.xml#Deprecated 2011-08-23" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD:&#160;Deprecated&#xA0;2011-08-23</a><br/>
2011<b>-</b>08<b>-</b>31&#160;<a href="omp_alloc.cpp.xml#Deprecated 2011-08-31" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml#Deprecated 2011-08-31" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml#Deprecated 2011-08-31" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml#Deprecated 2011-08-31" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml#Deprecated 2011-08-31" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml#Deprecated 2011-08-31" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml#Deprecated 2011-08-31" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml#Deprecated 2011-08-31" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml#Deprecated 2011-08-31" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml#Deprecated 2011-08-31" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml#Deprecated 2011-08-31" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Deprecated&#xA0;2011-08-31</a><br/>
2012&#160;<a href="whats_new_12.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012</a><br/>
2012<b>-</b>04<b>-</b>06&#160;<a href="memory_leak.xml#Deprecated 2012-04-06" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;Deprecated&#xA0;2012-04-06</a><br/>
2012<b>-</b>06<b>-</b>17&#160;<a href="epsilon.xml#Deprecated 2012-06-17" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types:&#160;Deprecated&#xA0;2012-06-17</a><br/>
2012<b>-</b>07<b>-</b>03&#160;<a href="test_vector.xml#Deprecated 2012-07-03" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;Deprecated&#xA0;2012-07-03</a><br/>
2012<b>-</b>11<b>-</b>28&#160;<a href="cppad_ipopt_nlp.xml#Deprecated 2012-11-28" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Deprecated&#xA0;2012-11-28</a><br/>
2012<b>-</b>12<b>-</b>26&#160;<a href="auto_tools.xml#Deprecated 2012-12-26" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Deprecated&#xA0;2012-12-26</a><br/>
2013&#160;<a href="whats_new_13.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013</a><br/>
2013<b>-</b>05<b>-</b>27&#160;<a href="old_mat_mul.cpp.xml#Deprecated 2013-05-27" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_tan.cpp.xml#Deprecated 2013-05-27" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_2.cpp.xml#Deprecated 2013-05-27" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml#Deprecated 2013-05-27" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_reciprocal.cpp.xml#Deprecated 2013-05-27" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Deprecated 2013-05-27" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Deprecated&#xA0;2013-05-27</a><br/>
2013<b>-</b>12<b>-</b>31&#160;<a href="ad_ctor.xml#x.Deprecated 2013-12-31" target="_top">AD&#xA0;Constructors:&#160;x.Deprecated&#xA0;2013-12-31</a><br/>
2014&#160;<a href="whats_new_14.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014</a><br/>
2014<b>-</b>03<b>-</b>18&#160;<a href="fundeprecated.xml#capacity_taylor.Deprecated 2014-03-18" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;capacity_taylor.Deprecated&#xA0;2014-03-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#size_taylor.Deprecated 2014-03-18" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;size_taylor.Deprecated&#xA0;2014-03-18</a><br/>
2015&#160;<a href="whats_new_15.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015</a><br/>
2015<b>-</b>01<b>-</b>20&#160;<a href="comparechange.xml#Deprecated 2015-01-20" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Deprecated&#xA0;2015-01-20</a><br/>
2015<b>-</b>09<b>-</b>26&#160;<a href="zdouble.xml#Deprecated 2015-09-26" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Deprecated&#xA0;2015-09-26</a><br/>
2015<b>-</b>10<b>-</b>04&#160;<a href="nan.xml#nan(zero).Deprecated 2015-10-04" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;nan(zero).Deprecated&#xA0;2015-10-04</a><br/>
2015<b>-</b>11<b>-</b>30&#160;<a href="include_deprecated.xml#Deprecated 2015-11-30" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Deprecated&#xA0;2015-11-30</a><br/>
2016&#160;<a href="whats_new_16.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016</a><br/>
2016<b>-</b>06<b>-</b>27&#160;<a href="atomic_rev_sparse_hes.xml#Deprecated 2016-06-27" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Deprecated&#xA0;2016-06-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml#Deprecated 2016-06-27" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Deprecated&#xA0;2016-06-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Deprecated 2016-06-27" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Deprecated&#xA0;2016-06-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml#Deprecated 2016-06-27" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Deprecated&#xA0;2016-06-27</a><br/>
2<b>:</b>&#160;<a href="exp_eps_rev2.xml#Index 2: f_1" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 2: f_1" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 2: f_1" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 2: f_1" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;<a href="install.xml#Instructions.Step 2: Cmake" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;2:&#xA0;Cmake</a><br/>
3&#160;<a href="det_grad_33.xml" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;<a href="det_grad_33.xml" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;<a href="det_33.xml" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;<a href="det_33.xml" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
3<b>:</b>&#160;<a href="exp_eps_rev2.xml#Index 3: f_2" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 3: f_2" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 3: f_2" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 3: f_2" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;<a href="install.xml#Instructions.Step 3: Check" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;3:&#xA0;Check</a><br/>
3rd&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
4<b>:</b>&#160;<a href="exp_eps_rev2.xml#Index 4: f_3" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 4: f_3" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 4: f_3" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 4: f_3" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;<a href="install.xml#Instructions.Step 4: Installation" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;4:&#xA0;Installation</a><br/>
4th&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
5<b>:</b>&#160;<a href="exp_eps_rev2.xml#Index 5: f_4" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 5: f_4" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 5: f_4" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 5: f_4" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
5th&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
6<b>:</b>&#160;<a href="exp_eps_rev2.xml#Index 6: f_5" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;6:&#xA0;f_5</a><br/>
&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 6: f_5" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;6:&#xA0;f_5</a><br/>
7<b>:</b>&#160;<a href="exp_eps_rev2.xml#Index 7: f_6" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;7:&#xA0;f_6</a><br/>
&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 7: f_6" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;7:&#xA0;f_6</a><br/>
<b>&lt;</b>&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
<b>&lt;&lt;</b>&#160;<a href="ad_output.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="ad_input.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="ad_output.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
<b>&lt;=</b>&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
<b>=</b>&#160;<a href="ode_evaluate.xml#p.p = 1" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;p.p&#xA0;=&#xA0;1</a><br/>
&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode.Case k = 0" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode.Case&#xA0;k&#xA0;=&#xA0;0</a><br/>
<b>==</b>&#160;<a href="ode_evaluate.xml#p.p == 0" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;p.p&#xA0;==&#xA0;0</a><br/>
&#160;&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
<b>&gt;</b>&#160;<a href="mul_level.xml#Procedure.Second Start AD&lt; AD&lt;double&gt; &gt;" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Second&#xA0;Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</a><br/>
&#160;&#160;<a href="mul_level.xml#Procedure.Start AD&lt; AD&lt;double&gt; &gt; Recording" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;&#xA0;Recording</a><br/>
&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode.Case k &gt; 0" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode.Case&#xA0;k&#xA0;&gt;&#xA0;0</a><br/>
<b>&gt;=</b>&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
<b>&gt;&gt;</b>&#160;<a href="ad_input.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
<b>[</b>0<br/>
&#160;&#160;&#160;&#160;&#160;1<b>]</b>&#160;<a href="uniform_01_c.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
&#160;&#160;&#160;&#160;&#160;1<b>]</b>&#160;<a href="uniform_01.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
<b>[]</b>&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;<a href="simplevector.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector</a><br/>

<b><big><a name="A">A</a></big></b>
<br/>
A<b>.</b>1<b>.</b>1c&#160;<a href="a11c_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
AD&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt</a><br/>
&#160;&#160;&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
&#160;&#160;&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="introduction.xml" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation</a><br/>
&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
ADFun&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence</a><br/>
Adolc&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
Automatic&#160;<a href="introduction.xml" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation</a><br/>
a11c&#160;<a href="thread_test.cpp.xml#a11c" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;a11c</a><br/>
abort&#160;<a href="abort_recording.cpp.xml" target="_top">Abort&#xA0;Current&#xA0;Recording:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.xml" target="_top">Abort&#xA0;Recording&#xA0;of&#xA0;an&#xA0;Operation&#xA0;Sequence</a><br/>
abort<b>_</b>op<b>_</b>index&#160;<a href="independent.xml#abort_op_index" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;abort_op_index</a><br/>
above&#160;<a href="glossary.xml#AD Type Above Base" target="_top">Glossary:&#160;AD&#xA0;Type&#xA0;Above&#xA0;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Cases that Apply Recursion Above" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Cases&#xA0;that&#xA0;Apply&#xA0;Recursion&#xA0;Above</a><br/>
abramowitz&#160;<a href="bib.xml#Abramowitz and Stegun" target="_top">Bibliography:&#160;Abramowitz&#xA0;and&#xA0;Stegun</a><br/>
abs&#160;<a href="base_adolc.hpp.xml#abs" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;abs</a><br/>
&#160;&#160;&#160;&#160;<a href="abs.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="abs.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs</a><br/>
absgeq&#160;<a href="lufactor.xml#AbsGeq" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;AbsGeq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#AbsGeq" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;AbsGeq</a><br/>
absolute&#160;<a href="zdouble.xml#Absolute Zero" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Absolute&#xA0;Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Absolute Zero, azmul" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Absolute&#xA0;Zero,&#xA0;azmul</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="azmul.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Zero&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="azmul.xml" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs</a><br/>
access&#160;<a href="cppad_vector.xml#Element Access" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Element&#xA0;Access</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Element Access" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Element&#xA0;Access</a><br/>
accurate&#160;<a href="exp_eps.xml" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation</a><br/>
aclocal&#160;<a href="whats_new_06.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006</a><br/>
acos&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acos.cpp.xml" target="_top">The&#xA0;AD&#xA0;acos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acos.xml" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos</a><br/>
acosh&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;acosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh</a><br/>
active&#160;<a href="glossary.xml#Tape.Active" target="_top">Glossary:&#160;Tape.Active</a><br/>
activity&#160;<a href="optimize_reverse_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Reverse&#xA0;Activity&#xA0;Analysis</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_forward_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Forward&#xA0;Activity&#xA0;Analysis</a><br/>
ad&#160;<a href="numeric_ad.xml" target="_top">Some&#xA0;Numerical&#xA0;AD&#xA0;Utilities</a><br/>
&#160;&#160;&#160;<a href="zdouble.xml" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero</a><br/>
&#160;&#160;&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;<a href="old_atomic.xml#Example.Use AD" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Example.Use&#xA0;AD</a><br/>
&#160;&#160;&#160;<a href="old_atomic.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;<a href="epsilon.xml" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types</a><br/>
&#160;&#160;&#160;<a href="glossary.xml#AD Type Above Base" target="_top">Glossary:&#160;AD&#xA0;Type&#xA0;Above&#xA0;Base</a><br/>
&#160;&#160;&#160;<a href="glossary.xml#AD of Base" target="_top">Glossary:&#160;AD&#xA0;of&#xA0;Base</a><br/>
&#160;&#160;&#160;<a href="glossary.xml#AD Function" target="_top">Glossary:&#160;AD&#xA0;Function</a><br/>
&#160;&#160;&#160;<a href="speed_main.xml#package.AD Package" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;package.AD&#xA0;Package</a><br/>
&#160;&#160;&#160;<a href="speed.xml" target="_top">Speed&#xA0;Test&#xA0;an&#xA0;Operator&#xA0;Overloading&#xA0;AD&#xA0;Package</a><br/>
&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Taylor's Method Using AD" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor's&#xA0;Method&#xA0;Using&#xA0;AD</a><br/>
&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Taylor's Method Using AD" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor's&#xA0;Method&#xA0;Using&#xA0;AD</a><br/>
&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="mul_level.xml" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD</a><br/>
&#160;&#160;&#160;<a href="team_pthread.cpp.xml" target="_top">Pthread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;<a href="team_bthread.cpp.xml" target="_top">Boost&#xA0;Thread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;<a href="team_openmp.cpp.xml" target="_top">OpenMP&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;<a href="team_thread.hpp.xml" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;<a href="team_example.cpp.xml" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="parallel_ad.xml" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;<a href="multi_thread.xml#Parallel AD" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;Parallel&#xA0;AD</a><br/>
&#160;&#160;&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="base_example.xml" target="_top">Example&#xA0;AD&#xA0;Base&#xA0;Types&#xA0;That&#xA0;are&#xA0;not&#xA0;AD&lt;OtherBase&gt;</a><br/>
&#160;&#160;&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="vecad.xml#AD Indexing" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;AD&#xA0;Indexing</a><br/>
&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
&#160;&#160;&#160;<a href="par_var.cpp.xml" target="_top">AD&#xA0;Parameter&#xA0;and&#xA0;Variable&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="parvar.xml" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable</a><br/>
&#160;&#160;&#160;<a href="bool_fun.cpp.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="boolfun.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions</a><br/>
&#160;&#160;&#160;<a href="near_equal_ext.cpp.xml" target="_top">Compare&#xA0;AD&#xA0;with&#xA0;Base&#xA0;Objects:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="nearequalext.xml" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;<a href="boolvalued.xml" target="_top">Bool&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions&#xA0;with&#xA0;AD&#xA0;Arguments</a><br/>
&#160;&#160;&#160;<a href="cholesky_theory.xml" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization</a><br/>
&#160;&#160;&#160;<a href="atomic_afun.xml" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;<a href="atomic_base.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;<a href="checkpoint.xml#Purpose.Multiple Level AD" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Multiple&#xA0;Level&#xA0;AD</a><br/>
&#160;&#160;&#160;<a href="atomic.xml" target="_top">Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;<a href="numeric_limits.xml" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types</a><br/>
&#160;&#160;&#160;<a href="discrete.xml#Create AD Version" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Create&#xA0;AD&#xA0;Version</a><br/>
&#160;&#160;&#160;<a href="discrete.xml" target="_top">Discrete&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;<a href="condexp.xml" target="_top">AD&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;<a href="azmul.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Zero&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="pow.cpp.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="pow.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;<a href="atan2.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan2&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="atan2.xml" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function</a><br/>
&#160;&#160;&#160;<a href="log1p.cpp.xml" target="_top">The&#xA0;AD&#xA0;log1p&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="expm1.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="erf.cpp.xml" target="_top">The&#xA0;AD&#xA0;erf&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="atanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;atanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="asinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;asinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="acosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;acosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="abs.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="abs.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs</a><br/>
&#160;&#160;&#160;<a href="tanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;tanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="tan.cpp.xml" target="_top">The&#xA0;AD&#xA0;tan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="sqrt.cpp.xml" target="_top">The&#xA0;AD&#xA0;sqrt&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="sinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;sinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="sin.cpp.xml" target="_top">The&#xA0;AD&#xA0;sin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="log10.cpp.xml" target="_top">The&#xA0;AD&#xA0;log10&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="log.cpp.xml" target="_top">The&#xA0;AD&#xA0;log&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="exp.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="cosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;cosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="cos.cpp.xml" target="_top">The&#xA0;AD&#xA0;cos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="atan.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="asin.cpp.xml" target="_top">The&#xA0;AD&#xA0;asin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="acos.cpp.xml" target="_top">The&#xA0;AD&#xA0;acos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;<a href="div.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="mul.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="sub.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="add.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;&#160;<a href="unary_minus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="unaryminus.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator</a><br/>
&#160;&#160;&#160;<a href="unary_plus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="unaryplus.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator</a><br/>
&#160;&#160;&#160;<a href="arithmetic.xml" target="_top">AD&#xA0;Arithmetic&#xA0;Operators&#xA0;and&#xA0;Computed&#xA0;Assignments</a><br/>
&#160;&#160;&#160;<a href="advalued.xml" target="_top">AD&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions</a><br/>
&#160;&#160;&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;<a href="ad_output.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="ad_input.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="ad_output.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
&#160;&#160;&#160;<a href="ad_input.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
&#160;&#160;&#160;<a href="ad_to_string.xml" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String</a><br/>
&#160;&#160;&#160;<a href="integer.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="integer.xml#x.AD Types" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;x.AD&#xA0;Types</a><br/>
&#160;&#160;&#160;<a href="integer.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer</a><br/>
&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="value.xml" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;<a href="convert.xml" target="_top">Conversion&#xA0;and&#xA0;I/O&#xA0;of&#xA0;AD&#xA0;Objects</a><br/>
&#160;&#160;&#160;<a href="ad_assign.cpp.xml" target="_top">AD&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="ad_assign.xml" target="_top">AD&#xA0;Assignment&#xA0;Operator</a><br/>
&#160;&#160;&#160;<a href="ad_ctor.cpp.xml" target="_top">AD&#xA0;Constructors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="ad_ctor.xml" target="_top">AD&#xA0;Constructors</a><br/>
&#160;&#160;&#160;<a href="ad.xml" target="_top">AD&#xA0;Objects</a><br/>
ad<b>:</b>&#160;<a href="mul_level.cpp.xml" target="_top">Multiple&#xA0;Level&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_mul_level.cpp.xml" target="_top">Atomic&#xA0;Operations&#xA0;and&#xA0;Multiple-Levels&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
ad<b>&lt;</b>&#160;<a href="mul_level.xml#Procedure.Second Start AD&lt; AD&lt;double&gt; &gt;" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Second&#xA0;Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Start AD&lt; AD&lt;double&gt; &gt; Recording" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;&#xA0;Recording</a><br/>
ad<b>&lt;</b>base<b>&gt;</b>&#160;<a href="base_complex.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="azmul.xml#AD&lt;Base&gt;" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication:&#160;AD&lt;Base&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml#Possible Types.AD&lt;Base&gt;" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Possible&#xA0;Types.AD&lt;Base&gt;</a><br/>
ad<b>&lt;</b>double<b>&gt;</b>&#160;<a href="mul_level.xml#Procedure.Second Start AD&lt; AD&lt;double&gt; &gt;" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Second&#xA0;Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Start AD&lt; AD&lt;double&gt; &gt; Recording" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.First Start AD&lt;double&gt;" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.First&#xA0;Start&#xA0;AD&lt;double&gt;</a><br/>
ad<b>&lt;</b>otherbase<b>&gt;</b>&#160;<a href="base_example.xml" target="_top">Example&#xA0;AD&#xA0;Base&#xA0;Types&#xA0;That&#xA0;are&#xA0;not&#xA0;AD&lt;OtherBase&gt;</a><br/>
add&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;<a href="add.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
add<b>_</b>static&#160;<a href="memory_leak.xml#add_static" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;add_static</a><br/>
addition&#160;<a href="reversetheory.xml#Binary Operators.Addition" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Binary&#xA0;Operators.Addition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Binary Operators.Addition" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Binary&#xA0;Operators.Addition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Derivative.Addition" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Derivative.Addition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Derivative.Addition" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Derivative.Addition</a><br/>
addition<b>:</b>&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="add.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
additions&#160;<a href="whats_new_03.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD</a><br/>
addons&#160;<a href="addon.xml" target="_top">CppAD&#xA0;Addons</a><br/>
adfun&#160;<a href="fundeprecated.xml" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_fun.cpp.xml" target="_top">Creating&#xA0;Your&#xA0;Own&#xA0;Interface&#xA0;to&#xA0;an&#xA0;ADFun&#xA0;Object</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.cpp.xml" target="_top">ADFun&#xA0;Checking&#xA0;For&#xA0;Nan:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fun_check.cpp.xml" target="_top">ADFun&#xA0;Check&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="funeval.xml" target="_top">Evaluate&#xA0;ADFun&#xA0;Functions,&#xA0;Derivatives,&#xA0;and&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fun_assign.cpp.xml" target="_top">ADFun&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.cpp.xml" target="_top">Independent&#xA0;and&#xA0;ADFun&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adfun.xml" target="_top">ADFun&#xA0;Objects</a><br/>
adnumber&#160;<a href="cppad_ipopt_nlp.xml#ADNumber" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;ADNumber</a><br/>
adol<b>-</b>c&#160;<a href="adolc_prefix.xml" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
adolc&#160;<a href="wish_list.xml#Adolc" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Adolc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_jacobian.cpp.xml" target="_top">adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_hessian.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_ode.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_adolc.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
adolc<b>'</b>s&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
adolc<b>_</b>alloc<b>_</b>mat&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>
adolc<b>_</b>dir&#160;<a href="auto_tools.xml#adolc_dir" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;adolc_dir</a><br/>
adolc<b>_</b>prefix&#160;<a href="speed_adolc.xml#adolc_prefix" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc:&#160;adolc_prefix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml#adolc_prefix" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;adolc_prefix</a><br/>
adouble&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
advector&#160;<a href="luratio.xml#ADvector" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;ADvector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="benderquad.xml#ADvector" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;ADvector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#ADVector" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;ADVector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#fg_eval.ADvector" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;fg_eval.ADvector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml#ADvector" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;ADvector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml#ADVector" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function:&#160;ADVector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#ADVector" target="_top">Checkpointing&#xA0;Functions:&#160;ADVector</a><br/>
after&#160;<a href="printfor.xml#after" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;after</a><br/>
afun&#160;<a href="old_atomic.xml#afun" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;afun</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml#afun" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function:&#160;afun</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#atomic_user.afun" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_user.afun</a><br/>
algebra&#160;<a href="cppad_eigen.hpp.xml" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD</a><br/>
algo&#160;<a href="checkpoint.xml#algo" target="_top">Checkpointing&#xA0;Functions:&#160;algo</a><br/>
algorithm&#160;<a href="conj_grad.cpp.xml#Algorithm" target="_top">Differentiate&#xA0;Conjugate&#xA0;Gradient&#xA0;Algorithm:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Algorithm</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml#Algorithm" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Algorithm</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
algorithm<b>:</b>&#160;<a href="conj_grad.cpp.xml" target="_top">Differentiate&#xA0;Conjugate&#xA0;Gradient&#xA0;Algorithm:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
algorithmic&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Algorithmic Differentiation" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Algorithmic&#xA0;Differentiation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
algorithms&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
alignment&#160;<a href="ta_create_array.xml#Alignment" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Alignment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#Alignment" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Alignment</a><br/>
all&#160;<a href="listallexamples.xml" target="_top">List&#xA0;of&#xA0;All&#xA0;the&#xA0;CppAD&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_free_all.xml" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;<a href="cmake_check.xml#Check All" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Check&#xA0;All</a><br/>
alloc&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
allocate&#160;<a href="omp_create_array.xml" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
allocated&#160;<a href="ta_free_all.xml" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc</a><br/>
allocates&#160;<a href="base_alloc.hpp.xml" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory</a><br/>
allocation&#160;<a href="omp_alloc.cpp.xml" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_efficient.xml" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml#Allocation Speed" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Allocation&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Speed.Memory Allocation" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Speed.Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#Allocation Speed" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Allocation&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.xml" target="_top">A&#xA0;Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Multi-Threading Memory Allocation" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Multi-Threading&#xA0;Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation</a><br/>
allocation<b>:</b>&#160;<a href="capacity_order.cpp.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficient&#xA0;Memory&#xA0;Allocation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
allocator&#160;<a href="old_max_num_threads.xml" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.xml" target="_top">A&#xA0;Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator</a><br/>
allocator<b>:</b>&#160;<a href="omp_alloc.cpp.xml" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
also&#160;<a href="opt_val_hes.xml#See Also" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="benderquad.xml#See Also" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#See Also" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml#See Also" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="optimize_nest_conditional.cpp.xml#See Also" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Nested&#xA0;Conditional&#xA0;Expressions:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="optimize_conditional_skip.cpp.xml#See Also" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Conditional&#xA0;Expressions:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="optimize_compare_op.cpp.xml#See Also" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Comparison&#xA0;Operators:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_sub_hes.cpp.xml#See Also" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml#See Also" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparsity_sub.cpp.xml#See Also" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml#See Also" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="number_skip.xml#Syntax.See Also" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped:&#160;Syntax.See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml#Syntax.See Also" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;Syntax.See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml#Syntax.See Also" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored:&#160;Syntax.See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#Syntax.See Also" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;Syntax.See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#See Also" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#See Also" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#See Also" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml#See Also" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml#See Also" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#See Also" target="_top">Checkpointing&#xA0;Functions:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interp_retape.cpp.xml#See Also" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml#See Also" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cond_exp.cpp.xml#See Also" target="_top">Conditional&#xA0;Expressions:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="pow.xml#See Also" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml#See Also" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_to_string.xml#See Also" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="value.xml#See Also" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;See&#xA0;Also</a><br/>
alternative&#160;<a href="printfor.xml#Alternative" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;Alternative</a><br/>
alternatives&#160;<a href="vecad.xml#Alternatives" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;Alternatives</a><br/>
amount&#160;<a href="time_det_by_minor_c.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test</a><br/>
analysis&#160;<a href="optimize_reverse_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Reverse&#xA0;Activity&#xA0;Analysis</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_forward_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Forward&#xA0;Activity&#xA0;Analysis</a><br/>
analytic&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulation Analytic Solution" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulation&#xA0;Analytic&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulation Analytic Solution" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulation&#xA0;Analytic&#xA0;Solution</a><br/>
another&#160;<a href="omp_efficient.xml" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_to_string.xml" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type</a><br/>
answers&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
any&#160;<a href="reverse_any.xml" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;<a href="forward_order.xml" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
api&#160;<a href="deprecated.xml" target="_top">CppAD&#xA0;Deprecated&#xA0;API&#xA0;Features</a><br/>
&#160;&#160;&#160;&#160;<a href="preprocessor.xml" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols</a><br/>
&#160;&#160;&#160;&#160;<a href="base_require.xml#API Warning" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;API&#xA0;Warning</a><br/>
appendix&#160;<a href="appendix.xml" target="_top">Appendix</a><br/>
apply&#160;<a href="forwardtheory.xml#Standard Math Functions.Cases that Apply Recursion Above" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Cases&#xA0;that&#xA0;Apply&#xA0;Recursion&#xA0;Above</a><br/>
approximation&#160;<a href="ipopt_nlp_ode_fast.xml#Trapezoidal Approximation" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Trapezoidal Approximation Constraint" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation&#xA0;Constraint</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Trapezoidal Approximation" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Trapezoidal&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Trapezoidal Approximation" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Trapezoidal&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation</a><br/>
arbitrary&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
archives&#160;<a href="download.xml#Current Version.Compressed Archives" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Current&#xA0;Version.Compressed&#xA0;Archives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Compressed Archives" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Compressed&#xA0;Archives</a><br/>
are&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;<a href="base_example.xml" target="_top">Example&#xA0;AD&#xA0;Base&#xA0;Types&#xA0;That&#xA0;are&#xA0;not&#xA0;AD&lt;OtherBase&gt;</a><br/>
&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
argument&#160;<a href="ipopt_nlp_ode_simple.xml#Argument Vector" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Argument&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_err_maxabs.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;Using&#xA0;Maxabs&#xA0;Argument</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function</a><br/>
argument<b>:</b>&#160;<a href="log1p.xml" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p</a><br/>
arguments&#160;<a href="boolvalued.xml" target="_top">Bool&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions&#xA0;with&#xA0;AD&#xA0;Arguments</a><br/>
arguments<b>:</b>&#160;<a href="lu_solve.cpp.xml" target="_top">LuSolve&#xA0;With&#xA0;Complex&#xA0;Arguments:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
arithmetic&#160;<a href="zdouble.xml#Syntax.Arithmetic Operators" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="arithmetic.xml" target="_top">AD&#xA0;Arithmetic&#xA0;Operators&#xA0;and&#xA0;Computed&#xA0;Assignments</a><br/>
array&#160;<a href="omp_delete_array.xml#array" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml#array" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_array.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;Arrays:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml#array" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml#array" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="tape_index.cpp.xml" target="_top">Taping&#xA0;Array&#xA0;Index&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
arrays<b>:</b>&#160;<a href="eigen_array.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;Arrays:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
asin&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin.cpp.xml" target="_top">The&#xA0;AD&#xA0;asin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin.xml" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin</a><br/>
asinh&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;asinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh</a><br/>
asked&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
assert&#160;<a href="cppad_assert.xml" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
assertions&#160;<a href="cppad_assert.xml" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution</a><br/>
assign&#160;<a href="condexp.xml" target="_top">AD&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.cpp.xml" target="_top">AD&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.xml" target="_top">AD&#xA0;Assignment&#xA0;Operator</a><br/>
assignment&#160;<a href="zdouble.xml#Syntax.Constructor and Assignment" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Constructor&#xA0;and&#xA0;Assignment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Assignment and Independent" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Assignment&#xA0;and&#xA0;Independent</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Assignment" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Assignment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Element Access.Assignment" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Element&#xA0;Access.Assignment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Assignment" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Assignment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Assignment" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Assignment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fun_assign.cpp.xml" target="_top">ADFun&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Example.Assignment Operator" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Example.Assignment&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Assignment Operator" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Assignment&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Computed Assignment Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Computed&#xA0;Assignment&#xA0;Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Assignment Operators" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.xml" target="_top">AD&#xA0;Assignment&#xA0;Operator</a><br/>
assignment<b>:</b>&#160;<a href="fun_assign.cpp.xml" target="_top">ADFun&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.cpp.xml" target="_top">AD&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
assignments&#160;<a href="arithmetic.xml" target="_top">AD&#xA0;Arithmetic&#xA0;Operators&#xA0;and&#xA0;Computed&#xA0;Assignments</a><br/>
assumption&#160;<a href="ad_output.xml#Assumption" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Assumption</a><br/>
assumptions&#160;<a href="compare.xml#Assumptions" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#160;Assumptions</a><br/>
atan&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atan.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atan.xml" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan</a><br/>
atan2&#160;<a href="wish_list.xml#atan2" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;atan2</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Atan2" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Atan2</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan2&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function</a><br/>
atanh&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;atanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh</a><br/>
atom<b>_</b>fun&#160;<a href="checkpoint.xml#atom_fun" target="_top">Checkpointing&#xA0;Functions:&#160;atom_fun</a><br/>
atomic&#160;<a href="old_mat_mul.hpp.xml#CppAD User Atomic Callback Functions" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;CppAD&#xA0;User&#xA0;Atomic&#xA0;Callback&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.cpp.xml" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_tan.cpp.xml" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_reciprocal.cpp.xml" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="deprecated.xml#Atomic Functions" target="_top">CppAD&#xA0;Deprecated&#xA0;API&#xA0;Features:&#160;Atomic&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Operation.Atomic" target="_top">Glossary:&#160;Operation.Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Global Options.atomic" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Global&#xA0;Options.atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Atomic Functions" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Atomic&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Use Atomic Function" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml" target="_top">Atomic&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_option.xml" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml" target="_top">Atomic&#xA0;Function&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mul_level.cpp.xml" target="_top">Atomic&#xA0;Operations&#xA0;and&#xA0;Multiple-Levels&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic.xml" target="_top">Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sign.xml#Atomic" target="_top">The&#xA0;Sign:&#xA0;sign:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml#Atomic" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.xml#Atomic" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan.xml#Atomic" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt.xml#Atomic" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sinh.xml#Atomic" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin.xml#Atomic" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log.xml#Atomic" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp.xml#Atomic" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.xml#Atomic" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cos.xml#Atomic" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.xml#Atomic" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin.xml#Atomic" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin:&#160;Atomic</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos.xml#Atomic" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos:&#160;Atomic</a><br/>
atomic<b>_</b>base&#160;<a href="atomic_ctor.xml#atomic_base" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_base</a><br/>
atomic<b>_</b>sparsity&#160;<a href="atomic_option.xml#atomic_sparsity" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options:&#160;atomic_sparsity</a><br/>
atomic<b>_</b>user&#160;<a href="atomic_ctor.xml#atomic_user" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_user</a><br/>
auto&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
automatic&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
available&#160;<a href="memory_leak.xml#available" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;available</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc</a><br/>
avoid&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
ax&#160;<a href="old_atomic.xml#afun.ax" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;afun.ax</a><br/>
&#160;&#160;&#160;<a href="atomic_afun.xml#ax" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function:&#160;ax</a><br/>
&#160;&#160;&#160;<a href="checkpoint.xml#ax" target="_top">Checkpointing&#xA0;Functions:&#160;ax</a><br/>
&#160;&#160;&#160;<a href="discrete.xml#ax" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;ax</a><br/>
ay&#160;<a href="old_atomic.xml#afun.ay" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;afun.ay</a><br/>
&#160;&#160;&#160;<a href="atomic_afun.xml#ay" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function:&#160;ay</a><br/>
&#160;&#160;&#160;<a href="checkpoint.xml#ay" target="_top">Checkpointing&#xA0;Functions:&#160;ay</a><br/>
&#160;&#160;&#160;<a href="discrete.xml#ay" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;ay</a><br/>
azmul&#160;<a href="base_complex.hpp.xml#azmul" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;azmul</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#azmul" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;azmul</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#azmul" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;azmul</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#azmul" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;azmul</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#azmul" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;azmul</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Absolute Zero, azmul" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Absolute&#xA0;Zero,&#xA0;azmul</a><br/>

<b><big><a name="B">B</a></big></b>
<br/>
Base&#160;<a href="ad_assign.xml" target="_top">AD&#xA0;Assignment&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.xml" target="_top">AD&#xA0;Constructors</a><br/>
BenderQuad&#160;<a href="bender_quad.cpp.xml" target="_top">BenderQuad:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="benderquad.xml" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective</a><br/>
background&#160;<a href="mul_level.xml#Background" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Background</a><br/>
base&#160;<a href="zdouble.xml#Base Type Requirements" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Base&#xA0;Type&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#CPPAD_USER_ATOMIC.Base" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;CPPAD_USER_ATOMIC.Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Base Requirements" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Base&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Base Type" target="_top">Glossary:&#160;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Base Function" target="_top">Glossary:&#160;Base&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#AD Type Above Base" target="_top">Glossary:&#160;AD&#xA0;Type&#xA0;Above&#xA0;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#AD of Base" target="_top">Glossary:&#160;AD&#xA0;of&#xA0;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_example.xml" target="_top">Example&#xA0;AD&#xA0;Base&#xA0;Types&#xA0;That&#xA0;are&#xA0;not&#xA0;AD&lt;OtherBase&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_to_string.xml#Base Requirement" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type:&#160;Base&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_limits.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Numeric&#xA0;Limits</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_ordered.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Standard Base Types" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Standard&#xA0;Base&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="near_equal_ext.cpp.xml" target="_top">Compare&#xA0;AD&#xA0;with&#xA0;Base&#xA0;Objects:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#atomic_base.Base" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_base.Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Base" target="_top">Checkpointing&#xA0;Functions:&#160;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Base" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="azmul.xml#Base" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication:&#160;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="log10.xml" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml#Possible Types.Base" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Possible&#xA0;Types.Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Base" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Base" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml#Base" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#160;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_to_string.xml" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="value.xml" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad.xml#Base Type Requirements" target="_top">AD&#xA0;Objects:&#160;Base&#xA0;Type&#xA0;Requirements</a><br/>
base<b>_</b>adolc<b>.</b>hpp&#160;<a href="mul_level_adolc_ode.cpp.xml#base_adolc.hpp" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;base_adolc.hpp</a><br/>
basevector&#160;<a href="opt_val_hes.xml#BaseVector" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;BaseVector</a><br/>
bavector&#160;<a href="benderquad.xml#BAvector" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;BAvector</a><br/>
be&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="number_skip.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped</a><br/>
before&#160;<a href="printfor.xml#before" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;before</a><br/>
begin&#160;<a href="old_mat_mul.hpp.xml#Begin Source" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Begin&#xA0;Source</a><br/>
bender<b>'</b>s&#160;<a href="benderquad.xml" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective</a><br/>
benderquad&#160;<a href="wish_list.xml#BenderQuad" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;BenderQuad</a><br/>
benderquad<b>:</b>&#160;<a href="bender_quad.cpp.xml" target="_top">BenderQuad:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
between&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
bibliography&#160;<a href="bib.xml" target="_top">Bibliography</a><br/>
binary&#160;<a href="reversetheory.xml#Binary Operators" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Binary&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Binary Operators" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Binary&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Binary Operator Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Binary&#xA0;Operator&#xA0;Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Binary Operators" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Binary&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Create Binary" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Create&#xA0;Binary</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="binary_math.xml" target="_top">The&#xA0;Binary&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="div.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="add.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
binary<b>_</b>name&#160;<a href="boolfun.xml#binary_name" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;binary_name</a><br/>
bit<b>_</b>per<b>_</b>unit&#160;<a href="cppad_vector.xml#vectorBool.bit_per_unit" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;vectorBool.bit_per_unit</a><br/>
black&#160;<a href="ipopt_nlp_ode_problem.xml#Black Box Method" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Black&#xA0;Box&#xA0;Method</a><br/>
bool&#160;<a href="vector_bool.cpp.xml" target="_top">CppAD::vectorBool&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Bool Operators" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Bool&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="bool_fun.cpp.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="boolvalued.xml" target="_top">Bool&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions&#xA0;with&#xA0;AD&#xA0;Arguments</a><br/>
bool<b>_</b>sparsity<b>_</b>enum&#160;<a href="atomic_norm_sq.cpp.xml" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_option.xml#atomic_sparsity.bool_sparsity_enum" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options:&#160;atomic_sparsity.bool_sparsity_enum</a><br/>
boolean&#160;<a href="glossary.xml#Sparsity Pattern.Vector of Boolean" target="_top">Glossary:&#160;Sparsity&#xA0;Pattern.Vector&#xA0;of&#xA0;Boolean</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Boolean Operator Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Boolean&#xA0;Operator&#xA0;Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bool_fun.cpp.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions</a><br/>
boolsparsity&#160;<a href="speed_main.xml#Sparsity Options.boolsparsity" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Sparsity&#xA0;Options.boolsparsity</a><br/>
boost&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_bthread.cpp.xml" target="_top">Boost&#xA0;Thread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml#boost" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;boost</a><br/>
boost<b>::</b>numeric<b>::</b>ublas<b>::</b>vector&#160;<a href="test_vector.xml#boost::numeric::ublas::vector" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;boost::numeric::ublas::vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml#boost::numeric::ublas::vector" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;boost::numeric::ublas::vector</a><br/>
boost<b>_</b>dir&#160;<a href="auto_tools.xml#boost_dir" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;boost_dir</a><br/>
both&#160;<a href="ipopt_ode_speed.cpp.xml" target="_top">Speed&#xA0;Test&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_check.cpp.xml" target="_top">Correctness&#xA0;Check&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
box&#160;<a href="ipopt_nlp_ode_problem.xml#Black Box Method" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Black&#xA0;Box&#xA0;Method</a><br/>
bthread&#160;<a href="team_bthread.cpp.xml" target="_top">Boost&#xA0;Thread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
bug&#160;<a href="team_pthread.cpp.xml#Bug in Cygwin" target="_top">Pthread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Bug&#xA0;in&#xA0;Cygwin</a><br/>
bugs&#160;<a href="faq.xml#Bugs" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Bugs</a><br/>
build&#160;<a href="get_sacado.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#CMake Command.Build Directory" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;CMake&#xA0;Command.Build&#xA0;Directory</a><br/>
building&#160;<a href="download.xml#No Documentation.Building Documentation" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;No&#xA0;Documentation.Building&#xA0;Documentation</a><br/>
bvector&#160;<a href="ipopt_solve.xml#Bvector" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Bvector</a><br/>

<b><big><a name="C">C</a></big></b>
<br/>
C&#160;<a href="interface2c.cpp.xml" target="_top">Interfacing&#xA0;to&#xA0;C:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;compare<b>&#xA0;</b>speed<b>&#xA0;</b>with<b>&#xA0;</b>C<b>++</b>&#160;<a href="compare_c.xml" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++</a><br/>
C<b>++</b>&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
&#160;&#160;&#160;&#160;&#160;compare<b>&#xA0;</b>speed<b>&#xA0;</b>with<b>&#xA0;</b>C&#160;<a href="compare_c.xml" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++</a><br/>
CheckNumericType&#160;<a href="checknumerictype.xml" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept</a><br/>
CheckSimpleVector&#160;<a href="checksimplevector.xml" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept</a><br/>
CompareChange&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
CondExp&#160;<a href="base_cond_exp.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions</a><br/>
CPPAD<b>_</b>&#160;<a href="preprocessor.xml" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols</a><br/>
CPPAD<b>_</b>ASSERT<b>_</b>KNOWN&#160;<a href="cppad_assert.xml" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution</a><br/>
CPPAD<b>_</b>ASSERT<b>_</b>UNKNOWN&#160;<a href="cppad_assert.xml" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution</a><br/>
CPPAD<b>_</b>BOOL<b>_</b>BINARY&#160;<a href="boolfun.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions</a><br/>
CPPAD<b>_</b>BOOL<b>_</b>UNARY&#160;<a href="boolfun.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions</a><br/>
CPPAD<b>_</b>COND<b>_</b>EXP<b>_</b>REL&#160;<a href="base_cond_exp.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions</a><br/>
CPPAD<b>_</b>DISCRETE<b>_</b>FUNCTION&#160;<a href="discrete.xml" target="_top">Discrete&#xA0;AD&#xA0;Functions</a><br/>
CPPAD<b>_</b>TEST<b>_</b>VECTOR&#160;<a href="test_vector.xml" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class</a><br/>
CPPAD<b>_</b>TESTVECTOR&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
CPPAD<b>_</b>TRACK<b>_</b>COUNT&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
CPPAD<b>_</b>TRACK<b>_</b>DEL<b>_</b>VEC&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
CPPAD<b>_</b>TRACK<b>_</b>EXTEND&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
CPPAD<b>_</b>TRACK<b>_</b>NEW<b>_</b>VEC&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
CppAD&#160;<a href="vector_bool.cpp.xml" target="_top">CppAD::vectorBool&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.cpp.xml" target="_top">CppAD::vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
CppADTrackDelVec&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
CppADTrackExtend&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
CppADTrackNewVec&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
c&#160;<a href="main_compare_c.xml" target="_top">Main&#xA0;Program&#xA0;For&#xA0;Comparing&#xA0;C&#xA0;and&#xA0;C++&#xA0;Speed</a><br/>
&#160;&#160;<a href="det_of_minor_c.xml#c" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;c</a><br/>
&#160;&#160;<a href="compare_c.xml" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++</a><br/>
&#160;&#160;<a href="comparechange.xml#c" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;c</a><br/>
&#160;&#160;<a href="det_of_minor.xml#c" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;c</a><br/>
&#160;&#160;<a href="capacity_order.xml#c" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;c</a><br/>
c<b>++</b>&#160;<a href="main_compare_c.xml" target="_top">Main&#xA0;Program&#xA0;For&#xA0;Comparing&#xA0;C&#xA0;and&#xA0;C++&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;<a href="compare_c.xml" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;<a href="bib.xml#The C++ Programming Language" target="_top">Bibliography:&#160;The&#xA0;C++&#xA0;Programming&#xA0;Language</a><br/>
&#160;&#160;&#160;&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;<a href="utility.xml#C++ Concepts" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;C++&#xA0;Concepts</a><br/>
&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
c<b>++</b>11&#160;<a href="cmake.xml#cppad_cxx_flags.C++11" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_cxx_flags.C++11</a><br/>
c<b>:</b>&#160;<a href="interface2c.cpp.xml" target="_top">Interfacing&#xA0;to&#xA0;C:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
calculating&#160;<a href="sparse.xml" target="_top">Calculating&#xA0;Sparsity&#xA0;Patterns</a><br/>
calculation&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
calculations&#160;<a href="theory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Derivative&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations</a><br/>
call&#160;<a href="old_mat_mul.hpp.xml#Extra Call Information" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Extra&#xA0;Call&#xA0;Information</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#Call" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;Call</a><br/>
callback&#160;<a href="old_mat_mul.hpp.xml#CppAD User Atomic Callback Functions" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;CppAD&#xA0;User&#xA0;Atomic&#xA0;Callback&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Syntax Function.Callback Routines" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function.Callback&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml" target="_top">Atomic&#xA0;Forward&#xA0;Mode</a><br/>
can&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="number_skip.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped</a><br/>
cap<b>_</b>bytes&#160;<a href="omp_get_memory.xml#cap_bytes" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;cap_bytes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#cap_bytes" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;cap_bytes</a><br/>
capacity&#160;<a href="cppad_vector.xml#capacity" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;capacity</a><br/>
capacity<b>_</b>order&#160;<a href="capacity_order.cpp.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficient&#xA0;Memory&#xA0;Allocation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml#capacity_order" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored:&#160;capacity_order</a><br/>
capacity<b>_</b>taylor&#160;<a href="fundeprecated.xml#capacity_taylor" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;capacity_taylor</a><br/>
case&#160;<a href="old_usead_1.cpp.xml#Simple Case" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives:&#160;Simple&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml#Special Case" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Special&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml#Special Case" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Special&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml#Special Case" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values:&#160;Special&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml#EqualOpSeq.The Simple Case" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;EqualOpSeq.The&#xA0;Simple&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode.Case k &gt; 0" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode.Case&#xA0;k&#xA0;&gt;&#xA0;0</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode.Case k = 0" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode.Case&#xA0;k&#xA0;=&#xA0;0</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#General Case" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;General&#xA0;Case</a><br/>
cases&#160;<a href="forwardtheory.xml#Standard Math Functions.Special Cases" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Special&#xA0;Cases</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Cases that Apply Recursion Above" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Cases&#xA0;that&#xA0;Apply&#xA0;Recursion&#xA0;Above</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml#EqualOpSeq.More Complicated Cases" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;EqualOpSeq.More&#xA0;Complicated&#xA0;Cases</a><br/>
central&#160;<a href="interface2c.cpp.xml" target="_top">Interfacing&#xA0;to&#xA0;C:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
certain&#160;<a href="to_string.xml" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String</a><br/>
change&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.cpp.xml" target="_top">CompareChange&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
changes&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_03.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
check&#160;<a href="ipopt_nlp_ode_check.cpp.xml" target="_top">Correctness&#xA0;Check&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="memory_leak.xml" target="_top">Memory&#xA0;Leak&#xA0;Detection</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_efficient.xml" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Assignment.Check Size" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Assignment.Check&#xA0;Size</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_simple_vector.cpp.xml" target="_top">The&#xA0;CheckSimpleVector&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_numeric_type.cpp.xml" target="_top">The&#xA0;CheckNumericType&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fun_check.cpp.xml" target="_top">ADFun&#xA0;Check&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake_check.xml#Check All" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Check&#xA0;All</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#make check" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;make&#xA0;check</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions.Step 3: Check" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;3:&#xA0;Check</a><br/>
check<b>_</b>finite&#160;<a href="wish_list.xml#check_finite" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;check_finite</a><br/>
checking&#160;<a href="check_for_nan.cpp.xml" target="_top">ADFun&#xA0;Checking&#xA0;For&#xA0;Nan:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Checking Optimization" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Checking&#xA0;Optimization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake_check.xml" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
checknumerictype&#160;<a href="check_numeric_type.cpp.xml" target="_top">The&#xA0;CheckNumericType&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
checkpoint&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#checkpoint" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;checkpoint</a><br/>
checkpointing&#160;<a href="checkpoint_extended_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml" target="_top">Checkpointing&#xA0;Functions</a><br/>
checkpointing<b>:</b>&#160;<a href="checkpoint.cpp.xml" target="_top">Simple&#xA0;Checkpointing:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
checksimplevector&#160;<a href="check_simple_vector.cpp.xml" target="_top">The&#xA0;CheckSimpleVector&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml#CheckSimpleVector" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode:&#160;CheckSimpleVector</a><br/>
cholesky&#160;<a href="atomic_eigen_cholesky.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Notation.Cholesky Factor" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Notation.Cholesky&#xA0;Factor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
choosing&#160;<a href="test_vector.xml" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
class&#160;<a href="test_vector.xml" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.xml#The CppAD Test Vector Template Class" target="_top">Examples:&#160;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Template Class Requirements" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Template&#xA0;Class&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Simple Vector Template Class" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Simple&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Class Definition" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#End Class Definition" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Start Class Definition" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Class Definition" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml#Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml#Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#End Class Definition" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Start Class Definition" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#End Class Definition" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#End Class Definition" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Start Class Definition" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#End Class Definition" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#End Class Definition" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Start Class Definition" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
class<b>:</b>&#160;<a href="vector_bool.cpp.xml" target="_top">CppAD::vectorBool&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.cpp.xml" target="_top">CppAD::vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_vector.cpp.xml" target="_top">Simple&#xA0;Vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
clear&#160;<a href="old_atomic.xml#clear" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;clear</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#clear" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;clear</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml" target="_top">Free&#xA0;Static&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#clear" target="_top">Checkpointing&#xA0;Functions:&#160;clear</a><br/>
cmake&#160;<a href="cmake.xml#CMake Command" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;CMake&#xA0;Command</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#The CMake Program" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;The&#xA0;CMake&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions.Step 2: Cmake" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;2:&#xA0;Cmake</a><br/>
cmake<b>_</b>install<b>_</b>datadir&#160;<a href="cmake.xml#cmake_install_datadir" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cmake_install_datadir</a><br/>
cmake<b>_</b>install<b>_</b>docdir&#160;<a href="cmake.xml#cmake_install_docdir" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cmake_install_docdir</a><br/>
cmake<b>_</b>install<b>_</b>includedirs&#160;<a href="cmake.xml#cmake_install_includedirs" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cmake_install_includedirs</a><br/>
cmake<b>_</b>install<b>_</b>libdirs&#160;<a href="cmake.xml#cmake_install_libdirs" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cmake_install_libdirs</a><br/>
cmake<b>_</b>verbose<b>_</b>makefile&#160;<a href="cmake.xml#cmake_verbose_makefile" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cmake_verbose_makefile</a><br/>
code&#160;<a href="main_compare_c.xml#Source Code" target="_top">Main&#xA0;Program&#xA0;For&#xA0;Comparing&#xA0;C&#xA0;and&#xA0;C++&#xA0;Speed:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="time_det_by_minor_c.xml#Source Code" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds_c.xml#Source Code" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="repeat_det_by_minor_c.xml#Source Code" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="correct_det_by_minor_c.xml#Source Code" target="_top">Correctness&#xA0;Test&#xA0;of&#xA0;det_by_minor&#xA0;Routine:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="uniform_01_c.xml#Source Code" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor_c.xml#Source Code" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor_c.xml#Source Code" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.hpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml#Source Code" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#Source Code" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#Source Code" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Source Code" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml#Source Code" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml#Source Code" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml#Source Code" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml#Source Code" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml#Source Code" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#Source Code" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Source Code" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="eigen_plugin.hpp.xml" target="_top">Source&#xA0;Code&#xA0;for&#xA0;eigen_plugin.hpp</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Source Code" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Source Code" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Source Code" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Source Code" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Source Code" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml#Source Code" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml#Source Code" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="team_example.cpp.xml#Source Code" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml#code" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values:&#160;code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml#Source Code" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence.Code" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Operation Sequence.Code" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Code</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="download.xml" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code</a><br/>
coding&#160;<a href="base_hash.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values</a><br/>
coefficient&#160;<a href="glossary.xml#Taylor Coefficient" target="_top">Glossary:&#160;Taylor&#xA0;Coefficient</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.cpp.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficient&#xA0;Memory&#xA0;Allocation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Notation.Taylor Coefficient" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Notation.Taylor&#xA0;Coefficient</a><br/>
coefficients&#160;<a href="erf_forward.xml#Taylor Coefficients Recursion" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml#Taylor Coefficients Recursion" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml#Taylor Coefficients Recursion" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml#Taylor Coefficients Recursion" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Taylor Coefficients Recursion Formula" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Taylor&#xA0;Coefficients&#xA0;Recursion&#xA0;Formula</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_three.cpp.xml#Taylor Coefficients" target="_top">Third&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor&#xA0;Coefficients</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Assignment Operator.Taylor Coefficients" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Assignment&#xA0;Operator.Taylor&#xA0;Coefficients</a><br/>
coin&#160;<a href="download.xml#Release Versions.Coin" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Release&#xA0;Versions.Coin</a><br/>
col&#160;<a href="sparse_hes_fun.xml#col" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;col</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#col" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;col</a><br/>
&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml#col" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;col</a><br/>
&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#col" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;col</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#row, col" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;row,&#xA0;col</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#row, col" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;row,&#xA0;col</a><br/>
color<b>_</b>method&#160;<a href="sparse_hessian.xml#work.color_method" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;work.color_method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#work.color_method" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;work.color_method</a><br/>
colpack&#160;<a href="speed_main.xml#Sparsity Options.colpack" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Sparsity&#xA0;Options.colpack</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_hes.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_jac.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations</a><br/>
colpack<b>:</b>&#160;<a href="colpack_hes.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_jac.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
colpack<b>_</b>prefix&#160;<a href="colpack_prefix.xml#colpack_prefix" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations:&#160;colpack_prefix</a><br/>
column&#160;<a href="sparse_hessian.xml#p.Column Subset" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;p.Column&#xA0;Subset</a><br/>
combine&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
command&#160;<a href="cmake.xml#CMake Command" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;CMake&#xA0;Command</a><br/>
commands&#160;<a href="include_deprecated.xml#Linking New Files to Deprecated Commands" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Linking&#xA0;New&#xA0;Files&#xA0;to&#xA0;Deprecated&#xA0;Commands</a><br/>
compare&#160;<a href="compare_c.xml" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.cpp.xml" target="_top">CompareChange&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="near_equal_ext.cpp.xml" target="_top">Compare&#xA0;AD&#xA0;with&#xA0;Base&#xA0;Objects:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;speed<b>&#xA0;</b>C<b>&#xA0;</b>and<b>&#xA0;</b>C<b>++</b>&#160;<a href="compare_c.xml" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++</a><br/>
compare<b>_</b>change&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
comparechange&#160;<a href="faq.xml#CompareChange" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;CompareChange</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.cpp.xml" target="_top">CompareChange&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
compareop&#160;<a href="base_cond_exp.xml#CompareOp" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions:&#160;CompareOp</a><br/>
comparing&#160;<a href="main_compare_c.xml" target="_top">Main&#xA0;Program&#xA0;For&#xA0;Comparing&#xA0;C&#xA0;and&#xA0;C++&#xA0;Speed</a><br/>
comparison&#160;<a href="zdouble.xml#Syntax.Comparison Operators" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_compare_op.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
comparisons&#160;<a href="base_ordered.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Comparisons" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Comparisons</a><br/>
compilation&#160;<a href="wish_list.xml#Compilation Speed" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Compilation&#xA0;Speed</a><br/>
compile&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
complex&#160;<a href="faq.xml#Complex Types" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Complex&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_solve.cpp.xml" target="_top">LuSolve&#xA0;With&#xA0;Complex&#xA0;Arguments:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="complex_poly.cpp.xml" target="_top">Complex&#xA0;Polynomial:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml#Complex Types" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs:&#160;Complex&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#x.Complex Types" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;x.Complex&#xA0;Types</a><br/>
complicated&#160;<a href="base_identical.xml#EqualOpSeq.More Complicated Cases" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;EqualOpSeq.More&#xA0;Complicated&#xA0;Cases</a><br/>
compressed&#160;<a href="download.xml#Current Version.Compressed Archives" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Current&#xA0;Version.Compressed&#xA0;Archives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Compressed Archives" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Compressed&#xA0;Archives</a><br/>
compute&#160;<a href="det_by_minor_c.xml" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_det.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;To&#xA0;Compute&#xA0;Determinant:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
computed&#160;<a href="base_alloc.hpp.xml#Computed Assignment Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Computed&#xA0;Assignment&#xA0;Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="arithmetic.xml" target="_top">AD&#xA0;Arithmetic&#xA0;Operators&#xA0;and&#xA0;Computed&#xA0;Assignments</a><br/>
computing&#160;<a href="benderquad.xml" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependency.cpp.xml" target="_top">Computing&#xA0;Dependency:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
concept&#160;<a href="checksimplevector.xml" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept</a><br/>
concepts&#160;<a href="utility.xml#C++ Concepts" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;C++&#xA0;Concepts</a><br/>
cond<b>_</b>exp<b>_</b>1&#160;<a href="whats_new_15.xml#05-26.cond_exp_1" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-26.cond_exp_1</a><br/>
cond<b>_</b>exp<b>_</b>2&#160;<a href="whats_new_15.xml#05-26.cond_exp_2" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;05-26.cond_exp_2</a><br/>
condexpop&#160;<a href="base_complex.hpp.xml#CondExpOp" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;CondExpOp</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#CondExpOp" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;CondExpOp</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#CondExpOp" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;CondExpOp</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#CondExpOp" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;CondExpOp</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#CondExpOp" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;CondExpOp</a><br/>
condexprel&#160;<a href="base_complex.hpp.xml#CondExpRel" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;CondExpRel</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#CondExpRel" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;CondExpRel</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#CondExpRel" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;CondExpRel</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#CondExpRel" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;CondExpRel</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#CondExpRel" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;CondExpRel</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml#CondExpRel" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions:&#160;CondExpRel</a><br/>
condexptemplate&#160;<a href="base_cond_exp.xml#CondExpTemplate" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions:&#160;CondExpTemplate</a><br/>
condition&#160;<a href="ipopt_nlp_ode_fast.xml#Initial Condition" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Initial&#xA0;Condition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Initial Condition Constraint" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Initial&#xA0;Condition&#xA0;Constraint</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
conditional&#160;<a href="optimize_nest_conditional.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Nested&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_conditional_skip.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cond_exp.cpp.xml" target="_top">Conditional&#xA0;Expressions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml" target="_top">AD&#xA0;Conditional&#xA0;Expressions</a><br/>
configuration&#160;<a href="ipopt_nlp_get_started.cpp.xml#Configuration Requirement" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Configuration&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Configuration Requirement" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Configuration&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml#Configuration Requirement" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Configuration&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml#Configuration Requirement" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Configuration&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pkgconfig.xml#CppAD Configuration Files" target="_top">CppAD&#xA0;pkg-config&#xA0;Files:&#160;CppAD&#xA0;Configuration&#xA0;Files</a><br/>
configure&#160;<a href="auto_tools.xml#Configure" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Configure</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
conjugate&#160;<a href="conj_grad.cpp.xml" target="_top">Differentiate&#xA0;Conjugate&#xA0;Gradient&#xA0;Algorithm:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
conserve&#160;<a href="bool_sparsity.cpp.xml" target="_top">Using&#xA0;vectorBool&#xA0;Sparsity&#xA0;To&#xA0;Conserve&#xA0;Memory:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
constants&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
constraint&#160;<a href="ipopt_nlp_ode_simple.xml#Trapezoidal Approximation Constraint" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation&#xA0;Constraint</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Initial Condition Constraint" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Initial&#xA0;Condition&#xA0;Constraint</a><br/>
construct&#160;<a href="funconstruct.xml" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording</a><br/>
constructor&#160;<a href="zdouble.xml#Syntax.Constructor and Assignment" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Constructor&#xA0;and&#xA0;Assignment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml#Constructor" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#Constructor" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Element Constructor and Destructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Element&#xA0;Constructor&#xA0;and&#xA0;Destructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Copy Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Copy&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Sizing Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Sizing&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Default Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Copy Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Copy&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Constructor From Integer" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Constructor&#xA0;From&#xA0;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Default Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#Constructor" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml#Constructor" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Example.Default Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Example.Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Example.Sequence Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Example.Sequence&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Copy Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Copy&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Sequence Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Sequence&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Default Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Copy Constructor" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Copy&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Double Constructor" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Double&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Default Constructor" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#Constructor" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Constructor" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function.Constructor" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Public.Constructor" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Public.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml#Use Atomic Function.Constructor" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Public.Constructor" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Public.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml#Use Atomic Function.Constructor" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Public.Constructor" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Public.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml#Use Atomic Function.Constructor" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.Constructor" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Constructor" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function.Constructor" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Constructor" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function.Constructor" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Constructor" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function.Constructor" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Constructor" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Use Atomic Function.Constructor" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Constructor" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Constructor" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Constructor" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Constructor" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Constructor" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#Constructor" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#Constructor" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#Example.Use Constructor" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;Example.Use&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#Example.Define Constructor" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;Example.Define&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml" target="_top">Atomic&#xA0;Function&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#constructor" target="_top">Checkpointing&#xA0;Functions:&#160;constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.cpp.xml" target="_top">AD&#xA0;Constructors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
constructor<b>:</b>&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.cpp.xml" target="_top">Independent&#xA0;and&#xA0;ADFun&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
constructors&#160;<a href="ad_ctor.xml" target="_top">AD&#xA0;Constructors</a><br/>
constructors<b>:</b>&#160;<a href="ad_ctor.cpp.xml" target="_top">AD&#xA0;Constructors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
control&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation</a><br/>
controller&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers</a><br/>
controlling&#160;<a href="capacity_order.cpp.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficient&#xA0;Memory&#xA0;Allocation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation</a><br/>
convention&#160;<a href="lu_vec_ad.cpp.xml#Storage Convention" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;Storage&#xA0;Convention</a><br/>
conversion&#160;<a href="convert.xml" target="_top">Conversion&#xA0;and&#xA0;I/O&#xA0;of&#xA0;AD&#xA0;Objects</a><br/>
convert&#160;<a href="to_string.xml" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_to_string.xml" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.xml" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="convert.xml" target="_top">Conversion&#xA0;and&#xA0;I/O&#xA0;of&#xA0;AD&#xA0;Objects</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.xml" target="_top">AD&#xA0;Constructors</a><br/>
copy&#160;<a href="simplevector.xml#Copy Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Copy&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Copy Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Copy&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Copy Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Copy&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Copy Constructor" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Copy&#xA0;Constructor</a><br/>
correct&#160;<a href="det_grad_33.xml" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#test.correct" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;test.correct</a><br/>
correctness&#160;<a href="correct_det_by_minor_c.xml" target="_top">Correctness&#xA0;Test&#xA0;of&#xA0;det_by_minor&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_check.cpp.xml" target="_top">Correctness&#xA0;Check&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Correctness Results" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Correctness&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction</a><br/>
cos&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="cos.cpp.xml" target="_top">The&#xA0;AD&#xA0;cos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="cos.xml" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos</a><br/>
cosh&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;cosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cosh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh</a><br/>
cosine&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cos.xml" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos</a><br/>
count&#160;<a href="compare_change.xml#count" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;count</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Operation Count" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Operation&#xA0;Count</a><br/>
cppad&#160;<a href="license.xml" target="_top">Your&#xA0;License&#xA0;for&#xA0;the&#xA0;CppAD&#xA0;Software</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="addon.xml" target="_top">CppAD&#xA0;Addons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml#Motivation.CppAD" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Motivation.CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml#CppAD User Atomic Callback Functions" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;CppAD&#xA0;User&#xA0;Atomic&#xA0;Callback&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="deprecated.xml" target="_top">CppAD&#xA0;Deprecated&#xA0;API&#xA0;Features</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_03.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_jacobian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_hessian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed,&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_cppad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.cpp.xml" target="_top">CppAD&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml#CppAD Namespace" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;CppAD&#xA0;Namespace</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="listallexamples.xml" target="_top">List&#xA0;of&#xA0;All&#xA0;the&#xA0;CppAD&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exampleutility.xml" target="_top">Utility&#xA0;Routines&#xA0;used&#xA0;by&#xA0;CppAD&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.xml#The CppAD Test Vector Template Class" target="_top">Examples:&#160;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_handler.cpp.xml" target="_top">Replacing&#xA0;The&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="preprocessor.xml" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_cppad.xml" target="_top">exp_eps:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_cppad.xml" target="_top">exp_2:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#Profiling CppAD" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Profiling&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="pkgconfig.xml#CppAD Configuration Files" target="_top">CppAD&#xA0;pkg-config&#xA0;Files:&#160;CppAD&#xA0;Configuration&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="pkgconfig.xml" target="_top">CppAD&#xA0;pkg-config&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake_check.xml" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml#cppad" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;cppad</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions</a><br/>
cppad<b>-</b>20170000<b>.</b>4<b>:</b>&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
cppad<b>.</b>hpp&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
cppad<b>::</b>numeric<b>_</b>limits&#160;<a href="base_limits.xml#CppAD::numeric_limits" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Numeric&#xA0;Limits:&#160;CppAD::numeric_limits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml#CppAD::numeric_limits" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;CppAD::numeric_limits</a><br/>
cppad<b>::</b>vector&#160;<a href="test_vector.xml#CppAD::vector" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;CppAD::vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml#CppAD::vector" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;CppAD::vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.cpp.xml" target="_top">CppAD::vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
cppad<b>::</b>vectorbool&#160;<a href="vector_bool.cpp.xml" target="_top">CppAD::vectorBool&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
cppad<b>_</b>cxx<b>_</b>flags&#160;<a href="cmake.xml#cppad_cxx_flags" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_cxx_flags</a><br/>
cppad<b>_</b>deprecated&#160;<a href="cmake.xml#cppad_deprecated" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_deprecated</a><br/>
cppad<b>_</b>ipopt&#160;<a href="cppad_ipopt_nlp.xml#cppad_ipopt namespace" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;cppad_ipopt&#xA0;namespace</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
cppad<b>_</b>ipopt<b>_</b>nlp&#160;<a href="ipopt_nlp_ode_fast.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
cppad<b>_</b>lib&#160;<a href="colpack_prefix.xml#cppad_lib" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations:&#160;cppad_lib</a><br/>
cppad<b>_</b>max<b>_</b>num<b>_</b>threads&#160;<a href="multi_thread.xml#CPPAD_MAX_NUM_THREADS" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;CPPAD_MAX_NUM_THREADS</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#cppad_max_num_threads" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_max_num_threads</a><br/>
cppad<b>_</b>null&#160;<a href="preprocessor.xml#Documented Here.CPPAD_NULL" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Documented&#xA0;Here.CPPAD_NULL</a><br/>
cppad<b>_</b>numeric<b>_</b>limits&#160;<a href="base_limits.xml#CPPAD_NUMERIC_LIMITS" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Numeric&#xA0;Limits:&#160;CPPAD_NUMERIC_LIMITS</a><br/>
cppad<b>_</b>package<b>_</b>string&#160;<a href="preprocessor.xml#Documented Here.CPPAD_PACKAGE_STRING" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Documented&#xA0;Here.CPPAD_PACKAGE_STRING</a><br/>
cppad<b>_</b>postfix&#160;<a href="cmake.xml#cppad_postfix" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_postfix</a><br/>
cppad<b>_</b>prefix&#160;<a href="cmake.xml#cppad_prefix" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_prefix</a><br/>
cppad<b>_</b>profile<b>_</b>flag&#160;<a href="cmake.xml#cppad_profile_flag" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_profile_flag</a><br/>
cppad<b>_</b>standard<b>_</b>math<b>_</b>unary&#160;<a href="base_std_math.xml#CPPAD_STANDARD_MATH_UNARY" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;CPPAD_STANDARD_MATH_UNARY</a><br/>
cppad<b>_</b>tape<b>_</b>addr<b>_</b>type&#160;<a href="cmake.xml#cppad_tape_addr_type" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_tape_addr_type</a><br/>
cppad<b>_</b>tape<b>_</b>id<b>_</b>type&#160;<a href="cmake.xml#cppad_tape_id_type" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_tape_id_type</a><br/>
cppad<b>_</b>testvector&#160;<a href="cmake.xml#cppad_testvector" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_testvector</a><br/>
cppad<b>_</b>to<b>_</b>string&#160;<a href="base_to_string.xml#CPPAD_TO_STRING" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type:&#160;CPPAD_TO_STRING</a><br/>
cppad<b>_</b>use<b>_</b>cplusplus<b>_</b>2011&#160;<a href="preprocessor.xml#Documented Here.CPPAD_USE_CPLUSPLUS_2011" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Documented&#xA0;Here.CPPAD_USE_CPLUSPLUS_2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.xml#CPPAD_USE_CPLUSPLUS_2011" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p:&#160;CPPAD_USE_CPLUSPLUS_2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml#CPPAD_USE_CPLUSPLUS_2011" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1:&#160;CPPAD_USE_CPLUSPLUS_2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.xml#CPPAD_USE_CPLUSPLUS_2011" target="_top">The&#xA0;Error&#xA0;Function:&#160;CPPAD_USE_CPLUSPLUS_2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml#CPPAD_USE_CPLUSPLUS_2011" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh:&#160;CPPAD_USE_CPLUSPLUS_2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml#CPPAD_USE_CPLUSPLUS_2011" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh:&#160;CPPAD_USE_CPLUSPLUS_2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml#CPPAD_USE_CPLUSPLUS_2011" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh:&#160;CPPAD_USE_CPLUSPLUS_2011</a><br/>
cppad<b>_</b>user<b>_</b>atomic&#160;<a href="old_atomic.xml#CPPAD_USER_ATOMIC" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;CPPAD_USER_ATOMIC</a><br/>
cppadcreatediscrete&#160;<a href="discrete.xml#CppADCreateDiscrete Deprecated 2007-07-28" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;CppADCreateDiscrete&#xA0;Deprecated&#xA0;2007-07-28</a><br/>
cppadvector&#160;<a href="test_vector.xml#CppADvector Deprecated 2007-07-28" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;CppADvector&#xA0;Deprecated&#xA0;2007-07-28</a><br/>
create&#160;<a href="omp_create_array.xml" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Create Binary" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Create&#xA0;Binary</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Create Unary" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Create&#xA0;Unary</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Create AD Version" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Create&#xA0;AD&#xA0;Version</a><br/>
create<b>_</b>array&#160;<a href="omp_create_array.xml" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
creating&#160;<a href="ad_fun.cpp.xml" target="_top">Creating&#xA0;Your&#xA0;Own&#xA0;Interface&#xA0;to&#xA0;an&#xA0;ADFun&#xA0;Object</a><br/>
criteria&#160;<a href="odegearcontrol.xml#Error Criteria Discussion" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Error&#xA0;Criteria&#xA0;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Error Criteria Discussion" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Error&#xA0;Criteria&#xA0;Discussion</a><br/>
cstdint&#160;<a href="cmake.xml#cppad_tape_addr_type.cstdint" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_tape_addr_type.cstdint</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#cppad_tape_id_type.cstdint" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_tape_id_type.cstdint</a><br/>
ctor&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
ctor<b>_</b>arg<b>_</b>list&#160;<a href="atomic_ctor.xml#atomic_user.ctor_arg_list" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_user.ctor_arg_list</a><br/>
cumulative&#160;<a href="optimize_cumulative_sum.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Cumulative&#xA0;Sum&#xA0;Operations</a><br/>
current&#160;<a href="omp_get_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.cpp.xml" target="_top">Abort&#xA0;Current&#xA0;Recording:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Current Version" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Current&#xA0;Version</a><br/>
currently&#160;<a href="omp_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored</a><br/>
cxx<b>_</b>flags&#160;<a href="auto_tools.xml#cxx_flags" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;cxx_flags</a><br/>
cygwin&#160;<a href="team_pthread.cpp.xml#Bug in Cygwin" target="_top">Pthread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Bug&#xA0;in&#xA0;Cygwin</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#adolc_dir.Cygwin" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;adolc_dir.Cygwin</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml#Cygwin" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Cygwin</a><br/>

<b><big><a name="D">D</a></big></b>
<br/>
Dependent&#160;<a href="fun_check.cpp.xml" target="_top">ADFun&#xA0;Check&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence</a><br/>
Domain&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
daily&#160;<a href="download.xml#Daily Versions" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Daily&#xA0;Versions</a><br/>
data&#160;<a href="cppad_vector.xml#vectorBool.data" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;vectorBool.data</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#data" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;data</a><br/>
datadir&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
ddp&#160;<a href="link_poly.xml#ddp" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;ddp</a><br/>
ddw&#160;<a href="revtwo.xml#ddw" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;ddw</a><br/>
ddy&#160;<a href="fortwo.xml#ddy" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;ddy</a><br/>
deallocate&#160;<a href="ta_delete_array.xml" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
debug&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
debugging&#160;<a href="check_for_nan.xml#Debugging" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Debugging</a><br/>
declare&#160;<a href="old_mat_mul.hpp.xml#Declare mat_mul Function" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Declare&#xA0;mat_mul&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording</a><br/>
default&#160;<a href="ta_create_array.xml" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Default Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Default Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml#Default" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Default</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Example.Default Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Example.Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Default Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Default&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml#Default" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values:&#160;Default</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Default Constructor" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Default&#xA0;Constructor</a><br/>
define&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#Example.Define Constructor" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;Example.Define&#xA0;Constructor</a><br/>
defined&#160;<a href="old_atomic.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pkgconfig.xml#Defined Fields" target="_top">CppAD&#xA0;pkg-config&#xA0;Files:&#160;Defined&#xA0;Fields</a><br/>
definition&#160;<a href="simplevector.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Class Definition" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#End Class Definition" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Start Class Definition" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Class Definition" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml#Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml#Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#End Class Definition" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Start Class Definition" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#End Class Definition" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#End Class Definition" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Start Class Definition" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#End Class Definition" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#End Class Definition" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Start Class Definition" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
definitions<b>:</b>&#160;<a href="ipopt_nlp_ode_problem.hpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
delete&#160;<a href="tracknewdel.cpp.xml" target="_top">Tracking&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
delete<b>:</b>&#160;<a href="tracknewdel.cpp.xml" target="_top">Tracking&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
delete<b>_</b>array&#160;<a href="omp_delete_array.xml" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
delta&#160;<a href="omp_delete_array.xml#Delta" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;Delta</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml#Delta" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;Delta</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml#Delta" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Delta</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml#Delta" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Delta</a><br/>
dependency&#160;<a href="dependency.cpp.xml#Dependency Pattern" target="_top">Computing&#xA0;Dependency:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Dependency&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#dependency" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;dependency</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#dependency" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;dependency</a><br/>
dependency<b>:</b>&#160;<a href="dependency.cpp.xml" target="_top">Computing&#xA0;Dependency:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
dependent&#160;<a href="fundeprecated.xml#Dependent" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Dependent</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Tape.Dependent Variables" target="_top">Glossary:&#160;Tape.Dependent&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Operation.Dependent" target="_top">Glossary:&#160;Operation.Dependent</a><br/>
deprecate&#160;<a href="condexp.xml#Deprecate 2005-08-07" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Deprecate&#xA0;2005-08-07</a><br/>
deprecated&#160;<a href="zdouble.xml#Deprecated 2015-09-26" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Deprecated&#xA0;2015-09-26</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.cpp.xml#Deprecated 2013-05-27" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_tan.cpp.xml#Deprecated 2013-05-27" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_2.cpp.xml#Deprecated 2013-05-27" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml#Deprecated 2013-05-27" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_reciprocal.cpp.xml#Deprecated 2013-05-27" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Deprecated 2013-05-27" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Deprecated&#xA0;2013-05-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#Deprecated 2012-11-28" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Deprecated&#xA0;2012-11-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="test_vector.xml#CppADvector Deprecated 2007-07-28" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;CppADvector&#xA0;Deprecated&#xA0;2007-07-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="test_vector.xml#Deprecated 2012-07-03" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;Deprecated&#xA0;2012-07-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="epsilon.xml#Deprecated 2012-06-17" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types:&#160;Deprecated&#xA0;2012-06-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="memory_leak.xml#Deprecated 2012-04-06" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;Deprecated&#xA0;2012-04-06</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.cpp.xml#Deprecated 2011-08-31" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml#Deprecated 2011-08-31" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml#Deprecated 2011-08-31" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml#Deprecated 2011-08-31" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml#Deprecated 2011-08-31" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml#Deprecated 2011-08-31" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml#Deprecated 2011-08-31" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml#Deprecated 2011-08-31" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml#Deprecated 2011-08-31" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml#Deprecated 2011-08-31" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml#Deprecated 2011-08-31" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Deprecated&#xA0;2011-08-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml#Deprecated 2011-08-23" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD:&#160;Deprecated&#xA0;2011-08-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackCount.Previously Deprecated" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackCount.Previously&#xA0;Deprecated</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackExtend.Previously Deprecated" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackExtend.Previously&#xA0;Deprecated</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackDelVec.Previously Deprecated" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackDelVec.Previously&#xA0;Deprecated</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackNewVec.Previously Deprecated" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackNewVec.Previously&#xA0;Deprecated</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#Deprecated 2007-07-23" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;Deprecated&#xA0;2007-07-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_thread.xml#Deprecated 2011-06-23" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup:&#160;Deprecated&#xA0;2011-06-23</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="comparechange.xml#Deprecated 2015-01-20" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Deprecated&#xA0;2015-01-20</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#capacity_taylor.Deprecated 2014-03-18" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;capacity_taylor.Deprecated&#xA0;2014-03-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#size_taylor.Deprecated 2014-03-18" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;size_taylor.Deprecated&#xA0;2014-03-18</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#use_VecAD.Deprecated 2006-04-08" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;use_VecAD.Deprecated&#xA0;2006-04-08</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#taylor_size.Deprecated 2006-06-17" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;taylor_size.Deprecated&#xA0;2006-06-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Size.Deprecated 2006-04-03" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Size.Deprecated&#xA0;2006-04-03</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Memory.Deprecated 2006-03-31" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Memory.Deprecated&#xA0;2006-03-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Order.Deprecated 2006-03-31" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Order.Deprecated&#xA0;2006-03-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Dependent.Deprecated 2007-08-07" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Dependent.Deprecated&#xA0;2007-08-07</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="include_deprecated.xml#Linking New Files to Deprecated Commands" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Linking&#xA0;New&#xA0;Files&#xA0;to&#xA0;Deprecated&#xA0;Commands</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="include_deprecated.xml#Deprecated 2006-12-17" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Deprecated&#xA0;2006-12-17</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="include_deprecated.xml#Deprecated 2015-11-30" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Deprecated&#xA0;2015-11-30</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="include_deprecated.xml" target="_top">Deprecated&#xA0;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="deprecated.xml" target="_top">CppAD&#xA0;Deprecated&#xA0;API&#xA0;Features</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml#nan(zero).Deprecated 2015-10-04" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;nan(zero).Deprecated&#xA0;2015-10-04</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="preprocessor.xml#Deprecated" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Deprecated</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Deprecated 2007-07-31" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Deprecated&#xA0;2007-07-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml#u.x" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;u.x</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml#Deprecated 2016-06-27" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Deprecated&#xA0;2016-06-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml#Implementation.x" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.x</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml#Deprecated 2016-06-27" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Deprecated&#xA0;2016-06-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Implementation.x" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.x</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Deprecated 2016-06-27" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Deprecated&#xA0;2016-06-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml#Implementation.x" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.x</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml#Deprecated 2016-06-27" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Deprecated&#xA0;2016-06-27</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#CppADCreateDiscrete Deprecated 2007-07-28" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;CppADCreateDiscrete&#xA0;Deprecated&#xA0;2007-07-28</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.xml#x.Deprecated 2013-12-31" target="_top">AD&#xA0;Constructors:&#160;x.Deprecated&#xA0;2013-12-31</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#Deprecated 2012-12-26" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Deprecated&#xA0;2012-12-26</a><br/>
derivative&#160;<a href="theory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Derivative&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_poly.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Derivative of ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Derivative&#xA0;of&#xA0;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Derivative of ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Derivative&#xA0;of&#xA0;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml" target="_top">Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Derivative&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Purpose.Derivative Values" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose.Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sign.xml#Derivative" target="_top">The&#xA0;Sign:&#xA0;sign:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml#Derivative" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.xml#Derivative" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan.xml#Derivative" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt.xml#Derivative" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sinh.xml#Derivative" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin.xml#Derivative" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log.xml#Derivative" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp.xml#Derivative" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.xml#Derivative" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cos.xml#Derivative" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.xml#Derivative" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin.xml#Derivative" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos.xml#Derivative" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Derivative" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Derivative" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml#Derivative" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml#Derivative" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence.Derivative" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence.Derivative" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence.Derivative" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence.Derivative" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Derivative" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
derivative<b>:</b>&#160;<a href="revone.xml" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
derivatives&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Black Box Method.Derivatives" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Black&#xA0;Box&#xA0;Method.Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bib.xml#Evaluating Derivatives" target="_top">Bibliography:&#160;Evaluating&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_forward.xml#Derivatives" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory:&#160;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml#Derivatives" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory:&#160;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml#Derivatives" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml#Derivatives" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml#Derivatives" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml#Derivatives" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml#Derivatives" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_sacado.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_fadbad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_cppad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_adolc.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Derivatives of Outer Function" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Derivatives&#xA0;of&#xA0;Outer&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funeval.xml" target="_top">Evaluate&#xA0;ADFun&#xA0;Functions,&#xA0;Derivatives,&#xA0;and&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Derivatives" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
derivatives<b>:</b>&#160;<a href="drivers.xml" target="_top">First&#xA0;and&#xA0;Second&#xA0;Derivatives:&#xA0;Easy&#xA0;Drivers</a><br/>
description&#160;<a href="luratio.xml#Description" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="general.xml#Description" target="_top">General&#xA0;Examples:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Description" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Description" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Description" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml#Description" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml#Description" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml#Description" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#Description" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Description" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Description" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml#Description" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml#Description" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml#Description" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cond_exp.cpp.xml#Description" target="_top">Conditional&#xA0;Expressions:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sign.xml#Description" target="_top">The&#xA0;Sign:&#xA0;sign:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.xml#Description" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml#Description" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.xml#Description" target="_top">The&#xA0;Error&#xA0;Function:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml#Description" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml#Description" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh:&#160;Description</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml#Description" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh:&#160;Description</a><br/>
destructor&#160;<a href="ta_delete_array.xml" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Element Constructor and Destructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Element&#xA0;Constructor&#xA0;and&#xA0;Destructor</a><br/>
det&#160;<a href="det_by_minor.xml#det" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;det</a><br/>
&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#det" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;det</a><br/>
det<b>_</b>33&#160;<a href="det_33.hpp.xml" target="_top">Source:&#xA0;det_33</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
det<b>_</b>by<b>_</b>lu&#160;<a href="det_by_lu.hpp.xml" target="_top">Source:&#xA0;det_by_lu</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization</a><br/>
det<b>_</b>by<b>_</b>minor&#160;<a href="time_det_by_minor_c.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="repeat_det_by_minor_c.xml" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="correct_det_by_minor_c.xml" target="_top">Correctness&#xA0;Test&#xA0;of&#xA0;det_by_minor&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.hpp.xml" target="_top">Source:&#xA0;det_by_minor</a><br/>
det<b>_</b>grad<b>_</b>33&#160;<a href="det_grad_33.hpp.xml" target="_top">Source:&#xA0;det_grad_33</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
det<b>_</b>of<b>_</b>minor&#160;<a href="det_of_minor.hpp.xml" target="_top">Source:&#xA0;det_of_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.cpp.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor</a><br/>
detection&#160;<a href="memory_leak.xml" target="_top">Memory&#xA0;Leak&#xA0;Detection</a><br/>
determinant&#160;<a href="luratio.xml#LU.Determinant" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;LU.Determinant</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor_c.xml" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor_c.xml#Determinant of A" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Determinant&#xA0;of&#xA0;A</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor_c.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.cpp.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml#Determinant of A" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Determinant&#xA0;of&#xA0;A</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;LU&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_det.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;To&#xA0;Compute&#xA0;Determinant:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#LU.Determinant" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;LU.Determinant</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations</a><br/>
determinant<b>:</b>&#160;<a href="eigen_det.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;To&#xA0;Compute&#xA0;Determinant:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
determinants&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
determine&#160;<a href="time_det_by_minor_c.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
difference&#160;<a href="interface2c.cpp.xml" target="_top">Interfacing&#xA0;to&#xA0;C:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
differential&#160;<a href="sin_cos_forward.xml#Differential Equation" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory:&#160;Differential&#xA0;Equation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Differential Equation" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Differential&#xA0;Equation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
differentiate&#160;<a href="conj_grad.cpp.xml" target="_top">Differentiate&#xA0;Conjugate&#xA0;Gradient&#xA0;Algorithm:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
differentiating&#160;<a href="stack_machine.cpp.xml" target="_top">Example&#xA0;Differentiating&#xA0;a&#xA0;Stack&#xA0;Machine&#xA0;Interpreter</a><br/>
differentiation&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Algorithmic Differentiation" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Algorithmic&#xA0;Differentiation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
dimension&#160;<a href="rombergmul.xml" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration</a><br/>
dimensional&#160;<a href="rombergmul.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="romberg_one.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
dimensionalromberg&#160;<a href="rombergone.xml" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration</a><br/>
dimensions&#160;<a href="atomic_mat_mul.hpp.xml#Matrix Dimensions" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Matrix&#xA0;Dimensions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Matrix Dimensions" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Matrix&#xA0;Dimensions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Matrix Dimensions" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Matrix&#xA0;Dimensions</a><br/>
direction&#160;<a href="hes_times_dir.cpp.xml" target="_top">Hessian&#xA0;Times&#xA0;Direction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#Hessian Times Direction" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Hessian&#xA0;Times&#xA0;Direction</a><br/>
direction<b>:</b>&#160;<a href="hes_times_dir.cpp.xml" target="_top">Hessian&#xA0;Times&#xA0;Direction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
directions&#160;<a href="reverse.xml#Multiple Directions" target="_top">Reverse&#xA0;Mode:&#160;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode</a><br/>
directories&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
directory&#160;<a href="auto_tools.xml#Work Directory" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Work&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#Distribution Directory" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#CMake Command.Build Directory" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;CMake&#xA0;Command.Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Distribution Directory" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Distribution&#xA0;Directory</a><br/>
discrete&#160;<a href="discrete.xml" target="_top">Discrete&#xA0;AD&#xA0;Functions</a><br/>
discussion&#160;<a href="comparechange.xml#Discussion" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Error Criteria Discussion" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Error&#xA0;Criteria&#xA0;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Error Criteria Discussion" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Error&#xA0;Criteria&#xA0;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml#Discussion" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode:&#160;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml#Discussion" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependency.cpp.xml#Discussion" target="_top">Computing&#xA0;Dependency:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml#number.Discussion" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;number.Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml#Discussion" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml#Discussion" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mul_level.cpp.xml#Discussion" target="_top">Atomic&#xA0;Operations&#xA0;and&#xA0;Multiple-Levels&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml#Discussion" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;Discussion</a><br/>
disk&#160;<a href="faq.xml#Tape Storage: Disk or Memory" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Tape&#xA0;Storage:&#xA0;Disk&#xA0;or&#xA0;Memory</a><br/>
distribution&#160;<a href="auto_tools.xml#Distribution Directory" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#Distribution Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Distribution&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Distribution Directory" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Distribution&#xA0;Directory</a><br/>
divide&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="div.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
division&#160;<a href="reversetheory.xml#Binary Operators.Division" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Binary&#xA0;Operators.Division</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Binary Operators.Division" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Binary&#xA0;Operators.Division</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Derivative.Division" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Derivative.Division</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Derivative.Division" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Derivative.Division</a><br/>
division<b>:</b>&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="div.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
documentation&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#No Documentation.Building Documentation" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;No&#xA0;Documentation.Building&#xA0;Documentation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#No Documentation" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;No&#xA0;Documentation</a><br/>
documented&#160;<a href="preprocessor.xml#Documented Elsewhere" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Documented&#xA0;Elsewhere</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="preprocessor.xml#Documented Here" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Documented&#xA0;Here</a><br/>
domain&#160;<a href="ipopt_nlp_ode_fast.xml#Trapezoidal Approximation.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Initial Condition.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Initial&#xA0;Condition.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Objective Function.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Objective&#xA0;Function.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#Domain" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;Domain</a><br/>
double&#160;<a href="double_sparse_jacobian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_hessian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_poly.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_ode.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_double.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Functions&#xA0;in&#xA0;Double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml#n_sweep.double" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;n_sweep.double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#n_sweep.double" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;n_sweep.double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml#ddp.double" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;ddp.double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#jacobian.double" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;jacobian.double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#gradient.double" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;gradient.double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#gradient.double" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;gradient.double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#package.double" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;package.double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Double Constructor" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Double&#xA0;Constructor</a><br/>
download&#160;<a href="get_sacado.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions.Step 1: Download" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;1:&#xA0;Download</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions</a><br/>
&#160;&#160;&#160;&#160;&#160;install<b>&#xA0;</b>eigen&#160;<a href="get_eigen.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;install<b>&#xA0;</b>fadbad&#160;<a href="get_fadbad.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;install<b>&#xA0;</b>ipopt&#160;<a href="get_ipopt.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;install<b>&#xA0;</b>sacado&#160;<a href="get_sacado.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
driver&#160;<a href="ipopt_nlp_ode_run.hpp.xml" target="_top">Driver&#xA0;for&#xA0;Running&#xA0;the&#xA0;Ipopt&#xA0;ODE&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml" target="_top">Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine</a><br/>
driver<b>:</b>&#160;<a href="rev_two.cpp.xml" target="_top">Second&#xA0;Partials&#xA0;Reverse&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Derivative&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
drivers&#160;<a href="drivers.xml" target="_top">First&#xA0;and&#xA0;Second&#xA0;Derivatives:&#xA0;Easy&#xA0;Drivers</a><br/>
during&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_03.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_05.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2005</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_string.cpp.xml" target="_top">Print&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
dvector&#160;<a href="ipopt_solve.xml#Dvector" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Dvector</a><br/>
dw&#160;<a href="revone.xml#dw" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;dw</a><br/>
&#160;&#160;&#160;<a href="reverse_any.xml#dw" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw</a><br/>
&#160;&#160;&#160;<a href="reverse_two.xml#dw" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw</a><br/>
&#160;&#160;&#160;<a href="reverse_one.xml#dw" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw</a><br/>
dy&#160;<a href="forone.xml#dy" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;dy</a><br/>
dz&#160;<a href="link_mat_mul.xml#dz" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply:&#160;dz</a><br/>

<b><big><a name="E">E</a></big></b>
<br/>
EqualOpSeq&#160;<a href="equal_op_seq.cpp.xml" target="_top">EqualOpSeq:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
ErrorHandler&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
e&#160;<a href="odegear.xml#e" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;e</a><br/>
&#160;&#160;<a href="rosen34.xml#e" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;e</a><br/>
&#160;&#160;<a href="runge45.xml#e" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;e</a><br/>
&#160;&#160;<a href="rombergmul.xml#e" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;e</a><br/>
&#160;&#160;<a href="rombergone.xml#e" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;e</a><br/>
eabs&#160;<a href="odegearcontrol.xml#eabs" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;eabs</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#eabs" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;eabs</a><br/>
easy&#160;<a href="sparse_hessian.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml" target="_top">Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revone.xml" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forone.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="drivers.xml" target="_top">First&#xA0;and&#xA0;Second&#xA0;Derivatives:&#xA0;Easy&#xA0;Drivers</a><br/>
ef&#160;<a href="odegearcontrol.xml#ef" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;ef</a><br/>
&#160;&#160;&#160;<a href="odeerrcontrol.xml#ef" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;ef</a><br/>
efficiency&#160;<a href="optimize.xml#Efficiency" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Efficiency</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Efficiency" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Efficiency</a><br/>
efficient&#160;<a href="omp_efficient.xml" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml" target="_top">Glossary</a><br/>
eigen&#160;<a href="testvector.xml#Eigen Vectors" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;Eigen&#xA0;Vectors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_det.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;To&#xA0;Compute&#xA0;Determinant:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_array.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;Arrays:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml#Eigen NumTraits" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;Eigen&#xA0;NumTraits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml#eigen" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;eigen</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#cppad_profile_flag.Eigen and Fadbad" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_profile_flag.Eigen&#xA0;and&#xA0;Fadbad</a><br/>
&#160;&#160;&#160;&#160;&#160;download<b>&#xA0;</b>and<b>&#xA0;</b>install&#160;<a href="get_eigen.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
eigen<b>_</b>dir&#160;<a href="auto_tools.xml#eigen_dir" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;eigen_dir</a><br/>
eigen<b>_</b>plugin<b>.</b>hpp&#160;<a href="eigen_plugin.hpp.xml" target="_top">Source&#xA0;Code&#xA0;for&#xA0;eigen_plugin.hpp</a><br/>
eigen<b>_</b>prefix&#160;<a href="eigen_prefix.xml#eigen_prefix" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;eigen_prefix</a><br/>
elapsed&#160;<a href="elapsed_seconds_c.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="microsoft_timer.xml" target="_top">Microsoft&#xA0;Version&#xA0;of&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.cpp.xml" target="_top">Elapsed&#xA0;Seconds:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
elapsed<b>_</b>seconds&#160;<a href="elapsed_seconds.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
element&#160;<a href="set_union.xml#Element" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets:&#160;Element</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#vectorBool.Element Type" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;vectorBool.Element&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Element Access" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Element&#xA0;Access</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Element Access" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Element&#xA0;Access</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Element Constructor and Destructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Element&#xA0;Constructor&#xA0;and&#xA0;Destructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Result Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Result&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Right Operand Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Right&#xA0;Operand&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Left Operand Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Left&#xA0;Operand&#xA0;Element&#xA0;Index</a><br/>
elementary&#160;<a href="glossary.xml#Elementary Vector" target="_top">Glossary:&#160;Elementary&#xA0;Vector</a><br/>
elements&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Elements of Specified Type" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Elements&#xA0;of&#xA0;Specified&#xA0;Type</a><br/>
eliminating&#160;<a href="tan_reverse.xml#Eliminating Y(t)" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Eliminating&#xA0;Y(t)</a><br/>
elsewhere&#160;<a href="preprocessor.xml#Documented Elsewhere" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Documented&#xA0;Elsewhere</a><br/>
embedded&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
enable&#160;<a href="cppad_eigen.hpp.xml" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
end&#160;<a href="atomic_mat_mul.hpp.xml#End Class Definition" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#End Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#End Class Definition" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#End Class Definition" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#End Class Definition" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#End Class Definition" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#End Class Definition" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;End&#xA0;Class&#xA0;Definition</a><br/>
entire&#160;<a href="revsparsehes.xml#Entire Sparsity Pattern" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#Entire Sparsity Pattern" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#Entire Sparsity Pattern" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
environment&#160;<a href="ta_parallel_setup.xml" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment</a><br/>
eps&#160;<a href="epsilon.xml#eps" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types:&#160;eps</a><br/>
epsilon&#160;<a href="epsilon.xml" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml#xlow.epsilon" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;xlow.epsilon</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#epsilon" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;epsilon</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml#epsilon" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;epsilon</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#epsilon" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;epsilon</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#epsilon" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;epsilon</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#epsilon" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;epsilon</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation</a><br/>
equal&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal</a><br/>
equalopseq&#160;<a href="base_complex.hpp.xml#EqualOpSeq" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;EqualOpSeq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#EqualOpSeq" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;EqualOpSeq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#EqualOpSeq" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;EqualOpSeq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#EqualOpSeq" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;EqualOpSeq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#EqualOpSeq" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;EqualOpSeq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml#EqualOpSeq" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;EqualOpSeq</a><br/>
equalopseq<b>:</b>&#160;<a href="equal_op_seq.cpp.xml" target="_top">EqualOpSeq:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
equation&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml#Differential Equation" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory:&#160;Differential&#xA0;Equation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Differential Equation" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Differential&#xA0;Equation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix</a><br/>
equations&#160;<a href="lusolve.xml" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
erel&#160;<a href="odegearcontrol.xml#erel" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;erel</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#erel" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;erel</a><br/>
erf&#160;<a href="whats_new_08.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008</a><br/>
&#160;&#160;&#160;&#160;<a href="erf_reverse.xml" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="erf_forward.xml" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;<a href="base_std_math.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;<a href="erf.cpp.xml" target="_top">The&#xA0;AD&#xA0;erf&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
error&#160;<a href="memory_leak.xml#Error Message" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;Error&#xA0;Message</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_forward.xml" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Error Criteria Discussion" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Error&#xA0;Criteria&#xA0;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Error Criteria Discussion" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Error&#xA0;Criteria&#xA0;Discussion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml#Error Handler" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Error&#xA0;Handler</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_handler.cpp.xml" target="_top">Replacing&#xA0;The&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Error Handler" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Error&#xA0;Handler</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml#Error Message" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Error&#xA0;Message</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.xml" target="_top">The&#xA0;Error&#xA0;Function</a><br/>
errors&#160;<a href="speedtest.xml#Errors" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Errors</a><br/>
euclidean&#160;<a href="atomic_norm_sq.cpp.xml" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
evaluate&#160;<a href="double_poly.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funeval.xml" target="_top">Evaluate&#xA0;ADFun&#xA0;Functions,&#xA0;Derivatives,&#xA0;and&#xA0;Sparsity&#xA0;Patterns</a><br/>
evaluating&#160;<a href="bib.xml#Evaluating Derivatives" target="_top">Bibliography:&#160;Evaluating&#xA0;Derivatives</a><br/>
evaluation<b>:</b>&#160;<a href="poly.cpp.xml" target="_top">Polynomial&#xA0;Evaluation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
example&#160;<a href="lu_ratio.cpp.xml" target="_top">LuRatio:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luratio.xml#Example" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="opt_val_hes.cpp.xml" target="_top">opt_val_hes:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="opt_val_hes.xml#Example" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bender_quad.cpp.xml" target="_top">BenderQuad:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="benderquad.xml#Example" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="zdouble.cpp.xml" target="_top">zdouble:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml#Example" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml#Example" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.cpp.xml" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_tan.cpp.xml" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_reciprocal.cpp.xml" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Example" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_run.hpp.xml" target="_top">Driver&#xA0;for&#xA0;Running&#xA0;the&#xA0;Ipopt&#xA0;ODE&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.hpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode.xml" target="_top">Example&#xA0;Simultaneous&#xA0;Solution&#xA0;of&#xA0;Forward&#xA0;and&#xA0;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#Example" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.cpp.xml" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml#Example" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml#Example" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml#Example" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml#Example" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml#Example" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml#Example" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml#Example" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml#Example" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml#Example" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.cpp.xml" target="_top">Tracking&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#Example" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.cpp.xml" target="_top">sparse_hes_fun:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#Example" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.cpp.xml" target="_top">sparse_jac_fun:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#Example" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.cpp.xml" target="_top">ode_evaluate:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Example" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml#Example" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml#Example" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.cpp.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml#Example" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#Example" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml#Example" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="stack_machine.cpp.xml" target="_top">Example&#xA0;Differentiating&#xA0;a&#xA0;Stack&#xA0;Machine&#xA0;Interpreter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_stiff.cpp.xml" target="_top">A&#xA0;Stiff&#xA0;Ode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.cpp.xml" target="_top">Multiple&#xA0;Level&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Example" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interface2c.cpp.xml" target="_top">Interfacing&#xA0;to&#xA0;C:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;LU&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_det.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;To&#xA0;Compute&#xA0;Determinant:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_array.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;Arrays:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml#Example" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="conj_grad.cpp.xml" target="_top">Differentiate&#xA0;Conjugate&#xA0;Gradient&#xA0;Algorithm:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_fun.cpp.xml" target="_top">Creating&#xA0;Your&#xA0;Own&#xA0;Interface&#xA0;to&#xA0;an&#xA0;ADFun&#xA0;Object</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_retape.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#Example" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="set_union.cpp.xml" target="_top">Set&#xA0;Union:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="set_union.xml#Example" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.cpp.xml" target="_top">to_string:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#Example" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.cpp.xml" target="_top">Index&#xA0;Sort:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.xml#Example" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_all.xml#Example" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml#Example" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml#Example" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml#Example" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml#Example" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml#Example" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml#Example" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#Example" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml#Example" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml#Example" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_num_threads.xml#Example" target="_top">Get&#xA0;Number&#xA0;of&#xA0;Threads:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml#Example" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_bool.cpp.xml" target="_top">CppAD::vectorBool&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.cpp.xml" target="_top">CppAD::vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Example" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_gear_control.cpp.xml" target="_top">OdeGearControl:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Example" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_gear.cpp.xml" target="_top">OdeGear:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Example" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_err_maxabs.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;Using&#xA0;Maxabs&#xA0;Argument</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_err_control.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Example" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen_34.cpp.xml" target="_top">Rosen34:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Example" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45_2.cpp.xml" target="_top">Runge45:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45_1.cpp.xml" target="_top">Runge45:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Example" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml#Example" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="romberg_one.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml#Example" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_invert.cpp.xml" target="_top">LuInvert:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml#Example" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_factor.cpp.xml" target="_top">LuFactor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#Example" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_solve.cpp.xml" target="_top">LuSolve&#xA0;With&#xA0;Complex&#xA0;Arguments:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Example" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.cpp.xml" target="_top">Polynomial&#xA0;Evaluation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Example" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.cpp.xml" target="_top">The&#xA0;Pow&#xA0;Integer&#xA0;Exponent:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml#Example" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.cpp.xml" target="_top">nan:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml#Example" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_simple_vector.cpp.xml" target="_top">The&#xA0;CheckSimpleVector&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml#Example" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_vector.cpp.xml" target="_top">Simple&#xA0;Vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Example" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_numeric_type.cpp.xml" target="_top">The&#xA0;CheckNumericType&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml#Example" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_type.cpp.xml" target="_top">The&#xA0;NumericType:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Example" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.cpp.xml" target="_top">time_test:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.cpp.xml" target="_top">Elapsed&#xA0;Seconds:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml#Example" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#Example" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.cpp.xml" target="_top">speed_test:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Example" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#Example" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="near_equal.cpp.xml" target="_top">NearEqual&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml#Example" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_handler.cpp.xml" target="_top">Replacing&#xA0;The&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#Example" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Example Implementation" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Example&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Example Use" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Example&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_example.cpp.xml" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml#Example" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.cpp.xml" target="_top">ADFun&#xA0;Checking&#xA0;For&#xA0;Nan:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml#Example" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_cumulative_sum.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Cumulative&#xA0;Sum&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_nest_conditional.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Nested&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_conditional_skip.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_print_for.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Print&#xA0;Forward&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_compare_op.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_reverse_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Reverse&#xA0;Activity&#xA0;Analysis</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_forward_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Forward&#xA0;Activity&#xA0;Analysis</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fun_check.cpp.xml" target="_top">ADFun&#xA0;Check&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml#Example" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_sub_hes.cpp.xml" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml#Example" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.cpp.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#Example" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.cpp.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#Example" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_two.cpp.xml" target="_top">Second&#xA0;Partials&#xA0;Reverse&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_two.cpp.xml" target="_top">Subset&#xA0;of&#xA0;Second&#xA0;Order&#xA0;Partials:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.cpp.xml" target="_top">Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml#Example" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Derivative&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml#Example" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml#Example" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.cpp.xml" target="_top">Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml#Example" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bool_sparsity.cpp.xml" target="_top">Using&#xA0;vectorBool&#xA0;Sparsity&#xA0;To&#xA0;Conserve&#xA0;Memory:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_hes.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml#Example" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparsity_sub.cpp.xml" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_hes.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml#Example" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependency.cpp.xml" target="_top">Computing&#xA0;Dependency:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_jac.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#Example" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_jac.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#Example" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_three.cpp.xml" target="_top">Third&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#Example" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_times_dir.cpp.xml" target="_top">Hessian&#xA0;Times&#xA0;Direction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.cpp.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;ModeExample&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#Example" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml#Example" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.xml#Example" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.cpp.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficient&#xA0;Memory&#xA0;Allocation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml#Example" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.cpp.xml" target="_top">CompareChange&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml#Example" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml#Example" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Example" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Example" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml#Example" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml#Example" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml#Example" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#Example" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.cpp.xml" target="_top">Abort&#xA0;Current&#xA0;Recording:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.xml#Example" target="_top">Abort&#xA0;Recording&#xA0;of&#xA0;an&#xA0;Operation&#xA0;Sequence:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml#Example" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fun_assign.cpp.xml" target="_top">ADFun&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Example" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.cpp.xml" target="_top">Independent&#xA0;and&#xA0;ADFun&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Example" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="complex_poly.cpp.xml" target="_top">Complex&#xA0;Polynomial:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#Example" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Example" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_example.xml" target="_top">Example&#xA0;AD&#xA0;Base&#xA0;Types&#xA0;That&#xA0;are&#xA0;not&#xA0;AD&lt;OtherBase&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml#Example" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Example" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#Example" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equal_op_seq.cpp.xml" target="_top">EqualOpSeq:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml#Example" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="par_var.cpp.xml" target="_top">AD&#xA0;Parameter&#xA0;and&#xA0;Variable&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parvar.xml#Example" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bool_fun.cpp.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Example" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="near_equal_ext.cpp.xml" target="_top">Compare&#xA0;AD&#xA0;with&#xA0;Base&#xA0;Objects:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml#Example" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml#Example" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#Example" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mul_level.cpp.xml" target="_top">Atomic&#xA0;Operations&#xA0;and&#xA0;Multiple-Levels&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.cpp.xml" target="_top">Simple&#xA0;Checkpointing:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Example" target="_top">Checkpointing&#xA0;Functions:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="num_limits.cpp.xml" target="_top">Numeric&#xA0;Limits:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml#Example" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interp_retape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tape_index.cpp.xml" target="_top">Taping&#xA0;Array&#xA0;Index&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Example" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cond_exp.cpp.xml" target="_top">Conditional&#xA0;Expressions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Example" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="azmul.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Zero&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="azmul.xml#Example" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.cpp.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.xml#Example" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan2&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml#Example" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sign.cpp.xml" target="_top">Sign&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sign.xml#Example" target="_top">The&#xA0;Sign:&#xA0;sign:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.cpp.xml" target="_top">The&#xA0;AD&#xA0;log1p&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.xml#Example" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml#Example" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.cpp.xml" target="_top">The&#xA0;AD&#xA0;erf&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.xml#Example" target="_top">The&#xA0;Error&#xA0;Function:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;atanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml#Example" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;asinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml#Example" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;acosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml#Example" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml#Example" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;tanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan.cpp.xml" target="_top">The&#xA0;AD&#xA0;tan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt.cpp.xml" target="_top">The&#xA0;AD&#xA0;sqrt&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;sinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin.cpp.xml" target="_top">The&#xA0;AD&#xA0;sin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log10.cpp.xml" target="_top">The&#xA0;AD&#xA0;log10&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log.cpp.xml" target="_top">The&#xA0;AD&#xA0;log&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;cosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cos.cpp.xml" target="_top">The&#xA0;AD&#xA0;cos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin.cpp.xml" target="_top">The&#xA0;AD&#xA0;asin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos.cpp.xml" target="_top">The&#xA0;AD&#xA0;acos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.xml#Example" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan.xml#Example" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt.xml#Example" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sinh.xml#Example" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin.xml#Example" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log10.xml#Example" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log.xml#Example" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp.xml#Example" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.xml#Example" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cos.xml#Example" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.xml#Example" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin.xml#Example" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos.xml#Example" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Example" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="div.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="add.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Example" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_minus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml#Example" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_plus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml#Example" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml#Example" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_string.cpp.xml" target="_top">Print&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml#Example" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.xml#Example" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml#Example" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_to_string.xml#Example" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#Example" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.xml#Example" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.cpp.xml" target="_top">AD&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.xml#Example" target="_top">AD&#xA0;Assignment&#xA0;Operator:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.cpp.xml" target="_top">AD&#xA0;Constructors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.xml#Example" target="_top">AD&#xA0;Constructors:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_hes.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_jac.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml#Example" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations:&#160;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml#Example" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms:&#160;Example</a><br/>
examples&#160;<a href="speed_example.cpp.xml" target="_top">Run&#xA0;the&#xA0;Speed&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.cpp.xml" target="_top">CppAD&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="listallexamples.xml" target="_top">List&#xA0;of&#xA0;All&#xA0;the&#xA0;CppAD&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exampleutility.xml" target="_top">Utility&#xA0;Routines&#xA0;used&#xA0;by&#xA0;CppAD&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="general.xml" target="_top">General&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.xml#Running Examples" target="_top">Examples:&#160;Running&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.xml" target="_top">Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Examples" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml#Examples" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml#Examples" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml#Identical.Examples" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;Identical.Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml#Examples" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml#Examples" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Examples" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml#Examples" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.xml#Examples" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml#Examples" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml#Examples" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#make.Examples and Tests" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;make.Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake_check.xml" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml#Examples and Tests" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests:&#160;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml#Examples" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml#Examples" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
exception&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
exceptions&#160;<a href="faq.xml#Exceptions" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Exceptions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#VecAD&lt;Base&gt;::reference.Exceptions" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;VecAD&lt;Base&gt;::reference.Exceptions</a><br/>
execute&#160;<a href="time_det_by_minor_c.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test</a><br/>
execution&#160;<a href="omp_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment</a><br/>
exercise&#160;<a href="cppad_vector.xml#Exercise" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Exercise</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Exercise" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Exercise</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Exercise" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Exercise</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml#Exercise" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal:&#160;Exercise</a><br/>
exercises&#160;<a href="exp_eps_cppad.xml#Exercises" target="_top">exp_eps:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#Exercises" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Exercises" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Exercises" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Exercises" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Exercises" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#Exercises" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_cppad.xml#Exercises" target="_top">exp_2:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Exercises" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Exercises" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Exercises" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Exercises" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Exercises" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#Exercises" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;Exercises</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Exercises" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Exercises</a><br/>
exp&#160;<a href="exp_reverse.xml" target="_top">Exponential&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_forward.xml" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="cppad_assert.xml#Exp" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Exp</a><br/>
&#160;&#160;&#160;&#160;<a href="errorhandler.xml#exp" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;exp</a><br/>
&#160;&#160;&#160;&#160;<a href="expm1.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="exp.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="exp.xml" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp</a><br/>
exp<b>_</b>2&#160;<a href="exp_eps_for2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.hpp.xml" target="_top">exp_2:&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation</a><br/>
exp<b>_</b>2<b>:</b>&#160;<a href="exp_2_cppad.xml" target="_top">exp_2:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.cpp.xml" target="_top">exp_2:&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.hpp.xml" target="_top">exp_2:&#xA0;Implementation</a><br/>
exp<b>_</b>apx&#160;<a href="exp_apx_main.cpp.xml" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction</a><br/>
exp<b>_</b>eps&#160;<a href="exp_eps_rev2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.cpp.xml" target="_top">exp_eps:&#xA0;Test&#xA0;of&#xA0;exp_eps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.hpp.xml" target="_top">exp_eps:&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation</a><br/>
exp<b>_</b>eps<b>:</b>&#160;<a href="exp_eps_cppad.xml" target="_top">exp_eps:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.cpp.xml" target="_top">exp_eps:&#xA0;Test&#xA0;of&#xA0;exp_eps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.hpp.xml" target="_top">exp_eps:&#xA0;Implementation</a><br/>
expansion&#160;<a href="det_by_minor_c.xml" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Second Order Expansion" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Second&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#First Order Expansion" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;First&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Second Order Expansion" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Second&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#First Order Expansion" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;First&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Zero Order Expansion" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Zero&#xA0;Order&#xA0;Expansion</a><br/>
explicit&#160;<a href="ad_ctor.xml#x.explicit" target="_top">AD&#xA0;Constructors:&#160;x.explicit</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
expm1&#160;<a href="exp_reverse.xml" target="_top">Exponential&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1</a><br/>
exponent&#160;<a href="pow_int.xml" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function</a><br/>
exponent<b>:</b>&#160;<a href="pow_int.cpp.xml" target="_top">The&#xA0;Pow&#xA0;Integer&#xA0;Exponent:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
exponential&#160;<a href="exp_reverse.xml" target="_top">Exponential&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log.xml" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp.xml" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation</a><br/>
expression&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
expressions&#160;<a href="optimize_nest_conditional.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Nested&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_conditional_skip.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml" target="_top">AD&#xA0;Conditional&#xA0;Expressions</a><br/>
expressions<b>:</b>&#160;<a href="cond_exp.cpp.xml" target="_top">Conditional&#xA0;Expressions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
extended&#160;<a href="checkpoint_extended_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
extending&#160;<a href="base_to_string.xml" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type</a><br/>
external&#160;<a href="get_sacado.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#External Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;External&#xA0;Directory</a><br/>
extra&#160;<a href="old_mat_mul.hpp.xml#Extra Call Information" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Extra&#xA0;Call&#xA0;Information</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml#Purpose.Extra Memory" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Purpose.Extra&#xA0;Memory</a><br/>
extraction&#160;<a href="download.xml#Windows File Extraction and Testing" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Windows&#xA0;File&#xA0;Extraction&#xA0;and&#xA0;Testing</a><br/>

<b><big><a name="F">F</a></big></b>
<br/>
FAQ&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
Fadbad&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
ForSparseHes&#160;<a href="for_sparse_hes.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
ForSparseJac&#160;<a href="for_sparse_jac.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
Forward&#160;<a href="capacity_order.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation</a><br/>
FunCheck&#160;<a href="fun_check.cpp.xml" target="_top">ADFun&#xA0;Check&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
f<b>.</b>forward<b>(</b>0&#160;<a href="printfor.xml#f.Forward(0, x)" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;f.Forward(0,&#xA0;x)</a><br/>
f<b>_</b>1&#160;<a href="exp_eps_rev2.xml#Index 2: f_1" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 2: f_1" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 2: f_1" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 2: f_1" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
f<b>_</b>2&#160;<a href="exp_eps_rev2.xml#Index 3: f_2" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 3: f_2" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 3: f_2" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 3: f_2" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
f<b>_</b>3&#160;<a href="exp_eps_rev2.xml#Index 4: f_3" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 4: f_3" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 4: f_3" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 4: f_3" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
f<b>_</b>4&#160;<a href="exp_eps_rev2.xml#Index 5: f_4" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 5: f_4" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 5: f_4" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 5: f_4" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
f<b>_</b>5&#160;<a href="exp_eps_rev2.xml#Index 6: f_5" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;6:&#xA0;f_5</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 6: f_5" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;6:&#xA0;f_5</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#f_5" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;f_5</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#f_5" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;f_5</a><br/>
f<b>_</b>6&#160;<a href="exp_eps_rev2.xml#Index 7: f_6" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;7:&#xA0;f_6</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 7: f_6" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;7:&#xA0;f_6</a><br/>
f<b>_</b>7&#160;<a href="exp_eps_rev2.xml#f_7" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;f_7</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#f_7" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;f_7</a><br/>
f<b>_</b>t&#160;<a href="rosen34.xml#Fun.f_t" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Fun.f_t</a><br/>
f<b>_</b>x&#160;<a href="odegearcontrol.xml#Fun.f_x" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Fun.f_x</a><br/>
&#160;&#160;&#160;&#160;<a href="odegear.xml#Fun.f_x" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Fun.f_x</a><br/>
&#160;&#160;&#160;&#160;<a href="rosen34.xml#Fun.f_x" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Fun.f_x</a><br/>
fabs&#160;<a href="ode_evaluate.xml#Float.fabs" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Float.fabs</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Scalar.fabs" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Scalar.fabs</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="abs.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="abs.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs</a><br/>
factor&#160;<a href="luratio.xml#LU.Factor" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;LU.Factor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#LU.Factor" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;LU.Factor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Factor and Invert" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Factor&#xA0;and&#xA0;Invert</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Notation.Cholesky Factor" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Notation.Cholesky&#xA0;Factor</a><br/>
factored&#160;<a href="luinvert.xml" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation</a><br/>
factorization&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization</a><br/>
factorization<b>:</b>&#160;<a href="det_by_lu.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;LU&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
fadbad&#160;<a href="fadbad_sparse_jacobian.cpp.xml" target="_top">fadbad&#xA0;Speed:&#xA0;sparse_jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_sparse_hessian.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_ode.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_fadbad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#cppad_profile_flag.Eigen and Fadbad" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;cppad_profile_flag.Eigen&#xA0;and&#xA0;Fadbad</a><br/>
&#160;&#160;&#160;&#160;&#160;download<b>&#xA0;</b>and<b>&#xA0;</b>install&#160;<a href="get_fadbad.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
fadbad<b>_</b>dir&#160;<a href="auto_tools.xml#fadbad_dir" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;fadbad_dir</a><br/>
fadbad<b>_</b>prefix&#160;<a href="speed_fadbad.xml#fadbad_prefix" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad:&#160;fadbad_prefix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml#fadbad_prefix" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests:&#160;fadbad_prefix</a><br/>
false&#160;<a href="revsparsehes.xml#h.transpose false" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;h.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#s.transpose false" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;s.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#r.transpose false" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;r.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#s.transpose false" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;s.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#r.transpose false" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;r.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.xml#CPPAD_USE_CPLUSPLUS_2011.false" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p:&#160;CPPAD_USE_CPLUSPLUS_2011.false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml#CPPAD_USE_CPLUSPLUS_2011.false" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1:&#160;CPPAD_USE_CPLUSPLUS_2011.false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.xml#CPPAD_USE_CPLUSPLUS_2011.false" target="_top">The&#xA0;Error&#xA0;Function:&#160;CPPAD_USE_CPLUSPLUS_2011.false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml#CPPAD_USE_CPLUSPLUS_2011.false" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh:&#160;CPPAD_USE_CPLUSPLUS_2011.false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml#CPPAD_USE_CPLUSPLUS_2011.false" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh:&#160;CPPAD_USE_CPLUSPLUS_2011.false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml#CPPAD_USE_CPLUSPLUS_2011.false" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh:&#160;CPPAD_USE_CPLUSPLUS_2011.false</a><br/>
fast&#160;<a href="ipopt_ode_speed.cpp.xml" target="_top">Speed&#xA0;Test&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_check.cpp.xml" target="_top">Correctness&#xA0;Check&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.xml" target="_top">A&#xA0;Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator</a><br/>
faster&#160;<a href="checkpoint.xml#Purpose.Faster Recording" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Faster&#xA0;Recording</a><br/>
features&#160;<a href="deprecated.xml" target="_top">CppAD&#xA0;Deprecated&#xA0;API&#xA0;Features</a><br/>
fg&#160;<a href="ipopt_solve.xml#fg_eval.fg" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;fg_eval.fg</a><br/>
fg<b>(</b>x<b>)</b>&#160;<a href="cppad_ipopt_nlp.xml#fg(x)" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg(x)</a><br/>
fg<b>_</b>eval&#160;<a href="ipopt_solve.xml#fg_eval" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;fg_eval</a><br/>
fg<b>_</b>info&#160;<a href="cppad_ipopt_nlp.xml#fg_info" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg_info</a><br/>
fg<b>_</b>info<b>.</b>domain<b>_</b>size&#160;<a href="cppad_ipopt_nlp.xml#fg_info.fg_info.domain_size" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg_info.fg_info.domain_size</a><br/>
fg<b>_</b>info<b>.</b>eval<b>_</b>r&#160;<a href="cppad_ipopt_nlp.xml#fg_info.fg_info.eval_r" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg_info.fg_info.eval_r</a><br/>
fg<b>_</b>info<b>.</b>index&#160;<a href="cppad_ipopt_nlp.xml#fg_info.fg_info.index" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg_info.fg_info.index</a><br/>
fg<b>_</b>info<b>.</b>number<b>_</b>functions&#160;<a href="cppad_ipopt_nlp.xml#fg_info.fg_info.number_functions" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg_info.fg_info.number_functions</a><br/>
fg<b>_</b>info<b>.</b>number<b>_</b>terms&#160;<a href="cppad_ipopt_nlp.xml#fg_info.fg_info.number_terms" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg_info.fg_info.number_terms</a><br/>
fg<b>_</b>info<b>.</b>range<b>_</b>size&#160;<a href="cppad_ipopt_nlp.xml#fg_info.fg_info.range_size" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg_info.fg_info.range_size</a><br/>
fg<b>_</b>info<b>.</b>retape&#160;<a href="cppad_ipopt_nlp.xml#fg_info.fg_info.retape" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg_info.fg_info.retape</a><br/>
fields&#160;<a href="pkgconfig.xml#Defined Fields" target="_top">CppAD&#xA0;pkg-config&#xA0;Files:&#160;Defined&#xA0;Fields</a><br/>
file&#160;<a href="old_mat_mul.cpp.xml#Include File" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Include&#xA0;File</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#file" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;file</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#Include File" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Include&#xA0;File</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="near_equal.cpp.xml#File Name" target="_top">NearEqual&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test:&#160;File&#xA0;Name</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#file" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;file</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml#get_check_for_nan.file" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;get_check_for_nan.file</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Include File" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Include&#xA0;File</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Windows File Extraction and Testing" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Windows&#xA0;File&#xA0;Extraction&#xA0;and&#xA0;Testing</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml#Include File" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms:&#160;Include&#xA0;File</a><br/>
file<b>_</b>name&#160;<a href="check_for_nan.xml#Error Message.file_name" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Error&#xA0;Message.file_name</a><br/>
files&#160;<a href="addon.xml#Library Files" target="_top">CppAD&#xA0;Addons:&#160;Library&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="addon.xml#Include Files" target="_top">CppAD&#xA0;Addons:&#160;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="include_deprecated.xml#Linking New Files to Deprecated Commands" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Linking&#xA0;New&#xA0;Files&#xA0;to&#xA0;Deprecated&#xA0;Commands</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="include_deprecated.xml" target="_top">Deprecated&#xA0;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml#Include Files" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml#Include Files" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal:&#160;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Include Files" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="pkgconfig.xml#CppAD Configuration Files" target="_top">CppAD&#xA0;pkg-config&#xA0;Files:&#160;CppAD&#xA0;Configuration&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="pkgconfig.xml" target="_top">CppAD&#xA0;pkg-config&#xA0;Files</a><br/>
first&#160;<a href="mul_level.xml#Procedure.First Start AD&lt;double&gt;" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.First&#xA0;Start&#xA0;AD&lt;double&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#first" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;first</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Derivative&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="drivers.xml" target="_top">First&#xA0;and&#xA0;Second&#xA0;Derivatives:&#xA0;Easy&#xA0;Drivers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#First Order" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;First&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#dw.First Order Partials" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw.First&#xA0;Order&#xA0;Partials</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#First Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;First&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence.First" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.First</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence.First Order" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.First&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#First Order Expansion" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;First&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence.First" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.First</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence.First Order" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.First&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#First Order Expansion" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;First&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
fitting&#160;<a href="ipopt_nlp_ode_fast.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
flag&#160;<a href="correct_det_by_minor_c.xml#flag" target="_top">Correctness&#xA0;Test&#xA0;of&#xA0;det_by_minor&#xA0;Routine:&#160;flag</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="memory_leak.xml#flag" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;flag</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="omp_efficient.xml#flag" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use:&#160;flag</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml#flag" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode:&#160;flag</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml#flag" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode:&#160;flag</a><br/>
flags&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
float&#160;<a href="epsilon.xml#Float" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types:&#160;Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#Float" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#Float" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Float" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#s.Float" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;s.Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#value.Float" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;value.Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml#Float" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml#Float" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#Float" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Float" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml#Float" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;Float</a><br/>
floating&#160;<a href="base_to_string.xml" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type</a><br/>
floatvector&#160;<a href="sparse_hes_fun.xml#FloatVector" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;FloatVector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#FloatVector" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;FloatVector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml#FloatVector" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;FloatVector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#FloatVector" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;FloatVector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#FloatVector" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;FloatVector</a><br/>
for<b>_</b>jac<b>_</b>sparse&#160;<a href="old_atomic.xml#for_jac_sparse" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;for_jac_sparse</a><br/>
for<b>_</b>sparse<b>_</b>hes&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Private.for_sparse_hes" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Private.for_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function.for_sparse_hes" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function.for_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#for_sparse_hes" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#for_sparse_hes" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_hes</a><br/>
for<b>_</b>sparse<b>_</b>jac&#160;<a href="atomic_mat_mul.hpp.xml#for_sparse_jac" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function.for_sparse_jac" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Private.for_sparse_jac" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Private.for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.for_sparse_jac" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#for_sparse_jac" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function.for_sparse_jac" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function.for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#for_sparse_jac" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function.for_sparse_jac" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#for_sparse_jac" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function.for_sparse_jac" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#for_sparse_jac" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#for_sparse_jac" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#for_sparse_jac" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#for_sparse_jac" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;for_sparse_jac</a><br/>
form&#160;<a href="exp_eps_rev2.xml#Mathematical Form" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Mathematical Form" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Mathematical Form" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Mathematical Form" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Mathematical Form" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Mathematical Form" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Mathematical Form" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Mathematical Form" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Mathematical Form" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Mathematical Form" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#Mathematical Form" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;Mathematical&#xA0;Form</a><br/>
formula&#160;<a href="forwardtheory.xml#Standard Math Functions.Taylor Coefficients Recursion Formula" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Taylor&#xA0;Coefficients&#xA0;Recursion&#xA0;Formula</a><br/>
forone&#160;<a href="forone.xml#ForOne Uses Forward" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;ForOne&#xA0;Uses&#xA0;Forward</a><br/>
forsparsejac&#160;<a href="sparsity_sub.cpp.xml#ForSparseJac" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test:&#160;ForSparseJac</a><br/>
fortwo&#160;<a href="fortwo.xml#ForTwo Uses Forward" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;ForTwo&#xA0;Uses&#xA0;Forward</a><br/>
forward&#160;<a href="old_atomic.xml#forward" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#ty.forward" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;ty.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Forward Problem" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Forward&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode.xml" target="_top">Example&#xA0;Simultaneous&#xA0;Solution&#xA0;of&#xA0;Forward&#xA0;and&#xA0;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Forward Mode Recomputation" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Forward&#xA0;Mode&#xA0;Recomputation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_forward.xml" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt_forward.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Mode: Forward or Reverse" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Mode:&#xA0;Forward&#xA0;or&#xA0;Reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml#Forward Mode" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test:&#160;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Forward Problem" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Forward&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_print_for.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Print&#xA0;Forward&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_forward_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Forward&#xA0;Activity&#xA0;Analysis</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml#FunCheck Uses Forward" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;FunCheck&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#Uses Forward" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#Uses Forward" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml#RevTwo Uses Forward" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;RevTwo&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml#ForTwo Uses Forward" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;ForTwo&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml#Hessian Uses Forward" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;Hessian&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml#RevOne Uses Forward" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;RevOne&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml#ForOne Uses Forward" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;ForOne&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml#Forward or Reverse" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine:&#160;Forward&#xA0;or&#xA0;Reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="drivers.xml" target="_top">First&#xA0;and&#xA0;Second&#xA0;Derivatives:&#xA0;Easy&#xA0;Drivers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_hes.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_jac.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml#Forward" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored:&#160;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward.xml" target="_top">Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml#Forward" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#forward" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Forward Matrix Multiply" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Forward&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function.forward" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Private.forward" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Private.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Forward Mode" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Private.forward" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Private.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Theory.Forward" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Theory.Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Private.forward" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Private.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Theory.Forward" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Theory.Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.forward" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#forward" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#forward" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function.forward" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#forward" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function.forward" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#forward" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Use Atomic Function.forward" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#forward" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#forward" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#forward" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#forward" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#forward" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#forward" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#forward" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml" target="_top">Atomic&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Purpose.Repeating Forward" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Repeating&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_string.cpp.xml" target="_top">Print&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_cppad.xml" target="_top">exp_eps:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_cppad.xml" target="_top">exp_2:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Forward Mode" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Forward&#xA0;Mode</a><br/>
forward<b>:</b>&#160;<a href="atomic_forward.cpp.xml" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
fp&#160;<a href="sparse_hes_fun.xml#fp" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;fp</a><br/>
&#160;&#160;&#160;<a href="sparse_jac_fun.xml#fp" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;fp</a><br/>
&#160;&#160;&#160;<a href="ode_evaluate.xml#fp" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;fp</a><br/>
free&#160;<a href="old_atomic.xml#Syntax Function.Free Static Memory" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function.Free&#xA0;Static&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_free_all.xml" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml" target="_top">Free&#xA0;Static&#xA0;Variables</a><br/>
free<b>_</b>available&#160;<a href="omp_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_hold_memory.xml#free_available" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use:&#160;free_available</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
freeing&#160;<a href="capacity_order.xml#c.Freeing Memory" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;c.Freeing&#xA0;Memory</a><br/>
frequently&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
from&#160;<a href="numerictype.xml#Constructor From Integer" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Constructor&#xA0;From&#xA0;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="integer.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="integer.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="value.xml" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="convert.xml" target="_top">Conversion&#xA0;and&#xA0;I/O&#xA0;of&#xA0;AD&#xA0;Objects</a><br/>
fun&#160;<a href="opt_val_hes.xml#Fun" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Fun</a><br/>
&#160;&#160;&#160;&#160;<a href="benderquad.xml#fun" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;fun</a><br/>
&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Fun" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Fun</a><br/>
&#160;&#160;&#160;&#160;<a href="odegear.xml#Fun" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Fun</a><br/>
&#160;&#160;&#160;&#160;<a href="rosen34.xml#Fun" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Fun</a><br/>
&#160;&#160;&#160;&#160;<a href="runge45.xml#Fun" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Fun</a><br/>
&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml#multi_newton_setup.fun" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;multi_newton_setup.fun</a><br/>
&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#fun" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;fun</a><br/>
&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml#fun" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;fun</a><br/>
fun<b>.</b>dy&#160;<a href="benderquad.xml#fun.fun.dy" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;fun.fun.dy</a><br/>
fun<b>.</b>ell&#160;<a href="opt_val_hes.xml#Fun.fun.ell" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Fun.fun.ell</a><br/>
fun<b>.</b>f&#160;<a href="benderquad.xml#fun.fun.f" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;fun.fun.f</a><br/>
fun<b>.</b>h&#160;<a href="benderquad.xml#fun.fun.h" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;fun.fun.h</a><br/>
fun<b>.</b>s&#160;<a href="opt_val_hes.xml#Fun.fun.s" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Fun.fun.s</a><br/>
fun<b>.</b>sy&#160;<a href="opt_val_hes.xml#Fun.fun.sy" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Fun.fun.sy</a><br/>
fun<b>::</b>ad<b>_</b>vector&#160;<a href="opt_val_hes.xml#Fun.Fun::ad_vector" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Fun.Fun::ad_vector</a><br/>
funcheck&#160;<a href="funcheck.xml#FunCheck Uses Forward" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;FunCheck&#xA0;Uses&#xA0;Forward</a><br/>
function&#160;<a href="old_mat_mul.hpp.xml#Declare mat_mul Function" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Declare&#xA0;mat_mul&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Example.Tangent Function" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Example.Tangent&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Syntax Function.Use Function" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function.Use&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Syntax Function" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Objective Function" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Objective&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Objective Function" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Objective&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Base Function" target="_top">Glossary:&#160;Base&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#AD Function" target="_top">Glossary:&#160;AD&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt_reverse.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_reverse.xml" target="_top">Logarithm&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_reverse.xml" target="_top">Exponential&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_forward.xml" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt_forward.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#fp.Function" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;fp.Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#fp.Function" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;fp.Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#fp.Function" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;fp.Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Derivatives of Outer Function" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Derivatives&#xA0;of&#xA0;Outer&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Outer Function" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Outer&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Inner Function" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Inner&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml#Function" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#160;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Purpose.Function Values" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose.Function&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#function" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Use Atomic Function" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#function" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#function" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#function" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#function" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#function" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#function" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_option.xml" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml" target="_top">Atomic&#xA0;Function&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Scalar Function" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Scalar&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.xml" target="_top">The&#xA0;Error&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#Mathematical Function" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;Mathematical&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Function" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Function</a><br/>
function<b>:</b>&#160;<a href="check_simple_vector.cpp.xml" target="_top">The&#xA0;CheckSimpleVector&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_numeric_type.cpp.xml" target="_top">The&#xA0;CheckNumericType&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="near_equal.cpp.xml" target="_top">NearEqual&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.cpp.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan2&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sign.cpp.xml" target="_top">Sign&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.cpp.xml" target="_top">The&#xA0;AD&#xA0;log1p&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.cpp.xml" target="_top">The&#xA0;AD&#xA0;erf&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;atanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;asinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;acosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;tanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan.cpp.xml" target="_top">The&#xA0;AD&#xA0;tan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt.cpp.xml" target="_top">The&#xA0;AD&#xA0;sqrt&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;sinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin.cpp.xml" target="_top">The&#xA0;AD&#xA0;sin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log10.cpp.xml" target="_top">The&#xA0;AD&#xA0;log10&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log.cpp.xml" target="_top">The&#xA0;AD&#xA0;log&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;cosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cos.cpp.xml" target="_top">The&#xA0;AD&#xA0;cos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin.cpp.xml" target="_top">The&#xA0;AD&#xA0;asin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos.cpp.xml" target="_top">The&#xA0;AD&#xA0;acos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan.xml" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt.xml" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sinh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin.xml" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log10.xml" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log.xml" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp.xml" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cos.xml" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.xml" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin.xml" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos.xml" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos</a><br/>
functions&#160;<a href="old_mat_mul.hpp.xml#CppAD User Atomic Callback Functions" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;CppAD&#xA0;User&#xA0;Atomic&#xA0;Callback&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="deprecated.xml#Atomic Functions" target="_top">CppAD&#xA0;Deprecated&#xA0;API&#xA0;Features:&#160;Atomic&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml#Standard Math Functions" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_double.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Functions&#xA0;in&#xA0;Double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Link Functions" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Link&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Atomic Functions" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Atomic&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funeval.xml" target="_top">Evaluate&#xA0;ADFun&#xA0;Functions,&#xA0;Derivatives,&#xA0;and&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml#Identical.Identical Functions" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;Identical.Identical&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolvalued.xml" target="_top">Bool&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions&#xA0;with&#xA0;AD&#xA0;Arguments</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Virtual Functions" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Virtual&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml" target="_top">Checkpointing&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic.xml" target="_top">Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml" target="_top">Discrete&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="binary_math.xml" target="_top">The&#xA0;Binary&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="advalued.xml" target="_top">AD&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions</a><br/>
functions<b>:</b>&#160;<a href="par_var.cpp.xml" target="_top">AD&#xA0;Parameter&#xA0;and&#xA0;Variable&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bool_fun.cpp.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs</a><br/>
future&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml#Future Use" target="_top">Free&#xA0;Static&#xA0;Variables:&#160;Future&#xA0;Use</a><br/>

<b><big><a name="G">G</a></big></b>
<br/>
Gear&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
g&#160;<a href="benderquad.xml#g" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;g</a><br/>
&#160;&#160;<a href="cppad_ipopt_nlp.xml#solution.g" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;solution.g</a><br/>
&#160;&#160;<a href="det_grad_33.xml#g" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;g</a><br/>
&#160;&#160;<a href="ipopt_solve.xml#solution.g" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;solution.g</a><br/>
&#160;&#160;<a href="funcheck.xml#g" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;g</a><br/>
&#160;&#160;<a href="atomic_reverse.xml#G, H" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;G,&#xA0;H</a><br/>
g<b>_</b>l&#160;<a href="cppad_ipopt_nlp.xml#g_l" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;g_l</a><br/>
g<b>_</b>u&#160;<a href="cppad_ipopt_nlp.xml#g_u" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;g_u</a><br/>
gear&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
gear<b>'</b>s&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Gear's Method" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Gear's&#xA0;Method</a><br/>
general&#160;<a href="zdouble.xml#Motivation.General" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Motivation.General</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="general.xml" target="_top">General&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#General Numerical Routines" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;General&#xA0;Numerical&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#General Case" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;General&#xA0;Case</a><br/>
generator&#160;<a href="cmake.xml#generator" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;generator</a><br/>
get&#160;<a href="omp_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_num_threads.xml" target="_top">Get&#xA0;Number&#xA0;of&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
get<b>_</b>adolc&#160;<a href="adolc_prefix.xml#get_adolc" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;get_adolc</a><br/>
get<b>_</b>check<b>_</b>for<b>_</b>nan&#160;<a href="check_for_nan.xml#get_check_for_nan" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;get_check_for_nan</a><br/>
get<b>_</b>colpack&#160;<a href="colpack_prefix.xml#get_colpack" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations:&#160;get_colpack</a><br/>
get<b>_</b>eigen&#160;<a href="eigen_prefix.xml#get_eigen" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;get_eigen</a><br/>
get<b>_</b>fadbad&#160;<a href="fadbad_prefix.xml#get_fadbad" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests:&#160;get_fadbad</a><br/>
get<b>_</b>ipopt&#160;<a href="ipopt_prefix.xml#get_ipopt" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests:&#160;get_ipopt</a><br/>
get<b>_</b>max<b>_</b>num<b>_</b>threads&#160;<a href="omp_max_num_threads.xml#get_max_num_threads" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;get_max_num_threads</a><br/>
get<b>_</b>sacado&#160;<a href="sacado_prefix.xml#get_sacado" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests:&#160;get_sacado</a><br/>
get<b>_</b>started&#160;<a href="ipopt_solve.xml#Example.get_started" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Example.get_started</a><br/>
get<b>_</b>thread<b>_</b>num&#160;<a href="omp_get_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number</a><br/>
getting&#160;<a href="atomic_get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Getting Started" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Getting&#xA0;Started</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
git&#160;<a href="download.xml#Current Version.Git" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Current&#xA0;Version.Git</a><br/>
github&#160;<a href="download.xml#Release Versions.github" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Release&#xA0;Versions.github</a><br/>
gl&#160;<a href="ipopt_solve.xml#gl" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;gl</a><br/>
global&#160;<a href="speed_main.xml#Global Options" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Global&#xA0;Options</a><br/>
gradient&#160;<a href="sacado_ode.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#fp.Gradient" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;fp.Gradient</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#gradient" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;gradient</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#gradient" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;gradient</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;LU&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="conj_grad.cpp.xml" target="_top">Differentiate&#xA0;Conjugate&#xA0;Gradient&#xA0;Algorithm:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
grid&#160;<a href="ipopt_nlp_ode_problem.xml#Trapezoidal Approximation.Trapezoidal Time Grid" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Trapezoidal&#xA0;Approximation.Trapezoidal&#xA0;Time&#xA0;Grid</a><br/>
gu&#160;<a href="ipopt_solve.xml#gu" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;gu</a><br/>
guidelines&#160;<a href="wish_list.xml#Software Guidelines" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Software&#xA0;Guidelines</a><br/>
gx&#160;<a href="benderquad.xml#gx" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;gx</a><br/>
gxx&#160;<a href="benderquad.xml#gxx" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;gxx</a><br/>

<b><big><a name="H">H</a></big></b>
<br/>
HesLagrangian&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
Hessian&#160;<a href="sparse_hessian.cpp.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.cpp.xml" target="_top">Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
h&#160;<a href="forsparsehes.xml#h" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;h</a><br/>
&#160;&#160;<a href="revsparsehes.xml#h" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;h</a><br/>
&#160;&#160;<a href="atomic_for_sparse_hes.xml#Implementation.h" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.h</a><br/>
&#160;&#160;<a href="atomic_reverse.xml#G, H" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;G,&#xA0;H</a><br/>
handler&#160;<a href="cppad_assert.xml#Error Handler" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Error&#xA0;Handler</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_handler.cpp.xml" target="_top">Replacing&#xA0;The&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#handler" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;handler</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Error Handler" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Error&#xA0;Handler</a><br/>
handler<b>:</b>&#160;<a href="error_handler.cpp.xml" target="_top">Replacing&#xA0;The&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
harmonic&#160;<a href="harmonic.cpp.xml" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#harmonic" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;harmonic</a><br/>
harmonic<b>_</b>combine&#160;<a href="harmonic_work.cpp.xml#harmonic_combine" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines:&#160;harmonic_combine</a><br/>
harmonic<b>_</b>setup&#160;<a href="harmonic_work.cpp.xml#harmonic_setup" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines:&#160;harmonic_setup</a><br/>
harmonic<b>_</b>time&#160;<a href="harmonic_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
harmonic<b>_</b>work&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
harmonic<b>_</b>worker&#160;<a href="harmonic_work.cpp.xml#harmonic_worker" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines:&#160;harmonic_worker</a><br/>
has&#160;<a href="sparse_hes_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian</a><br/>
hash&#160;<a href="base_hash.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values</a><br/>
hash<b>_</b>code&#160;<a href="base_adolc.hpp.xml#hash_code" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;hash_code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#hash_code" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;hash_code</a><br/>
hasnan&#160;<a href="nan.xml#hasnan" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;hasnan</a><br/>
head&#160;<a href="tracknewdel.xml#head newptr" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;head&#xA0;newptr</a><br/>
here&#160;<a href="preprocessor.xml#Documented Here" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Documented&#xA0;Here</a><br/>
hes&#160;<a href="opt_val_hes.xml#hes" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;hes</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#hes" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;hes</a><br/>
&#160;&#160;&#160;&#160;<a href="hessian.xml#hes" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;hes</a><br/>
hessian&#160;<a href="opt_val_hes.xml" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="benderquad.xml" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_sparse_hessian.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_sparse_hessian.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_hessian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_hessian.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_hessian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#fp.Hessian" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;fp.Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#hessian" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_sub_hes.cpp.xml" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#Subset Hessian" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;Subset&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml#Hessian Uses Forward" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;Hessian&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_hes.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_hes.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_times_dir.cpp.xml" target="_top">Hessian&#xA0;Times&#xA0;Direction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#Hessian Times Direction" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Hessian&#xA0;Times&#xA0;Direction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Hessian Sparsity Patterns" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_hes.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
hessian<b>:</b>&#160;<a href="sparse_hessian.cpp.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.cpp.xml" target="_top">Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml" target="_top">Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
hold&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
hold<b>_</b>memory&#160;<a href="multi_thread.xml#hold_memory" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;hold_memory</a><br/>
hyperbolic&#160;<a href="tan_reverse.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_reverse.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sinh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh</a><br/>

<b><big><a name="I">I</a></big></b>
<br/>
Integer&#160;<a href="integer.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
Ipopt&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
i<b>(</b>k<br/>
&#160;&#160;&#160;&#160;&#160;0<b>)</b>&#160;<a href="ipopt_nlp_ode_fast.xml#Trapezoidal Approximation.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;0<b>)</b>&#160;<a href="ipopt_nlp_ode_fast.xml#Initial Condition.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Initial&#xA0;Condition.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;0<b>)</b>&#160;<a href="ipopt_nlp_ode_fast.xml#Objective Function.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Objective&#xA0;Function.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
i<b>/</b>o&#160;<a href="convert.xml" target="_top">Conversion&#xA0;and&#xA0;I/O&#xA0;of&#xA0;AD&#xA0;Objects</a><br/>
id&#160;<a href="old_atomic.xml#id" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;id</a><br/>
identical&#160;<a href="base_complex.hpp.xml#Identical" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Identical</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#Identical" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;Identical</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#Identical" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;Identical</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Identical" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Identical</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Identical" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Identical</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml#Identical.Identical Functions" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;Identical.Identical&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml#Identical" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;Identical</a><br/>
identically&#160;<a href="base_identical.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
identicalpar&#160;<a href="base_identical.xml#Identical.IdenticalPar" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;Identical.IdenticalPar</a><br/>
identity&#160;<a href="reverse_identity.xml" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity</a><br/>
if&#160;<a href="omp_efficient.xml" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use</a><br/>
&#160;&#160;&#160;<a href="nan.xml" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan</a><br/>
&#160;&#160;&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
if<b>_</b>false&#160;<a href="condexp.xml#if_false" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;if_false</a><br/>
if<b>_</b>true&#160;<a href="condexp.xml#if_true" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;if_true</a><br/>
implementation&#160;<a href="old_atomic.xml#Partial Implementation" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Partial&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_poly.cpp.xml#Implementation" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_ode.cpp.xml#Implementation" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_mat_mul.cpp.xml#Implementation" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml#Implementation" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml#Implementation" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml#Implementation" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_ode.cpp.xml#Implementation" target="_top">Fadbad&#xA0;Speed:&#xA0;Ode:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml#Implementation" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml#Implementation" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml#Implementation" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_jacobian.cpp.xml#Implementation" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_hessian.cpp.xml#Implementation" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml#Implementation" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml#Implementation" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_mat_mul.cpp.xml#Implementation" target="_top">CppAD&#xA0;Speed,&#xA0;Matrix&#xA0;Multiplication:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml#Implementation" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml#Implementation" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_jacobian.cpp.xml#Implementation" target="_top">adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_hessian.cpp.xml#Implementation" target="_top">Adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml#Implementation" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_ode.cpp.xml#Implementation" target="_top">Adolc&#xA0;Speed:&#xA0;Ode:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml#Implementation" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml#Implementation" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml#Implementation" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_jacobian.cpp.xml#Implementation" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_hessian.cpp.xml#Implementation" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_poly.cpp.xml#Implementation" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_ode.cpp.xml#Implementation" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml#Implementation" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version):&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml#Implementation" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml#Implementation" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_pthread.cpp.xml" target="_top">Pthread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_bthread.cpp.xml" target="_top">Boost&#xA0;Thread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_openmp.cpp.xml" target="_top">OpenMP&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Speed Test of Implementation" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Speed&#xA0;Test&#xA0;of&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Example Implementation" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Example&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml#Implementation" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml#Implementation" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Implementation" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml#Implementation" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.xml#Implementation" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml#Implementation" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#atomic_user.Implementation" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_user.Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.hpp.xml" target="_top">exp_eps:&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#Implementation" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.hpp.xml" target="_top">exp_2:&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#Implementation" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;Implementation</a><br/>
implementations&#160;<a href="thread_test.cpp.xml#Team Implementations" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;Team&#xA0;Implementations</a><br/>
implicit&#160;<a href="ad_ctor.xml#x.implicit" target="_top">AD&#xA0;Constructors:&#160;x.implicit</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
important&#160;<a href="reverse_identity.xml" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity</a><br/>
in<b>_</b>parallel&#160;<a href="omp_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml#in_parallel" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment:&#160;in_parallel</a><br/>
inactive&#160;<a href="glossary.xml#Tape.Inactive" target="_top">Glossary:&#160;Tape.Inactive</a><br/>
inc&#160;<a href="speedtest.xml#inc" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;inc</a><br/>
include&#160;<a href="addon.xml#Include Files" target="_top">CppAD&#xA0;Addons:&#160;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luratio.xml#Include" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.cpp.xml#Include File" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Include&#xA0;File</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml#Include" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#Include" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="include_deprecated.xml" target="_top">Deprecated&#xA0;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml#Include Files" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#Include File" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Include&#xA0;File</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.xml#Include" target="_top">A&#xA0;Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Include" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Include" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Include" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Include" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Include" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Include" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml#Include" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml#Include" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml#Include" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#Include" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Include" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Include" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml#Include" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml#Include" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml#Include" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml#Include" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#Include" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Include" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#Include" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;Include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml#Include Files" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal:&#160;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#Include Order" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Include&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Include Files" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Include&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Include File" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Include&#xA0;File</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Include Order" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Include&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#include" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#include" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;include</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml#Include File" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms:&#160;Include&#xA0;File</a><br/>
including&#160;<a href="sacado_prefix.xml" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
inclusion&#160;<a href="uniform_01.xml#Inclusion" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#Inclusion" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#Inclusion" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Inclusion" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml#Inclusion" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml#Inclusion" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml#Inclusion" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml#Inclusion" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml#Inclusion" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Inclusion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#Inclusion" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;Inclusion</a><br/>
ind&#160;<a href="index_sort.xml#ind" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector:&#160;ind</a><br/>
independent&#160;<a href="omp_max_thread.xml#Independent" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup:&#160;Independent</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Tape.Independent Variable" target="_top">Glossary:&#160;Tape.Independent&#xA0;Variable</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Operation.Independent" target="_top">Glossary:&#160;Operation.Independent</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Independent Variables" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Independent&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Assignment and Independent" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Assignment&#xA0;and&#xA0;Independent</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.cpp.xml" target="_top">Independent&#xA0;and&#xA0;ADFun&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording</a><br/>
index&#160;<a href="cppad_ipopt_nlp.xml#fg(x).Index Vector" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg(x).Index&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.cpp.xml" target="_top">Index&#xA0;Sort:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml#Error Message.index" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Error&#xA0;Message.index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Result Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Result&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Right Operand Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Right&#xA0;Operand&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Left Operand Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Left&#xA0;Operand&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="tape_index.cpp.xml" target="_top">Taping&#xA0;Array&#xA0;Index&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#Index 2: f_1" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#Index 3: f_2" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#Index 4: f_3" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#Index 5: f_4" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#Index 6: f_5" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;6:&#xA0;f_5</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#Index 7: f_6" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;7:&#xA0;f_6</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence.Index" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 2: f_1" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 3: f_2" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 4: f_3" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 5: f_4" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 6: f_5" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;6:&#xA0;f_5</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Index 7: f_6" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Index&#xA0;7:&#xA0;f_6</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence.Index" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence.Index" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 2: f_1" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 3: f_2" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 4: f_3" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Index 5: f_4" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence.Index" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 2: f_1" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;2:&#xA0;f_1</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 3: f_2" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;3:&#xA0;f_2</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 4: f_3" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;4:&#xA0;f_3</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Index 5: f_4" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Index&#xA0;5:&#xA0;f_4</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence.Index" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Operation Sequence.Index" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Index</a><br/>
index<b>_</b>sort&#160;<a href="index_sort.cpp.xml" target="_top">Index&#xA0;Sort:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.xml" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector</a><br/>
indexing&#160;<a href="old_mat_mul.hpp.xml#Matrix Indexing" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Matrix&#xA0;Indexing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#AD Indexing" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;AD&#xA0;Indexing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#size_t Indexing" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;size_t&#xA0;Indexing</a><br/>
indices&#160;<a href="ipopt_nlp_ode_fast.xml#Trapezoidal Approximation.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Trapezoidal Approximation.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Initial Condition.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Initial&#xA0;Condition.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Initial Condition.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Initial&#xA0;Condition.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Objective Function.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Objective&#xA0;Function.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Objective Function.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Objective&#xA0;Function.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.xml" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Sorting Indices" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Sorting&#xA0;Indices</a><br/>
info&#160;<a href="errorhandler.xml#info" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;info</a><br/>
information&#160;<a href="old_mat_mul.hpp.xml#Extra Call Information" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Extra&#xA0;Call&#xA0;Information</a><br/>
initial&#160;<a href="ipopt_nlp_ode_fast.xml#Initial Condition" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Initial&#xA0;Condition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Initial Condition Constraint" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Initial&#xA0;Condition&#xA0;Constraint</a><br/>
initialization&#160;<a href="multi_thread.xml#Initialization" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;Initialization</a><br/>
initialize&#160;<a href="ta_parallel_setup.xml" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment</a><br/>
injection&#160;<a href="cppad_ipopt_nlp.xml#fg(x).Injection" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg(x).Injection</a><br/>
inline&#160;<a href="base_hash.xml#inline" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values:&#160;inline</a><br/>
inner&#160;<a href="mul_level.xml#Procedure.Inner Function" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Inner&#xA0;Function</a><br/>
input&#160;<a href="index_sort.xml#ind.Input" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector:&#160;ind.Input</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
inside&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
install&#160;<a href="auto_tools.xml#make install" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;make&#xA0;install</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Install Instructions" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Install&#xA0;Instructions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions</a><br/>
&#160;&#160;&#160;&#160;&#160;eigen&#160;<a href="get_eigen.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;fadbad&#160;<a href="get_fadbad.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;ipopt&#160;<a href="get_ipopt.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;sacado&#160;<a href="get_sacado.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
installation&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions.Step 4: Installation" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;4:&#xA0;Installation</a><br/>
instructions&#160;<a href="download.xml#Install Instructions" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Install&#xA0;Instructions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="install.xml" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions</a><br/>
int&#160;<a href="pow_int.cpp.xml" target="_top">The&#xA0;Pow&#xA0;Integer&#xA0;Exponent:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="numerictype.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type</a><br/>
integer&#160;<a href="ipopt_solve.xml#options.Integer" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;options.Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#s.Integer" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;s.Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#value.Integer" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;value.Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.cpp.xml" target="_top">The&#xA0;Pow&#xA0;Integer&#xA0;Exponent:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Constructor From Integer" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Constructor&#xA0;From&#xA0;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#Integer" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#Integer" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#Integer" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Integer" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Integer" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Integer" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Integer</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer</a><br/>
integer<b>:</b>&#160;<a href="integer.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
integrate&#160;<a href="rombergmul.xml" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration</a><br/>
integration&#160;<a href="rombergmul.xml" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration</a><br/>
integration<b>:</b>&#160;<a href="rombergmul.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="romberg_one.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
interface&#160;<a href="cppad_ipopt_nlp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Iterator Interface" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Iterator&#xA0;Interface</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interface2c.cpp.xml" target="_top">Interfacing&#xA0;to&#xA0;C:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_fun.cpp.xml" target="_top">Creating&#xA0;Your&#xA0;Own&#xA0;Interface&#xA0;to&#xA0;an&#xA0;ADFun&#xA0;Object</a><br/>
interfacing&#160;<a href="interface2c.cpp.xml" target="_top">Interfacing&#xA0;to&#xA0;C:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
internal&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
interpolate&#160;<a href="interp_retape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
interpolation&#160;<a href="interp_retape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
interpreter&#160;<a href="stack_machine.cpp.xml" target="_top">Example&#xA0;Differentiating&#xA0;a&#xA0;Stack&#xA0;Machine&#xA0;Interpreter</a><br/>
introduction&#160;<a href="test_vector.xml#Introduction" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_03.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2003:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_04.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2004:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_06.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2006:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_07.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2007:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_08.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_09.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2009:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_10.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2010:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_11.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_12.xml#Introduction" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2012:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_13.xml#Introduction" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2013:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_14.xml#Introduction" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2014:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_15.xml#Introduction" target="_top">CppAD&#xA0;Changes&#xA0;and&#xA0;Additions&#xA0;During&#xA0;2015:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_16.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2016:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new.xml#Introduction" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml#Introduction" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.xml#Introduction" target="_top">Examples:&#160;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml#Introduction" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms:&#160;Introduction</a><br/>
inuse&#160;<a href="memory_leak.xml#inuse" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;inuse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
invalid&#160;<a href="base_complex.hpp.xml#Invalid Unary Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Invalid&#xA0;Unary&#xA0;Math</a><br/>
inverse&#160;<a href="ipopt_nlp_ode_problem.hpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Inverse Problem" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode.xml" target="_top">Example&#xA0;Simultaneous&#xA0;Solution&#xA0;of&#xA0;Forward&#xA0;and&#xA0;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_reverse.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Matrix Inverse" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Matrix&#xA0;Inverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Inverse Problem" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.xml" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin.xml" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos.xml" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos</a><br/>
inverse<b>:</b>&#160;<a href="atomic_eigen_mat_inv.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
inversion&#160;<a href="atomic_eigen_mat_inv.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class</a><br/>
invert&#160;<a href="luinvert.xml" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Factor and Invert" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Factor&#xA0;and&#xA0;Invert</a><br/>
ip&#160;<a href="luratio.xml#ip" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;ip</a><br/>
&#160;&#160;&#160;<a href="luinvert.xml#ip" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;ip</a><br/>
&#160;&#160;&#160;<a href="lufactor.xml#ip" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;ip</a><br/>
ipopt&#160;<a href="ipopt_nlp_ode_run.hpp.xml" target="_top">Driver&#xA0;for&#xA0;Running&#xA0;the&#xA0;Ipopt&#xA0;ODE&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;download<b>&#xA0;</b>and<b>&#xA0;</b>install&#160;<a href="get_ipopt.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
ipopt<b>:</b>&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
ipopt<b>_</b>cppad<b>_</b>nlp&#160;<a href="whats_new_08.xml" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2008</a><br/>
ipopt<b>_</b>dir&#160;<a href="auto_tools.xml#ipopt_dir" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;ipopt_dir</a><br/>
ipopt<b>_</b>library<b>_</b>paths&#160;<a href="cppad_ipopt_nlp.xml#ipopt_library_paths" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;ipopt_library_paths</a><br/>
ipopt<b>_</b>prefix&#160;<a href="ipopt_prefix.xml#ipopt_prefix" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests:&#160;ipopt_prefix</a><br/>
ipopt<b>_</b>solve&#160;<a href="ipopt_solve_retape.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
is&#160;<a href="omp_efficient.xml" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use</a><br/>
&#160;&#160;&#160;<a href="omp_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;<a href="omp_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;<a href="ta_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;<a href="ta_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;<a href="nan.xml" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan</a><br/>
&#160;&#160;&#160;<a href="base_complex.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;</a><br/>
&#160;&#160;&#160;<a href="base_double.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double</a><br/>
&#160;&#160;&#160;<a href="base_float.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float</a><br/>
&#160;&#160;&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
&#160;&#160;&#160;<a href="parvar.xml" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable</a><br/>
&#160;&#160;&#160;<a href="ad_input.xml#is" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;is</a><br/>
isnan&#160;<a href="nan.xml#isnan" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;isnan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#isnan" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;isnan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#isnan" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;isnan</a><br/>
iteration&#160;<a href="ipopt_nlp_ode_problem.xml#Black Box Method.Two levels of Iteration" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Black&#xA0;Box&#xA0;Method.Two&#xA0;levels&#xA0;of&#xA0;Iteration</a><br/>
iterator&#160;<a href="wish_list.xml#Iterator Interface" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Iterator&#xA0;Interface</a><br/>
its&#160;<a href="ta_delete_array.xml" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_create_array.xml" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements</a><br/>
&#160;&#160;&#160;&#160;<a href="poly.xml" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative</a><br/>
&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="value.xml" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type</a><br/>
itself&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>

<b><big><a name="J">J</a></big></b>
<br/>
Jacobian&#160;<a href="sparse_jacobian.cpp.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.cpp.xml" target="_top">Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine</a><br/>
j&#160;<a href="revtwo.xml#j" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;j</a><br/>
&#160;&#160;<a href="fortwo.xml#j" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;j</a><br/>
&#160;&#160;<a href="forone.xml#j" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;j</a><br/>
j<b>(</b>k<br/>
&#160;&#160;&#160;&#160;&#160;0<b>)</b>&#160;<a href="ipopt_nlp_ode_fast.xml#Trapezoidal Approximation.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;0<b>)</b>&#160;<a href="ipopt_nlp_ode_fast.xml#Initial Condition.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Initial&#xA0;Condition.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;0<b>)</b>&#160;<a href="ipopt_nlp_ode_fast.xml#Objective Function.Domain Indices J(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Objective&#xA0;Function.Domain&#xA0;Indices&#xA0;J(k,0)</a><br/>
jac&#160;<a href="opt_val_hes.xml#jac" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;jac</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#jac" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;jac</a><br/>
&#160;&#160;&#160;&#160;<a href="jacobian.xml#jac" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine:&#160;jac</a><br/>
jacobian&#160;<a href="opt_val_hes.xml" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="benderquad.xml" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_jacobian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_jacobian.cpp.xml" target="_top">adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_jacobian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#fp.Jacobian" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;fp.Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml#jacobian" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#jacobian" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_jac.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_jac.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_jac.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
jacobian<b>:</b>&#160;<a href="sparse_jacobian.cpp.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.cpp.xml" target="_top">Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine</a><br/>
jp&#160;<a href="luratio.xml#jp" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;jp</a><br/>
&#160;&#160;&#160;<a href="luinvert.xml#jp" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;jp</a><br/>
&#160;&#160;&#160;<a href="lufactor.xml#jp" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;jp</a><br/>

<b><big><a name="K">K</a></big></b>
<br/>
Kutta&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
k&#160;<a href="old_atomic.xml#k" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;k</a><br/>
&#160;&#160;<a href="poly.xml#k" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;k</a><br/>
&#160;&#160;<a href="fortwo.xml#k" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;k</a><br/>
&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode.Case k &gt; 0" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode.Case&#xA0;k&#xA0;&gt;&#xA0;0</a><br/>
&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode.Case k = 0" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode.Case&#xA0;k&#xA0;=&#xA0;0</a><br/>
keys&#160;<a href="index_sort.xml#keys" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector:&#160;keys</a><br/>
known&#160;<a href="cppad_assert.xml#Known" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Known</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#known" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;known</a><br/>

<b><big><a name="L">L</a></big></b>
<br/>
Lu&#160;<a href="lusolve.xml" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations</a><br/>
LuFactor&#160;<a href="lu_factor.cpp.xml" target="_top">LuFactor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix</a><br/>
LuInvert&#160;<a href="lu_invert.cpp.xml" target="_top">LuInvert:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation</a><br/>
LuRatio&#160;<a href="lu_ratio.cpp.xml" target="_top">LuRatio:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
LuSolve&#160;<a href="lusolve.xml" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations</a><br/>
LuVecAD&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
l&#160;<a href="luratio.xml#LU.L" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;LU.L</a><br/>
&#160;&#160;<a href="luinvert.xml#LU.L" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;LU.L</a><br/>
&#160;&#160;<a href="lufactor.xml#LU.L" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;LU.L</a><br/>
&#160;&#160;<a href="hessian.xml#l" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;l</a><br/>
l<b>.</b>f<b>.</b>&#160;<a href="bib.xml#Shampine, L.F." target="_top">Bibliography:&#160;Shampine,&#xA0;L.F.</a><br/>
lagrangian&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
lambda&#160;<a href="cppad_ipopt_nlp.xml#solution.lambda" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;solution.lambda</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#solution.lambda" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;solution.lambda</a><br/>
language&#160;<a href="bib.xml#The C++ Programming Language" target="_top">Bibliography:&#160;The&#xA0;C++&#xA0;Programming&#xA0;Language</a><br/>
languages&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
large&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.Large x Values" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Large&#xA0;x&#xA0;Values</a><br/>
last&#160;<a href="speedtest.xml#last" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;last</a><br/>
leak&#160;<a href="memory_leak.xml" target="_top">Memory&#xA0;Leak&#xA0;Detection</a><br/>
least&#160;<a href="omp_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
left&#160;<a href="set_union.xml#left" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets:&#160;left</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Left Operand Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Left&#xA0;Operand&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#left" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;left</a><br/>
lemma&#160;<a href="cholesky_theory.xml#Lemma 2" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Lemma&#xA0;2</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Lemma 1" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Lemma&#xA0;1</a><br/>
leqzero&#160;<a href="lusolve.xml#LeqZero" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;LeqZero</a><br/>
level&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.cpp.xml" target="_top">Multiple&#xA0;Level&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Purpose.Multiple Level AD" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Multiple&#xA0;Level&#xA0;AD</a><br/>
levels&#160;<a href="ipopt_nlp_ode_problem.xml#Black Box Method.Two levels of Iteration" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Black&#xA0;Box&#xA0;Method.Two&#xA0;levels&#xA0;of&#xA0;Iteration</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
lib&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
library&#160;<a href="addon.xml#Library Files" target="_top">CppAD&#xA0;Addons:&#160;Library&#xA0;Files</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Library Routines" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Library&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
license&#160;<a href="license.xml" target="_top">Your&#xA0;License&#xA0;for&#xA0;the&#xA0;CppAD&#xA0;Software</a><br/>
limits&#160;<a href="base_limits.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Numeric&#xA0;Limits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types</a><br/>
limits<b>:</b>&#160;<a href="num_limits.cpp.xml" target="_top">Numeric&#xA0;Limits:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
line&#160;<a href="tracknewdel.xml#line" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;line</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#line" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;line</a><br/>
linear&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
link&#160;<a href="speed_main.xml#Link Functions" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Link&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
link<b>_</b>det<b>_</b>lu&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
link<b>_</b>det<b>_</b>minor&#160;<a href="sacado_det_minor.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
link<b>_</b>mat<b>_</b>mul&#160;<a href="sacado_mat_mul.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed,&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply</a><br/>
link<b>_</b>ode&#160;<a href="sacado_ode.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_ode.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_ode.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_ode.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
link<b>_</b>poly&#160;<a href="sacado_poly.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_poly.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
link<b>_</b>sparse<b>_</b>hessian&#160;<a href="cppad_sparse_hessian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_hessian.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_hessian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian</a><br/>
link<b>_</b>sparse<b>_</b>jacobian&#160;<a href="cppad_sparse_jacobian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_jacobian.cpp.xml" target="_top">adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_jacobian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian</a><br/>
linking&#160;<a href="include_deprecated.xml#Linking New Files to Deprecated Commands" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Linking&#xA0;New&#xA0;Files&#xA0;to&#xA0;Deprecated&#xA0;Commands</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="microsoft_timer.xml#Linking" target="_top">Microsoft&#xA0;Version&#xA0;of&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Linking</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
linux&#160;<a href="auto_tools.xml#adolc_dir.Linux" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;adolc_dir.Linux</a><br/>
list&#160;<a href="cppad_ipopt_nlp.xml#Wish List" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Wish&#xA0;List</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="listallexamples.xml" target="_top">List&#xA0;of&#xA0;All&#xA0;the&#xA0;CppAD&#xA0;Examples</a><br/>
log&#160;<a href="log.cpp.xml" target="_top">The&#xA0;AD&#xA0;log&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="log.xml" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log</a><br/>
log10&#160;<a href="log10.cpp.xml" target="_top">The&#xA0;AD&#xA0;log10&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="log10.xml" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10</a><br/>
log1p&#160;<a href="log_reverse.xml" target="_top">Logarithm&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#erf, asinh, acosh, atanh, expm1, log1p" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;erf,&#xA0;asinh,&#xA0;acosh,&#xA0;atanh,&#xA0;expm1,&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.cpp.xml" target="_top">The&#xA0;AD&#xA0;log1p&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.xml" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p</a><br/>
logarithm&#160;<a href="log_reverse.xml" target="_top">Logarithm&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.xml" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log10.xml" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10</a><br/>
logdet&#160;<a href="lu_vec_ad.cpp.xml#logdet" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;logdet</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#logdet" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;logdet</a><br/>
lower&#160;<a href="forward_dir.xml#Non-Zero Lower Orders" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Non-Zero&#xA0;Lower&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Notation.Lower Triangular Part" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Notation.Lower&#xA0;Triangular&#xA0;Part</a><br/>
lu&#160;<a href="luratio.xml#LU" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;LU</a><br/>
&#160;&#160;&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;<a href="det_by_lu.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="det_by_lu.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
&#160;&#160;&#160;<a href="jac_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="hes_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;LU&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;<a href="luinvert.xml#LU" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;LU</a><br/>
&#160;&#160;&#160;<a href="luinvert.xml" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation</a><br/>
&#160;&#160;&#160;<a href="lufactor.xml#LU" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;LU</a><br/>
&#160;&#160;&#160;<a href="lufactor.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix</a><br/>
&#160;&#160;&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
lufactor&#160;<a href="lu_factor.hpp.xml" target="_top">Source:&#xA0;LuFactor</a><br/>
lufactor<b>:</b>&#160;<a href="lu_factor.cpp.xml" target="_top">LuFactor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
luinvert&#160;<a href="lu_invert.hpp.xml" target="_top">Source:&#xA0;LuInvert</a><br/>
luinvert<b>:</b>&#160;<a href="lu_invert.cpp.xml" target="_top">LuInvert:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
luratio<b>:</b>&#160;<a href="lu_ratio.cpp.xml" target="_top">LuRatio:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
lusolve&#160;<a href="lu_solve.hpp.xml" target="_top">Source:&#xA0;LuSolve</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_solve.cpp.xml" target="_top">LuSolve&#xA0;With&#xA0;Complex&#xA0;Arguments:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>

<b><big><a name="M">M</a></big></b>
<br/>
m&#160;<a href="det_by_minor_c.xml#m" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;m</a><br/>
&#160;&#160;<a href="det_of_minor_c.xml#m" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;m</a><br/>
&#160;&#160;<a href="old_atomic.xml#m" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;m</a><br/>
&#160;&#160;<a href="cppad_ipopt_nlp.xml#m" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;m</a><br/>
&#160;&#160;<a href="adolc_alloc_mat.xml#m" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix:&#160;m</a><br/>
&#160;&#160;<a href="sparse_jac_fun.xml#m" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;m</a><br/>
&#160;&#160;<a href="det_of_minor.xml#m" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;m</a><br/>
&#160;&#160;<a href="link_sparse_jacobian.xml#m" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;m</a><br/>
&#160;&#160;<a href="lu_vec_ad.cpp.xml#m" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;m</a><br/>
&#160;&#160;<a href="odegearcontrol.xml#M" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;M</a><br/>
&#160;&#160;<a href="odegear.xml#m" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;m</a><br/>
&#160;&#160;<a href="rosen34.xml#M" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;M</a><br/>
&#160;&#160;<a href="runge45.xml#M" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;M</a><br/>
&#160;&#160;<a href="rombergmul.xml#m" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;m</a><br/>
&#160;&#160;<a href="lusolve.xml#m" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;m</a><br/>
&#160;&#160;<a href="forward_dir.xml#Notation.m" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Notation.m</a><br/>
&#160;&#160;<a href="forward_order.xml#Notation.m" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Notation.m</a><br/>
machine&#160;<a href="epsilon.xml" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="stack_machine.cpp.xml" target="_top">Example&#xA0;Differentiating&#xA0;a&#xA0;Stack&#xA0;Machine&#xA0;Interpreter</a><br/>
macro&#160;<a href="tracknewdel.xml#TrackCount.Macro" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackCount.Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackExtend.Macro" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackExtend.Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackDelVec.Macro" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackDelVec.Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackNewVec.Macro" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackNewVec.Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Boolean Operator Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Boolean&#xA0;Operator&#xA0;Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Binary Operator Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Binary&#xA0;Operator&#xA0;Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Computed Assignment Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Computed&#xA0;Assignment&#xA0;Macro</a><br/>
macros&#160;<a href="nan.xml#Include.Macros" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;Include.Macros</a><br/>
main&#160;<a href="main_compare_c.xml" target="_top">Main&#xA0;Program&#xA0;For&#xA0;Comparing&#xA0;C&#xA0;and&#xA0;C++&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Speed Main Program" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Speed&#xA0;Main&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction</a><br/>
main<b>.</b>cpp&#160;<a href="exp_apx_main.cpp.xml#main.cpp" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction:&#160;main.cpp</a><br/>
make&#160;<a href="auto_tools.xml#make install" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;make&#xA0;install</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#make" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;make</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#make check" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;make&#xA0;check</a><br/>
makefile&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
management&#160;<a href="mul_level_adolc_ode.cpp.xml#Memory Management" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Memory&#xA0;Management</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml#Memory Management" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Memory&#xA0;Management</a><br/>
mat&#160;<a href="adolc_alloc_mat.xml#mat" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix:&#160;mat</a><br/>
mat<b>_</b>mul&#160;<a href="old_mat_mul.hpp.xml#Declare mat_mul Function" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Declare&#xA0;mat_mul&#xA0;Function</a><br/>
mat<b>_</b>sum<b>_</b>sq&#160;<a href="mat_sum_sq.hpp.xml" target="_top">Source:&#xA0;mat_sum_sq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>
math&#160;<a href="zdouble.xml#Syntax.Standard Math" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml#Standard Math Functions" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#Invalid Unary Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Invalid&#xA0;Unary&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#Valid Unary Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Valid&#xA0;Unary&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Unary Standard Math" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#Unary Standard Math" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="binary_math.xml" target="_top">The&#xA0;Binary&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
mathematical&#160;<a href="exp_eps_rev2.xml#Mathematical Form" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Mathematical Form" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Mathematical Form" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Mathematical Form" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Mathematical Form" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#Mathematical Function" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;Mathematical&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Mathematical Form" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Mathematical Form" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Mathematical Form" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Mathematical Form" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Mathematical Form" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Mathematical&#xA0;Form</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#Mathematical Form" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;Mathematical&#xA0;Form</a><br/>
matrices&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Theory.Product of Three Matrices" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Theory.Product&#xA0;of&#xA0;Three&#xA0;Matrices</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Theory.Product of Two Matrices" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Theory.Product&#xA0;of&#xA0;Two&#xA0;Matrices</a><br/>
matrix&#160;<a href="luratio.xml#Matrix Storage" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;Matrix&#xA0;Storage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml#One Matrix Multiply" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;One&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml#Matrix Indexing" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Matrix&#xA0;Indexing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.cpp.xml" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Example.Matrix Multiplication" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Example.Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Matrix Inverse" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Matrix&#xA0;Inverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_mat_mul.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed,&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#matrix" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#matrix" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml#Matrix" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml#Matrix Storage" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;Matrix&#xA0;Storage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#Matrix Storage" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;Matrix&#xA0;Storage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Matrix Storage" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Matrix&#xA0;Storage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Reverse Matrix Multiply" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Reverse&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Forward Matrix Multiply" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Forward&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Matrix Dimensions" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Matrix&#xA0;Dimensions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Matrix Dimensions" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Matrix&#xA0;Dimensions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Matrix Dimensions" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Matrix&#xA0;Dimensions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
matrix<b>:</b>&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
max&#160;<a href="numeric_limits.xml#max" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;max</a><br/>
max<b>_</b>itr&#160;<a href="multi_newton_work.cpp.xml#max_itr" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;max_itr</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#max_itr" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;max_itr</a><br/>
max<b>_</b>num<b>_</b>threads&#160;<a href="old_max_num_threads.xml" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#max_num_threads" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;max_num_threads</a><br/>
max<b>_</b>threads&#160;<a href="thread_test.cpp.xml#multi_newton.max_threads" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;multi_newton.max_threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#harmonic.max_threads" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;harmonic.max_threads</a><br/>
maxabs&#160;<a href="odegearcontrol.xml#maxabs" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;maxabs</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_err_maxabs.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;Using&#xA0;Maxabs&#xA0;Argument</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#maxabs" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;maxabs</a><br/>
maximum&#160;<a href="old_max_num_threads.xml" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
measurement&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulated Measurement Values" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulated&#xA0;Measurement&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulated Measurement Values" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulated&#xA0;Measurement&#xA0;Values</a><br/>
measurements&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements</a><br/>
mega<b>_</b>sum&#160;<a href="harmonic_time.cpp.xml#mega_sum" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;mega_sum</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#harmonic.mega_sum" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;harmonic.mega_sum</a><br/>
member&#160;<a href="fundeprecated.xml" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions</a><br/>
memory&#160;<a href="old_atomic.xml#Syntax Function.Free Static Memory" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function.Free&#xA0;Static&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="memory_leak.xml" target="_top">Memory&#xA0;Leak&#xA0;Detection</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.cpp.xml" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_efficient.xml" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Memory" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Tape Storage: Disk or Memory" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Tape&#xA0;Storage:&#xA0;Disk&#xA0;or&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Speed.Memory Allocation" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Speed.Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Global Options.memory" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Global&#xA0;Options.memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Memory Management" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Memory&#xA0;Management</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_all.xml" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml#Purpose.Extra Memory" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Purpose.Extra&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.xml" target="_top">A&#xA0;Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Memory and Parallel Mode" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Memory&#xA0;and&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#vectorBool.Memory" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;vectorBool.Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Multi-Threading Memory Allocation" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Multi-Threading&#xA0;Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.cpp.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficient&#xA0;Memory&#xA0;Allocation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml#c.Freeing Memory" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;c.Freeing&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml#c.Pre-Allocating Memory" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;c.Pre-Allocating&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml#Memory Management" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Memory&#xA0;Management</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#Speed and Memory" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;Speed&#xA0;and&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Purpose.Reduce Memory" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Reduce&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
memory<b>:</b>&#160;<a href="bool_sparsity.cpp.xml" target="_top">Using&#xA0;vectorBool&#xA0;Sparsity&#xA0;To&#xA0;Conserve&#xA0;Memory:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
memory<b>_</b>leak&#160;<a href="memory_leak.xml" target="_top">Memory&#xA0;Leak&#xA0;Detection</a><br/>
message&#160;<a href="memory_leak.xml#Error Message" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;Error&#xA0;Message</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml#Error Message" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Error&#xA0;Message</a><br/>
method&#160;<a href="ipopt_nlp_ode_problem.xml#Simultaneous Method" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Simultaneous&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Black Box Method" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Black&#xA0;Box&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml#Method" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#Method" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml#Method" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#Method" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#Method" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#Method" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Taylor's Method Using AD" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor's&#xA0;Method&#xA0;Using&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Taylor's Method Using AD" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor's&#xA0;Method&#xA0;Using&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Solution Method" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Solution&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Gear's Method" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Gear's&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Method" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#Method" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Method" target="_top">Checkpointing&#xA0;Functions:&#160;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log10.xml#Method" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10:&#160;Method</a><br/>
microsoft&#160;<a href="microsoft_timer.xml" target="_top">Microsoft&#xA0;Version&#xA0;of&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml#Microsoft Systems" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Microsoft&#xA0;Systems</a><br/>
min&#160;<a href="numeric_limits.xml#min" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;min</a><br/>
min<b>_</b>bytes&#160;<a href="omp_get_memory.xml#min_bytes" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;min_bytes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#min_bytes" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;min_bytes</a><br/>
minor&#160;<a href="det_of_minor_c.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
minor<b>:</b>&#160;<a href="det_of_minor.cpp.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
minors&#160;<a href="det_by_minor_c.xml" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
minors<b>:</b>&#160;<a href="det_by_minor.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
minus&#160;<a href="expm1.xml" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_minus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator</a><br/>
miscellaneous&#160;<a href="utility.xml#Miscellaneous" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous</a><br/>
mode&#160;<a href="old_atomic.xml#afun.Parallel Mode" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;afun.Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Forward Mode Recomputation" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Forward&#xA0;Mode&#xA0;Recomputation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_identity.xml" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atan_reverse.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sqrt_reverse.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="log_reverse.xml" target="_top">Logarithm&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_reverse.xml" target="_top">Exponential&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sqrt_forward.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml#Forward Mode" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test:&#160;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Memory and Parallel Mode" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Memory&#xA0;and&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Parallel Mode" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Parallel Mode" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml#Parallel Mode" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml#Parallel Mode" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#Constructor.Parallel Mode" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;Constructor.Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_hes.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_hes.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_jac.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_jac.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse.xml" target="_top">Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Reverse Mode" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward.xml" target="_top">Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml#Parallel Mode" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Parallel Mode" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Parallel Mode" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Forward Mode" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml" target="_top">Atomic&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Parallel Mode" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Reverse Mode" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Forward Mode" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Forward&#xA0;Mode</a><br/>
mode<b>:</b>&#160;<a href="faq.xml#Mode: Forward or Reverse" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Mode:&#xA0;Forward&#xA0;or&#xA0;Reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_three.cpp.xml" target="_top">Third&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_string.cpp.xml" target="_top">Print&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
modeexample&#160;<a href="reverse_two.cpp.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;ModeExample&#xA0;and&#xA0;Test</a><br/>
monthly&#160;<a href="download.xml#Monthly Versions" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Monthly&#xA0;Versions</a><br/>
more&#160;<a href="base_identical.xml#EqualOpSeq.More Complicated Cases" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;EqualOpSeq.More&#xA0;Complicated&#xA0;Cases</a><br/>
motivation&#160;<a href="zdouble.xml#Motivation" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Motivation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Motivation" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Motivation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#Motivation" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;Motivation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Motivation" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Motivation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#Motivation" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;Motivation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml#Motivation" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal:&#160;Motivation</a><br/>
move&#160;<a href="cppad_vector.xml#Assignment.Move Semantics" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Assignment.Move&#xA0;Semantics</a><br/>
ms&#160;<a href="test_vector.xml#MS Windows" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;MS&#xA0;Windows</a><br/>
msg&#160;<a href="cppad_assert.xml#Msg" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Msg</a><br/>
&#160;&#160;&#160;&#160;<a href="errorhandler.xml#msg" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;msg</a><br/>
mul<b>_</b>level<br/>
&#160;&#160;&#160;&#160;&#160;checkpoint&#160;<a href="checkpoint_extended_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
multi&#160;<a href="omp_alloc.cpp.xml" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
multi<b>-</b>dimensional&#160;<a href="rombergmul.xml" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration</a><br/>
multi<b>-</b>level&#160;<a href="mul_level_adolc_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
multi<b>-</b>thread&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
multi<b>-</b>threaded&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
multi<b>-</b>threading&#160;<a href="omp_alloc.xml" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#Multi-Threading" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;Multi-Threading</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.xml" target="_top">A&#xA0;Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Multi-Threading Memory Allocation" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Multi-Threading&#xA0;Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment</a><br/>
multi<b>_</b>newton&#160;<a href="multi_newton.cpp.xml" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#multi_newton" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;multi_newton</a><br/>
multi<b>_</b>newton<b>_</b>combine&#160;<a href="multi_newton_work.cpp.xml#multi_newton_combine" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;multi_newton_combine</a><br/>
multi<b>_</b>newton<b>_</b>setup&#160;<a href="multi_newton_work.cpp.xml#multi_newton_setup" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;multi_newton_setup</a><br/>
multi<b>_</b>newton<b>_</b>time&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
multi<b>_</b>newton<b>_</b>work&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
multi<b>_</b>newton<b>_</b>worker&#160;<a href="multi_newton_work.cpp.xml#multi_newton_worker" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;multi_newton_worker</a><br/>
multi<b>_</b>thread&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
multiple&#160;<a href="link_mat_mul.xml" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.cpp.xml" target="_top">Multiple&#xA0;Level&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse.xml#Multiple Directions" target="_top">Reverse&#xA0;Mode:&#160;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#yq.Multiple Orders" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;yq.Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#xq.Multiple Orders" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;xq.Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Purpose.Multiple Level AD" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Multiple&#xA0;Level&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
multiple<b>-</b>levels&#160;<a href="atomic_mul_level.cpp.xml" target="_top">Atomic&#xA0;Operations&#xA0;and&#xA0;Multiple-Levels&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
multiplication&#160;<a href="old_atomic.xml#Example.Matrix Multiplication" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Example.Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml#Binary Operators.Multiplication" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Binary&#xA0;Operators.Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Binary Operators.Multiplication" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Binary&#xA0;Operators.Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_mat_mul.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed,&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="azmul.xml" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Derivative.Multiplication" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Derivative.Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Derivative.Multiplication" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Derivative.Multiplication</a><br/>
multiplication<b>:</b>&#160;<a href="azmul.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Zero&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
multiply&#160;<a href="old_mat_mul.hpp.xml#One Matrix Multiply" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;One&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.cpp.xml" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_mat_mul.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed,&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Reverse Matrix Multiply" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Reverse&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Forward Matrix Multiply" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Forward&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
multiply<b>:</b>&#160;<a href="atomic_mat_mul.cpp.xml" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>

<b><big><a name="N">N</a></big></b>
<br/>
NDEBUG&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
NearEqual&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal</a><br/>
NearEqualExt&#160;<a href="near_equal_ext.cpp.xml" target="_top">Compare&#xA0;AD&#xA0;with&#xA0;Base&#xA0;Objects:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
NULL&#160;<a href="preprocessor.xml" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols</a><br/>
NumericType&#160;<a href="check_numeric_type.cpp.xml" target="_top">The&#xA0;CheckNumericType&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_type.cpp.xml" target="_top">The&#xA0;NumericType:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
n<b>_</b>sweep&#160;<a href="link_sparse_jacobian.xml#n_sweep" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;n_sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#n_sweep" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;n_sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Speed Results.n_sweep" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Speed&#xA0;Results.n_sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#n_sweep" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;n_sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#n_sweep" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;n_sweep</a><br/>
name&#160;<a href="addon.xml#Name" target="_top">CppAD&#xA0;Addons:&#160;Name</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Test.name" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Test.name</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="near_equal.cpp.xml#File Name" target="_top">NearEqual&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test:&#160;File&#xA0;Name</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#atomic_base.name" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_base.name</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#name" target="_top">Checkpointing&#xA0;Functions:&#160;name</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#name" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;name</a><br/>
namespace&#160;<a href="addon.xml#Namespace" target="_top">CppAD&#xA0;Addons:&#160;Namespace</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#cppad_ipopt namespace" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;cppad_ipopt&#xA0;namespace</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Namespace" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Namespace</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml#CppAD Namespace" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;CppAD&#xA0;Namespace</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml#Namespace" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms:&#160;Namespace</a><br/>
nan&#160;<a href="zdouble.xml#Syntax.Nan" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Nan</a><br/>
&#160;&#160;&#160;&#160;<a href="ode_err_control.cpp.xml#Nan" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Nan</a><br/>
&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Method.Nan" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Method.Nan</a><br/>
&#160;&#160;&#160;&#160;<a href="rosen34.xml#Fun.Nan" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Fun.Nan</a><br/>
&#160;&#160;&#160;&#160;<a href="nan.xml" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan</a><br/>
&#160;&#160;&#160;&#160;<a href="nan.xml" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan</a><br/>
&#160;&#160;&#160;&#160;<a href="check_for_nan.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;<a href="optimize.xml#Atomic Functions.nan" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Atomic&#xA0;Functions.nan</a><br/>
nan<b>(</b>zero<b>)</b>&#160;<a href="nan.xml#nan(zero)" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;nan(zero)</a><br/>
nan<b>:</b>&#160;<a href="nan.cpp.xml" target="_top">nan:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.cpp.xml" target="_top">ADFun&#xA0;Checking&#xA0;For&#xA0;Nan:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
ncopy&#160;<a href="tracknewdel.xml#ncopy" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;ncopy</a><br/>
ndebug&#160;<a href="omp_efficient.xml#NDEBUG" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use:&#160;NDEBUG</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml#NDEBUG" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc:&#160;NDEBUG</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Speed.NDEBUG" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Speed.NDEBUG</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml#NDEBUG" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc:&#160;NDEBUG</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml#NDEBUG" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;NDEBUG</a><br/>
near&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
nearequal&#160;<a href="near_equal.cpp.xml" target="_top">NearEqual&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
nearly&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal</a><br/>
nested&#160;<a href="optimize_nest_conditional.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Nested&#xA0;Conditional&#xA0;Expressions</a><br/>
new&#160;<a href="tracknewdel.cpp.xml" target="_top">Tracking&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
&#160;&#160;&#160;&#160;<a href="include_deprecated.xml#Linking New Files to Deprecated Commands" target="_top">Deprecated&#xA0;Include&#xA0;Files:&#160;Linking&#xA0;New&#xA0;Files&#xA0;to&#xA0;Deprecated&#xA0;Commands</a><br/>
newlen&#160;<a href="tracknewdel.xml#newlen" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;newlen</a><br/>
newptr&#160;<a href="tracknewdel.xml#head newptr" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;head&#xA0;newptr</a><br/>
newton&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
newton<b>'</b>s&#160;<a href="multi_newton.cpp.xml" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method</a><br/>
no&#160;<a href="download.xml#No Documentation" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;No&#xA0;Documentation</a><br/>
no<b>_</b>compare<b>_</b>op&#160;<a href="optimize.xml#options.no_compare_op" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;options.no_compare_op</a><br/>
no<b>_</b>conditional<b>_</b>skip&#160;<a href="optimize.xml#options.no_conditional_skip" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;options.no_conditional_skip</a><br/>
no<b>_</b>print<b>_</b>for<b>_</b>op&#160;<a href="optimize.xml#options.no_print_for_op" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;options.no_print_for_op</a><br/>
non<b>-</b>zero&#160;<a href="forward_dir.xml#Non-Zero Lower Orders" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Non-Zero&#xA0;Lower&#xA0;Orders</a><br/>
nonlinear&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_retape.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem</a><br/>
norm&#160;<a href="atomic_norm_sq.cpp.xml" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
not&#160;<a href="base_example.xml" target="_top">Example&#xA0;AD&#xA0;Base&#xA0;Types&#xA0;That&#xA0;are&#xA0;not&#xA0;AD&lt;OtherBase&gt;</a><br/>
&#160;&#160;&#160;&#160;<a href="base_ordered.xml#Not Ordered" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons:&#160;Not&#xA0;Ordered</a><br/>
&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml#CondExpTemplate.Not Ordered" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions:&#160;CondExpTemplate.Not&#xA0;Ordered</a><br/>
notation&#160;<a href="ipopt_nlp_ode_problem.xml#Notation" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_identity.xml#Notation" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml#Notation" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml#Notation" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml#Taylor Notation" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Taylor&#xA0;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Taylor Notation" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Taylor&#xA0;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Notation" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Notation" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#Notation" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Notation" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Notation" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Notation" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Notation" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Notation</a><br/>
nstep&#160;<a href="odegearcontrol.xml#nstep" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;nstep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#nstep" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;nstep</a><br/>
num<b>_</b>bytes&#160;<a href="omp_efficient.xml#num_bytes" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use:&#160;num_bytes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml#num_bytes" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;num_bytes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml#num_bytes" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;num_bytes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml#num_bytes" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;num_bytes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml#num_bytes" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;num_bytes</a><br/>
num<b>_</b>sub&#160;<a href="multi_newton_work.cpp.xml#multi_newton_setup.num_sub" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;multi_newton_setup.num_sub</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml#num_sub" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;num_sub</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#num_sub" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;num_sub</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#multi_newton.num_sub" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;multi_newton.num_sub</a><br/>
num<b>_</b>sum&#160;<a href="multi_newton_time.cpp.xml#num_sum" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;num_sum</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml#harmonic_setup.num_sum" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines:&#160;harmonic_setup.num_sum</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml#num_sum" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;num_sum</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#multi_newton.num_sum" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;multi_newton.num_sum</a><br/>
num<b>_</b>threads&#160;<a href="ta_parallel_setup.xml#num_threads" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment:&#160;num_threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml#max_itr.num_threads" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;max_itr.num_threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml#num_threads" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;num_threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#num_threads" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;num_threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml#harmonic_setup.num_threads" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines:&#160;harmonic_setup.num_threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml#num_threads" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;num_threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml#num_threads" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;num_threads</a><br/>
num<b>_</b>zero&#160;<a href="multi_newton_time.cpp.xml#num_zero" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;num_zero</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#multi_newton.num_zero" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;multi_newton.num_zero</a><br/>
number&#160;<a href="elapsed_seconds_c.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="repeat_det_by_minor_c.xml" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_max_num_threads.xml#number" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_max_num_threads.xml" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml#number" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_thread.xml#number" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup:&#160;number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="microsoft_timer.xml" target="_top">Microsoft&#xA0;Version&#xA0;of&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_num_threads.xml#number" target="_top">Get&#xA0;Number&#xA0;of&#xA0;Threads:&#160;number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_num_threads.xml" target="_top">Get&#xA0;Number&#xA0;of&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml#number" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
number<b>_</b>skip&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped</a><br/>
numbervector&#160;<a href="cppad_ipopt_nlp.xml#NumberVector" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;NumberVector</a><br/>
numeric&#160;<a href="ipopt_solve.xml#options.Numeric" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;options.Numeric</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_limits.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Numeric&#xA0;Limits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Numeric Type" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Numeric&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="num_limits.cpp.xml" target="_top">Numeric&#xA0;Limits:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types</a><br/>
numeric<b>_</b>limits&#160;<a href="base_complex.hpp.xml#numeric_limits" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;numeric_limits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#numeric_limits" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;numeric_limits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#numeric_limits" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;numeric_limits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#numeric_limits" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;numeric_limits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#numeric_limits" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;numeric_limits</a><br/>
numerical&#160;<a href="numeric_ad.xml" target="_top">Some&#xA0;Numerical&#xA0;AD&#xA0;Utilities</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bib.xml#Numerical Recipes" target="_top">Bibliography:&#160;Numerical&#xA0;Recipes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#General Numerical Routines" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;General&#xA0;Numerical&#xA0;Routines</a><br/>
numerictype&#160;<a href="checknumerictype.xml" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept</a><br/>
numerictype<b>:</b>&#160;<a href="numeric_type.cpp.xml" target="_top">The&#xA0;NumericType:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
numtraits&#160;<a href="cppad_eigen.hpp.xml#Eigen NumTraits" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;Eigen&#xA0;NumTraits</a><br/>

<b><big><a name="O">O</a></big></b>
<br/>
Ode&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
OdeErrControl&#160;<a href="ode_err_maxabs.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;Using&#xA0;Maxabs&#xA0;Argument</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers</a><br/>
OdeGear&#160;<a href="ode_gear.cpp.xml" target="_top">OdeGear:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
OdeGearControl&#160;<a href="ode_gear_control.cpp.xml" target="_top">OdeGearControl:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
OpenMP&#160;<a href="a11c_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
obj<b>_</b>value&#160;<a href="cppad_ipopt_nlp.xml#solution.obj_value" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;solution.obj_value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#solution.obj_value" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;solution.obj_value</a><br/>
object&#160;<a href="fundeprecated.xml" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_fun.cpp.xml" target="_top">Creating&#xA0;Your&#xA0;Own&#xA0;Interface&#xA0;to&#xA0;an&#xA0;ADFun&#xA0;Object</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parvar.xml" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.cpp.xml" target="_top">AD&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.cpp.xml" target="_top">AD&#xA0;Constructors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
objective&#160;<a href="benderquad.xml" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Objective Function" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Objective&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Objective Function" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Objective&#xA0;Function</a><br/>
objects&#160;<a href="adfun.xml" target="_top">ADFun&#xA0;Objects</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="convert.xml" target="_top">Conversion&#xA0;and&#xA0;I/O&#xA0;of&#xA0;AD&#xA0;Objects</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad.xml" target="_top">AD&#xA0;Objects</a><br/>
objects<b>:</b>&#160;<a href="near_equal_ext.cpp.xml" target="_top">Compare&#xA0;AD&#xA0;with&#xA0;Base&#xA0;Objects:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
obtain&#160;<a href="nan.xml" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
ode&#160;<a href="ipopt_nlp_ode_run.hpp.xml" target="_top">Driver&#xA0;for&#xA0;Running&#xA0;the&#xA0;Ipopt&#xA0;ODE&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.hpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;<a href="sacado_ode.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="fadbad_ode.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="adolc_ode.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;<a href="double_ode.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE</a><br/>
&#160;&#160;&#160;&#160;<a href="link_ode.xml" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml#ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml#ODE" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE</a><br/>
&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Derivative of ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Derivative&#xA0;of&#xA0;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#ODE" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Derivative of ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Derivative&#xA0;of&#xA0;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#ODE" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE</a><br/>
&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="ode_stiff.cpp.xml" target="_top">A&#xA0;Stiff&#xA0;Ode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml#ODE" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml#ODE Solver" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml#ODE" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml#ODE Solver" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
ode<b>:</b>&#160;<a href="ode_stiff.cpp.xml" target="_top">A&#xA0;Stiff&#xA0;Ode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
ode<b>_</b>evaluate&#160;<a href="ode_evaluate.hpp.xml" target="_top">Source:&#xA0;ode_evaluate</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.cpp.xml" target="_top">ode_evaluate:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE</a><br/>
ode<b>_</b>evaluate<b>:</b>&#160;<a href="ode_evaluate.cpp.xml" target="_top">ode_evaluate:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
ode<b>_</b>inverse&#160;<a href="ipopt_solve.xml#Example.ode_inverse" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Example.ode_inverse</a><br/>
odeerrcontrol<b>:</b>&#160;<a href="ode_err_maxabs.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;Using&#xA0;Maxabs&#xA0;Argument</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_err_control.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
odegear<b>:</b>&#160;<a href="ode_gear.cpp.xml" target="_top">OdeGear:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
odegearcontrol<b>:</b>&#160;<a href="ode_gear_control.cpp.xml" target="_top">OdeGearControl:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
ok&#160;<a href="old_atomic.xml#ok" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="det_grad_33.xml#ok" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="det_33.xml#ok" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="ta_free_all.xml#ok" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="team_thread.hpp.xml#ok" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml#ok" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="multi_newton.cpp.xml#ok" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="harmonic_time.cpp.xml#ok" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="harmonic.cpp.xml#ok" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="funcheck.xml#ok" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml#ok" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml#ok" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="atomic_reverse.xml#ok" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;ok</a><br/>
&#160;&#160;&#160;<a href="atomic_forward.xml#ok" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;ok</a><br/>
old&#160;<a href="old_mat_mul.cpp.xml" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="old_tan.cpp.xml" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="old_reciprocal.cpp.xml" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
old<b>_</b>atomic&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
old<b>_</b>mat<b>_</b>mul&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
oldptr&#160;<a href="tracknewdel.xml#oldptr" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;oldptr</a><br/>
omp<b>_</b>alloc&#160;<a href="old_max_num_threads.xml" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
omp<b>_</b>max<b>_</b>thread&#160;<a href="omp_max_thread.xml" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup</a><br/>
on&#160;<a href="sparse_sub_hes.cpp.xml" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
one&#160;<a href="old_mat_mul.hpp.xml#Reverse Partials One Order" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Reverse&#xA0;Partials&#xA0;One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml#One Matrix Multiply" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;One&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;<a href="rombergmul.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="romberg_one.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="rombergone.xml" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration</a><br/>
&#160;&#160;&#160;&#160;<a href="speedtest.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;<a href="speed_test.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;<a href="forward_order.xml#yq.One Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;yq.One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;<a href="forward_order.xml#xq.One Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;xq.One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;<a href="forward_order.xml#One Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;<a href="forward_one.xml" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;<a href="log1p.xml" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p</a><br/>
one<b>:</b>&#160;<a href="expm1.xml" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1</a><br/>
onetape&#160;<a href="speed_main.xml#Global Options.onetape" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Global&#xA0;Options.onetape</a><br/>
op&#160;<a href="compare.xml#Op" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#160;Op</a><br/>
&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Public.op" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Public.op</a><br/>
&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Public.op" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Public.op</a><br/>
&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Public.op" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Public.op</a><br/>
&#160;&#160;&#160;<a href="compute_assign.xml#Op" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Op</a><br/>
&#160;&#160;&#160;<a href="ad_binary.xml#Op" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Op</a><br/>
op<b>_</b>index&#160;<a href="compare_change.xml#op_index" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;op_index</a><br/>
openmp&#160;<a href="omp_alloc.cpp.xml" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_thread.xml" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_openmp.cpp.xml" target="_top">OpenMP&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
openmp<b>/</b>run<b>.</b>sh&#160;<a href="whats_new_11.xml#07-11.openmp/run.sh" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD&#xA0;During&#xA0;2011:&#160;07-11.openmp/run.sh</a><br/>
openmp<b>_</b>flags&#160;<a href="auto_tools.xml#openmp_flags" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;openmp_flags</a><br/>
operand&#160;<a href="atomic_mat_mul.hpp.xml#Right Operand Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Right&#xA0;Operand&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Left Operand Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Left&#xA0;Operand&#xA0;Element&#xA0;Index</a><br/>
operation&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_reciprocal.cpp.xml" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Operation Sequence" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Operation" target="_top">Glossary:&#160;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Float.Operation Sequence" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Float.Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Operation Sequence" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Operation Sequence" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml#Operation Sequence" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.xml" target="_top">Abort&#xA0;Recording&#xA0;of&#xA0;an&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parvar.xml#Operation Sequence" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Operation Sequence" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml#Operation Sequence" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml#Operation Sequence" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic.xml" target="_top">Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tape_index.cpp.xml" target="_top">Taping&#xA0;Array&#xA0;Index&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Operation Sequence" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Operation Sequence" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.xml#Operation Sequence" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml#Operation Sequence" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Operation Sequence" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Operation Sequence" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml#Operation Sequence" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml#Operation Sequence" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.xml#Operation Sequence" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml#Operation Sequence" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#Operation Sequence" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.xml#Operation Sequence" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence.Operation" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence.Operation" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence.Operation" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence.Operation" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence.Operation" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Operation Sequence.Operation" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Operation Sequence" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Operation Count" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Operation&#xA0;Count</a><br/>
operation<b>:</b>&#160;<a href="old_mat_mul.cpp.xml" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tape_index.cpp.xml" target="_top">Taping&#xA0;Array&#xA0;Index&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
operations&#160;<a href="poly.xml#Type.Operations" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Type.Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_cumulative_sum.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Cumulative&#xA0;Sum&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolvalued.xml" target="_top">Bool&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions&#xA0;with&#xA0;AD&#xA0;Arguments</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mul_level.cpp.xml" target="_top">Atomic&#xA0;Operations&#xA0;and&#xA0;Multiple-Levels&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="advalued.xml" target="_top">AD&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions</a><br/>
operations<b>:</b>&#160;<a href="old_tan.cpp.xml" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
operator&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed.xml" target="_top">Speed&#xA0;Test&#xA0;an&#xA0;Operator&#xA0;Overloading&#xA0;AD&#xA0;Package</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Example.Assignment Operator" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Example.Assignment&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Assignment Operator" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Assignment&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Output Operator" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Output&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Boolean Operator Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Boolean&#xA0;Operator&#xA0;Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Binary Operator Macro" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Binary&#xA0;Operator&#xA0;Macro</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Output Operator" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Output&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.xml" target="_top">AD&#xA0;Assignment&#xA0;Operator</a><br/>
operator<b>:</b>&#160;<a href="unary_minus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_plus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
operators&#160;<a href="zdouble.xml#Syntax.Arithmetic Operators" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml#Syntax.Comparison Operators" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Optimization.Special Operators" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Optimization.Special&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml#Binary Operators" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Binary&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Binary Operators" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Binary&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Operators" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_print_for.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Print&#xA0;Forward&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_compare_op.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Bool Operators" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Bool&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Binary Operators" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Binary&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Assignment Operators" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Unary Operators" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Unary&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="arithmetic.xml" target="_top">AD&#xA0;Arithmetic&#xA0;Operators&#xA0;and&#xA0;Computed&#xA0;Assignments</a><br/>
operators<b>:</b>&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
opt<b>_</b>val<b>_</b>hes&#160;<a href="opt_val_hes.cpp.xml" target="_top">opt_val_hes:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="opt_val_hes.xml" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values</a><br/>
opt<b>_</b>val<b>_</b>hes<b>:</b>&#160;<a href="opt_val_hes.cpp.xml" target="_top">opt_val_hes:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
optimal&#160;<a href="opt_val_hes.xml" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values</a><br/>
optimization&#160;<a href="wish_list.xml#Optimization" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Optimization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Fun.Optimization" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Fun.Optimization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_cumulative_sum.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Cumulative&#xA0;Sum&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_nest_conditional.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Nested&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_conditional_skip.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_print_for.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Print&#xA0;Forward&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_compare_op.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Comparison&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_reverse_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Reverse&#xA0;Activity&#xA0;Analysis</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_forward_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Forward&#xA0;Activity&#xA0;Analysis</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Checking Optimization" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Checking&#xA0;Optimization</a><br/>
optimize&#160;<a href="faq.xml#Speed.Optimize" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Speed.Optimize</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Global Options.optimize" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Global&#xA0;Options.optimize</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#optimize" target="_top">Checkpointing&#xA0;Functions:&#160;optimize</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Optimize" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Optimize</a><br/>
option&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function.option" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.option</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#option" target="_top">Checkpointing&#xA0;Functions:&#160;option</a><br/>
options&#160;<a href="speed_main.xml#Sparsity Options" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Sparsity&#xA0;Options</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Global Options" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Global&#xA0;Options</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#options" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;options</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#options" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;options</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_option.xml" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options</a><br/>
order&#160;<a href="old_mat_mul.hpp.xml#Reverse Partials One Order" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Reverse&#xA0;Partials&#xA0;One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Order" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml#Order Zero Z(t)" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Order&#xA0;Zero&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml#Order Zero Z(t)" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Order&#xA0;Zero&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Method.order" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Method.order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_two.cpp.xml" target="_top">Subset&#xA0;of&#xA0;Second&#xA0;Order&#xA0;Partials:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Derivative&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_three.cpp.xml" target="_top">Third&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#Second Order" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Second&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#First Order" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;First&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.cpp.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;ModeExample&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#dw.Second Order Partials" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw.Second&#xA0;Order&#xA0;Partials</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#dw.First Order Partials" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw.First&#xA0;Order&#xA0;Partials</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Zero Order" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Second Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Second&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#First Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;First&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Zero Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#yq.One Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;yq.One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#xq.One Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;xq.One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#One Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#Include Order" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Include&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Include Order" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Include&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_string.cpp.xml" target="_top">Print&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Second Order Expansion" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Second&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence.First Order" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.First&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence.Zero Order" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#First Order Expansion" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;First&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence.Zero Order" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Second Order Expansion" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Second&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence.First Order" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.First&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence.Zero Order" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#First Order Expansion" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;First&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Operation Sequence.Zero Order" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Zero Order Expansion" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Zero&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation</a><br/>
ordered&#160;<a href="base_complex.hpp.xml#Ordered" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Ordered</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#Ordered" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;Ordered</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#Ordered" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;Ordered</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Ordered" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Ordered</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Ordered" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Ordered</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_ordered.xml#Not Ordered" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons:&#160;Not&#xA0;Ordered</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_ordered.xml#Ordered Type" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons:&#160;Ordered&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_ordered.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml#CondExpTemplate.Not Ordered" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions:&#160;CondExpTemplate.Not&#xA0;Ordered</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml#CondExpTemplate.Ordered Type" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions:&#160;CondExpTemplate.Ordered&#xA0;Type</a><br/>
orders&#160;<a href="erf_reverse.xml#Positive Orders Z(t)" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Positive&#xA0;Orders&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml#Positive Orders Z(t)" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Positive&#xA0;Orders&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Non-Zero Lower Orders" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Non-Zero&#xA0;Lower&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#yq.Multiple Orders" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;yq.Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#xq.Multiple Orders" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;xq.Multiple&#xA0;Orders</a><br/>
original&#160;<a href="capacity_order.xml#Original State" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;Original&#xA0;State</a><br/>
os&#160;<a href="ad_output.xml#os" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;os</a><br/>
other&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
out&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
outer&#160;<a href="mul_level.xml#Procedure.Derivatives of Outer Function" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Derivatives&#xA0;of&#xA0;Outer&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Outer Function" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Outer&#xA0;Function</a><br/>
outline&#160;<a href="introduction.xml#Outline" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Outline</a><br/>
output&#160;<a href="cppad_vector.xml#vectorBool.Output" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;vectorBool.Output</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Output" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Output</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml#Output" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest:&#160;Output</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Output Operator" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Output&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Output Operator" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Output&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml#Output" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Output</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml#Redirecting Output" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;Redirecting&#xA0;Output</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Output" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Output</a><br/>
overloading&#160;<a href="speed.xml" target="_top">Speed&#xA0;Test&#xA0;an&#xA0;Operator&#xA0;Overloading&#xA0;AD&#xA0;Package</a><br/>
own&#160;<a href="ad_fun.cpp.xml" target="_top">Creating&#xA0;Your&#xA0;Own&#xA0;Interface&#xA0;to&#xA0;an&#xA0;ADFun&#xA0;Object</a><br/>

<b><big><a name="P">P</a></big></b>
<br/>
Parameter&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
Poly&#160;<a href="poly.xml" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative</a><br/>
p&#160;<a href="luratio.xml#LU.P" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;LU.P</a><br/>
&#160;&#160;<a href="sparse_hes_fun.xml#p" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;p</a><br/>
&#160;&#160;<a href="sparse_jac_fun.xml#p" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;p</a><br/>
&#160;&#160;<a href="ode_evaluate.xml#p.p = 1" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;p.p&#xA0;=&#xA0;1</a><br/>
&#160;&#160;<a href="ode_evaluate.xml#p.p == 0" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;p.p&#xA0;==&#xA0;0</a><br/>
&#160;&#160;<a href="ode_evaluate.xml#p" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;p</a><br/>
&#160;&#160;<a href="rombergmul.xml#p" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;p</a><br/>
&#160;&#160;<a href="rombergone.xml#p" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;p</a><br/>
&#160;&#160;<a href="luinvert.xml#LU.P" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;LU.P</a><br/>
&#160;&#160;<a href="lufactor.xml#LU.P" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;LU.P</a><br/>
&#160;&#160;<a href="poly.xml#p" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;p</a><br/>
&#160;&#160;<a href="sparse_hessian.xml#work.p" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;work.p</a><br/>
&#160;&#160;<a href="sparse_hessian.xml#p" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;p</a><br/>
&#160;&#160;<a href="sparse_jacobian.xml#work.p" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;work.p</a><br/>
&#160;&#160;<a href="sparse_jacobian.xml#p" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;p</a><br/>
&#160;&#160;<a href="atomic_forward.xml#p" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;p</a><br/>
pack<b>_</b>sparsity<b>_</b>enum&#160;<a href="atomic_option.xml#atomic_sparsity.pack_sparsity_enum" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options:&#160;atomic_sparsity.pack_sparsity_enum</a><br/>
package&#160;<a href="speed_main.xml#package.AD Package" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;package.AD&#xA0;Package</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#package" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;package</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed.xml" target="_top">Speed&#xA0;Test&#xA0;an&#xA0;Operator&#xA0;Overloading&#xA0;AD&#xA0;Package</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
package<b>_</b>prefix&#160;<a href="cmake.xml#package_prefix" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;package_prefix</a><br/>
parallel&#160;<a href="old_atomic.xml#afun.Parallel Mode" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;afun.Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_thread.xml" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Memory and Parallel Mode" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Memory&#xA0;and&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Parallel Mode" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Parallel Mode" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml#Parallel Mode" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml#Parallel Mode" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#Constructor.Parallel Mode" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;Constructor.Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml#Parallel Prohibited" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;Parallel&#xA0;Prohibited</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml#Parallel AD" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;Parallel&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml#Parallel Mode" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Parallel Mode" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Parallel Mode" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Parallel Mode" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Parallel&#xA0;Mode</a><br/>
parallel<b>_</b>setup&#160;<a href="multi_thread.xml#parallel_setup" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;parallel_setup</a><br/>
parameter&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulation Parameter Values" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulation&#xA0;Parameter&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Parameter" target="_top">Glossary:&#160;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulation Parameter Values" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulation&#xA0;Parameter&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#Parameter" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="par_var.cpp.xml" target="_top">AD&#xA0;Parameter&#xA0;and&#xA0;Variable&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parvar.xml" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence.Parameter" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Parameter</a><br/>
parameter<b>:</b>&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
part&#160;<a href="cholesky_theory.xml#Notation.Lower Triangular Part" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Notation.Lower&#xA0;Triangular&#xA0;Part</a><br/>
partial&#160;<a href="old_atomic.xml#Partial Implementation" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Partial&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_two.cpp.xml" target="_top">Subset&#xA0;of&#xA0;Second&#xA0;Order&#xA0;Partials:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
partials&#160;<a href="old_mat_mul.hpp.xml#Reverse Partials One Order" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Reverse&#xA0;Partials&#xA0;One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_two.cpp.xml" target="_top">Second&#xA0;Partials&#xA0;Reverse&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#dw.Second Order Partials" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw.Second&#xA0;Order&#xA0;Partials</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#dw.First Order Partials" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw.First&#xA0;Order&#xA0;Partials</a><br/>
partials<b>:</b>&#160;<a href="for_two.cpp.xml" target="_top">Subset&#xA0;of&#xA0;Second&#xA0;Order&#xA0;Partials:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
pattern&#160;<a href="glossary.xml#Sparsity Pattern" target="_top">Glossary:&#160;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml#Entire Sparsity Pattern" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependency.cpp.xml#Dependency Pattern" target="_top">Computing&#xA0;Dependency:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Dependency&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#Entire Sparsity Pattern" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#Entire Sparsity Pattern" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
pattern<b>:</b>&#160;<a href="forsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
patterns&#160;<a href="wish_list.xml#Sparsity Patterns" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparsity_sub.cpp.xml" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse.xml" target="_top">Calculating&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funeval.xml" target="_top">Evaluate&#xA0;ADFun&#xA0;Functions,&#xA0;Derivatives,&#xA0;and&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Assignment Operator.Sparsity Patterns" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Assignment&#xA0;Operator.Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Hessian Sparsity Patterns" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
patterns<b>:</b>&#160;<a href="atomic_set_sparsity.cpp.xml" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
pc&#160;<a href="pkgconfig.xml" target="_top">CppAD&#xA0;pkg-config&#xA0;Files</a><br/>
pivot&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
pivoting&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
pivoting<b>:</b>&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
pkg<b>-</b>config&#160;<a href="pkgconfig.xml" target="_top">CppAD&#xA0;pkg-config&#xA0;Files</a><br/>
plus&#160;<a href="log1p.xml" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="add.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="unary_plus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator</a><br/>
point&#160;<a href="base_to_string.xml" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type</a><br/>
pointer&#160;<a href="preprocessor.xml" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols</a><br/>
poly&#160;<a href="poly.hpp.xml" target="_top">Source:&#xA0;Poly</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="complex_poly.cpp.xml#Poly" target="_top">Complex&#xA0;Polynomial:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Poly</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Poly" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Poly</a><br/>
polynomial&#160;<a href="erf_forward.xml" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_poly.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_poly.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.cpp.xml" target="_top">Polynomial&#xA0;Evaluation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="complex_poly.cpp.xml" target="_top">Complex&#xA0;Polynomial:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
polynomial<b>:</b>&#160;<a href="complex_poly.cpp.xml" target="_top">Complex&#xA0;Polynomial:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
pos&#160;<a href="printfor.xml#pos" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;pos</a><br/>
positive&#160;<a href="erf_reverse.xml#Positive Orders Z(t)" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Positive&#xA0;Orders&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml#Positive Orders Z(t)" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Positive&#xA0;Orders&#xA0;Z(t)</a><br/>
possible&#160;<a href="unary_standard_math.xml#Possible Types" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Possible&#xA0;Types</a><br/>
postfix&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
postfix<b>_</b>dir&#160;<a href="auto_tools.xml#postfix_dir" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;postfix_dir</a><br/>
pow&#160;<a href="pow_int.cpp.xml" target="_top">The&#xA0;Pow&#xA0;Integer&#xA0;Exponent:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="pow_int.xml" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#pow" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;pow</a><br/>
&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#pow" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;pow</a><br/>
&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#pow" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;pow</a><br/>
&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#pow" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;pow</a><br/>
&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#pow" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;pow</a><br/>
&#160;&#160;&#160;&#160;<a href="base_std_math.xml#pow" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;pow</a><br/>
&#160;&#160;&#160;&#160;<a href="pow.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function</a><br/>
power&#160;<a href="pow_int.xml" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.cpp.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function</a><br/>
pre<b>-</b>allocating&#160;<a href="capacity_order.xml#c.Pre-Allocating Memory" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;c.Pre-Allocating&#xA0;Memory</a><br/>
preface&#160;<a href="introduction.xml#Preface" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface</a><br/>
prefix&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#Prefix Directory" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Prefix&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
prefix<b>_</b>dir&#160;<a href="auto_tools.xml#prefix_dir" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;prefix_dir</a><br/>
preprocessor&#160;<a href="addon.xml#Preprocessor Symbols" target="_top">CppAD&#xA0;Addons:&#160;Preprocessor&#xA0;Symbols</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Namespace.Test Vector Preprocessor Symbol" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Namespace.Test&#xA0;Vector&#xA0;Preprocessor&#xA0;Symbol</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="preprocessor.xml" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml#Preprocessor Symbols" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms:&#160;Preprocessor&#xA0;Symbols</a><br/>
previous&#160;<a href="whats_new.xml#Previous Years" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD:&#160;Previous&#xA0;Years</a><br/>
previously&#160;<a href="tracknewdel.xml#TrackCount.Previously Deprecated" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackCount.Previously&#xA0;Deprecated</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackExtend.Previously Deprecated" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackExtend.Previously&#xA0;Deprecated</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackDelVec.Previously Deprecated" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackDelVec.Previously&#xA0;Deprecated</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#TrackNewVec.Previously Deprecated" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackNewVec.Previously&#xA0;Deprecated</a><br/>
print&#160;<a href="speedtest.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_print_for.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Print&#xA0;Forward&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_string.cpp.xml" target="_top">Print&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
printing&#160;<a href="print_for_cout.cpp.xml" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
private&#160;<a href="atomic_eigen_cholesky.hpp.xml#Private" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Private</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Private" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Private</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Private" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Private</a><br/>
problem&#160;<a href="benderquad.xml#Problem" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.hpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Inverse Problem" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Forward Problem" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Forward&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode.xml" target="_top">Example&#xA0;Simultaneous&#xA0;Solution&#xA0;of&#xA0;Forward&#xA0;and&#xA0;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Inverse Problem" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Forward Problem" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Forward&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml#Problem" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml#Problem" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Problem</a><br/>
procedure&#160;<a href="mul_level.xml#Procedure" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure</a><br/>
processing&#160;<a href="reverse_checkpoint.cpp.xml#Processing Steps" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test:&#160;Processing&#xA0;Steps</a><br/>
product&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Theory.Product of Three Matrices" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Theory.Product&#xA0;of&#xA0;Three&#xA0;Matrices</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Theory.Product of Two Matrices" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Theory.Product&#xA0;of&#xA0;Two&#xA0;Matrices</a><br/>
profile&#160;<a href="speed_main.xml#package.profile" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;package.profile</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
profiling&#160;<a href="auto_tools.xml#Profiling CppAD" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Profiling&#xA0;CppAD</a><br/>
program&#160;<a href="main_compare_c.xml" target="_top">Main&#xA0;Program&#xA0;For&#xA0;Comparing&#xA0;C&#xA0;and&#xA0;C++&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Speed Main Program" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Speed&#xA0;Main&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_example.cpp.xml" target="_top">Run&#xA0;the&#xA0;Speed&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml#Program" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest:&#160;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml#Running This Program" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest:&#160;Running&#xA0;This&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Program" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml#The CMake Program" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;The&#xA0;CMake&#xA0;Program</a><br/>
programming&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bib.xml#The C++ Programming Language" target="_top">Bibliography:&#160;The&#xA0;C++&#xA0;Programming&#xA0;Language</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_retape.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem</a><br/>
prohibited&#160;<a href="multi_thread.xml#Parallel Prohibited" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;Parallel&#xA0;Prohibited</a><br/>
projection&#160;<a href="cppad_ipopt_nlp.xml#fg(x).Projection" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg(x).Projection</a><br/>
proof&#160;<a href="reverse_identity.xml#Proof" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity:&#160;Proof</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Lemma 1.Proof" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Lemma&#xA0;1.Proof</a><br/>
properties&#160;<a href="seq_property.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties</a><br/>
properties<b>:</b>&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
prototype&#160;<a href="link_sparse_jacobian.xml#Prototype" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;Prototype</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#Prototype" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;Prototype</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml#Prototype" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Prototype</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#Prototype" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Prototype</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml#Prototype" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply:&#160;Prototype</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#Prototype" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Prototype</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#Prototype" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Prototype</a><br/>
prototypes&#160;<a href="base_identical.xml#Identical.Prototypes" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;Identical.Prototypes</a><br/>
pthread&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_pthread.cpp.xml" target="_top">Pthread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
pthread<b>_</b>exit&#160;<a href="team_pthread.cpp.xml" target="_top">Pthread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
public&#160;<a href="atomic_eigen_cholesky.hpp.xml#Public" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Public</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Public" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Public</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Public" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Public</a><br/>
purpose&#160;<a href="luratio.xml#ratio.Purpose" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;ratio.Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="opt_val_hes.xml#Purpose" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="benderquad.xml#Purpose" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_det_by_minor_c.xml#Purpose" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds_c.xml#Purpose" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01_c.xml#Purpose" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor_c.xml#Purpose" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor_c.xml#Purpose" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_c.xml#Purpose" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_2.cpp.xml#Purpose" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml#Purpose" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Purpose" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Purpose" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Purpose" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_get_started.cpp.xml#Purpose" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#Purpose" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="epsilon.xml#Purpose" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="memory_leak.xml#Purpose" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_max_num_threads.xml#Purpose" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_efficient.xml#Purpose" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml#Purpose" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml#Purpose" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml#Purpose" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml#Purpose" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml#Purpose" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml#Purpose" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml#Purpose" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml#Purpose" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml#Purpose" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml#Purpose" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml#Purpose" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#Purpose" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_thread.xml#Purpose" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="comparechange.xml#Purpose" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Purpose" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_sacado.xml#Purpose" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_fadbad.xml#Purpose" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_cppad.xml#Purpose" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;CppAD:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_alloc_mat.xml#Purpose" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_adolc.xml#Purpose" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_double.xml#Purpose" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Functions&#xA0;in&#xA0;Double:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml#Purpose" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#Purpose" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#Purpose" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Purpose" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml#Purpose" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml#Purpose" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml#Purpose" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml#Purpose" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="microsoft_timer.xml#Purpose" target="_top">Microsoft&#xA0;Version&#xA0;of&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml#Purpose" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#Purpose" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml#Purpose" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#Purpose" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#Purpose" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Purpose" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed.xml#Purpose" target="_top">Speed&#xA0;Test&#xA0;an&#xA0;Operator&#xA0;Overloading&#xA0;AD&#xA0;Package:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml#Purpose" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml#Purpose" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Purpose" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Purpose" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="change_param.cpp.xml#Purpose" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.cpp.xml#Purpose" target="_top">Multiple&#xA0;Level&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml#Purpose" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="conj_grad.cpp.xml#Purpose" target="_top">Differentiate&#xA0;Conjugate&#xA0;Gradient&#xA0;Algorithm:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Purpose" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_retape.cpp.xml#Purpose" target="_top">Nonlinear&#xA0;Programming&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml#Purpose" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#Purpose" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="set_union.xml#Purpose" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#Purpose" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_all.xml#Purpose" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml#Purpose" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml#Purpose" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml#Purpose" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml#Purpose" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_hold_memory.xml#Purpose" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml#Purpose" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml#Purpose" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#Purpose" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml#Purpose" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml#Purpose" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_num_threads.xml#Purpose" target="_top">Get&#xA0;Number&#xA0;of&#xA0;Threads:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml#Purpose" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.xml#Purpose" target="_top">A&#xA0;Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Purpose" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Purpose" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Purpose" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml#Purpose" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml#Purpose" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml#Purpose" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml#Purpose" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml#Purpose" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#Purpose" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Purpose" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#Purpose" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml#Purpose" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml#Purpose" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Purpose" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml#Purpose" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml#Purpose" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#Purpose" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml#Purpose" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml#Purpose" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_example.cpp.xml#Purpose" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml#Purpose" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml#Purpose" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml#Purpose" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml#Purpose" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml#Purpose" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml#Purpose" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#Purpose" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml#Purpose" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml#Purpose" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="preprocessor.xml#Purpose" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Purpose" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml#Purpose" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_sub_hes.cpp.xml#Purpose" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml#Purpose" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#p.Purpose" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;p.Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#Purpose" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#Purpose" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml#Purpose" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml#Purpose" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml#Purpose" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml#Purpose" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml#Purpose" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml#Purpose" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bool_sparsity.cpp.xml#Purpose" target="_top">Using&#xA0;vectorBool&#xA0;Sparsity&#xA0;To&#xA0;Conserve&#xA0;Memory:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml#Purpose" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml#Purpose" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#Purpose" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#Purpose" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml#Purpose" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#Purpose" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#Purpose" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml#Purpose" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.xml#Purpose" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml#Purpose" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml#op_index.Purpose" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;op_index.Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml#Purpose" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml#Purpose" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Purpose" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Purpose" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml#Purpose" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml#Purpose" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml#Purpose" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#Purpose" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.xml#Purpose" target="_top">Abort&#xA0;Recording&#xA0;of&#xA0;an&#xA0;Operation&#xA0;Sequence:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml#Purpose" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Purpose" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Purpose" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adfun.xml#Purpose" target="_top">ADFun&#xA0;Objects:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml#Purpose" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.cpp.xml#Purpose" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Purpose" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml#Purpose" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#Purpose" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_ordered.xml#Purpose" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml#Purpose" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Purpose" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#Purpose" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml#Purpose" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parvar.xml#Purpose" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Purpose" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml#Purpose" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml#Purpose" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Purpose" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Purpose" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Purpose" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Purpose" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Purpose" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Purpose" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Purpose" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Purpose" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#Purpose" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#Purpose" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml#Purpose" target="_top">Free&#xA0;Static&#xA0;Variables:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml#Purpose" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml#Purpose" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Purpose" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml#Purpose" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.xml#Purpose" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml#Purpose" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml#Purpose" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Purpose" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml#Purpose" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.cpp.xml#Purpose" target="_top">Simple&#xA0;Checkpointing:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Purpose" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Purpose" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Purpose" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="azmul.xml#Purpose" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.xml#Purpose" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml#Purpose" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml#Purpose" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Purpose" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Purpose" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml#Purpose" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml#Purpose" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml#Purpose" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml#Purpose" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.xml#Purpose" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml#Purpose" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#Purpose" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.xml#Purpose" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.xml#Purpose" target="_top">AD&#xA0;Assignment&#xA0;Operator:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.xml#Purpose" target="_top">AD&#xA0;Constructors:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad.xml#Purpose" target="_top">AD&#xA0;Objects:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_cppad.xml#Purpose" target="_top">exp_eps:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml#Purpose" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Purpose" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Purpose" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#Purpose" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_cppad.xml#Purpose" target="_top">exp_2:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Purpose" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Purpose" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Purpose" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Purpose" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#Purpose" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Purpose" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Purpose" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pkgconfig.xml#Purpose" target="_top">CppAD&#xA0;pkg-config&#xA0;Files:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake_check.xml#Purpose" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml#Purpose" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml#Purpose" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml#Purpose" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#Purpose" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml#Purpose" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml#Purpose" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml#Purpose" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#Purpose" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml#Purpose" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#Purpose" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml#Purpose" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#Purpose" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml#Purpose" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Purpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Purpose" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Purpose</a><br/>
push&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
push<b>_</b>back&#160;<a href="cppad_vector.xml#push_back" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;push_back</a><br/>
push<b>_</b>vector&#160;<a href="cppad_vector.xml#push_vector" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;push_vector</a><br/>
px&#160;<a href="old_atomic.xml#reverse.px" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;reverse.px</a><br/>
&#160;&#160;&#160;<a href="atomic_reverse.xml#py.px" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;py.px</a><br/>
py&#160;<a href="old_atomic.xml#reverse.py" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;reverse.py</a><br/>
&#160;&#160;&#160;<a href="atomic_reverse.xml#py" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;py</a><br/>

<b><big><a name="Q">Q</a></big></b>
<br/>
q&#160;<a href="old_atomic.xml#rev_hes_sparse.q" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;rev_hes_sparse.q</a><br/>
&#160;&#160;<a href="old_atomic.xml#rev_jac_sparse.q" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;rev_jac_sparse.q</a><br/>
&#160;&#160;<a href="old_atomic.xml#for_jac_sparse.q" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;for_jac_sparse.q</a><br/>
&#160;&#160;<a href="revsparsehes.xml#q" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;q</a><br/>
&#160;&#160;<a href="revsparsejac.xml#q" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;q</a><br/>
&#160;&#160;<a href="forsparsejac.xml#q" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;q</a><br/>
&#160;&#160;<a href="reverse_any.xml#q" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;q</a><br/>
&#160;&#160;<a href="forward_dir.xml#q" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;q</a><br/>
&#160;&#160;<a href="forward_order.xml#q" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;q</a><br/>
&#160;&#160;<a href="atomic_rev_sparse_hes.xml#Implementation.q" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.q</a><br/>
&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Implementation.q" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.q</a><br/>
&#160;&#160;<a href="atomic_for_sparse_jac.xml#Implementation.q" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.q</a><br/>
&#160;&#160;<a href="atomic_reverse.xml#q" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;q</a><br/>
&#160;&#160;<a href="atomic_forward.xml#q" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;q</a><br/>
questions&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
quick&#160;<a href="omp_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
quiet<b>_</b>nan&#160;<a href="numeric_limits.xml#quiet_NaN" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;quiet_NaN</a><br/>
quotient&#160;<a href="div.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>

<b><big><a name="R">R</a></big></b>
<br/>
Range&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
RevSparseHes&#160;<a href="rev_sparse_hes.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
RevSparseJac&#160;<a href="rev_sparse_jac.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
Romberg&#160;<a href="rombergone.xml" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration</a><br/>
Rosen34&#160;<a href="rosen_34.cpp.xml" target="_top">Rosen34:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
Runge&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
Runge45&#160;<a href="runge45_2.cpp.xml" target="_top">Runge45:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45_1.cpp.xml" target="_top">Runge45:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
random&#160;<a href="uniform_01_c.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
range&#160;<a href="ipopt_nlp_ode_fast.xml#Trapezoidal Approximation.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Initial Condition.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Initial&#xA0;Condition.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Objective Function.Range Indices I(k,0)" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Objective&#xA0;Function.Range&#xA0;Indices&#xA0;I(k,0)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#Range" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;Range</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Vector Range" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Vector&#xA0;Range</a><br/>
rate&#160;<a href="speedtest.xml#rate" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;rate</a><br/>
rate<b>_</b>vec&#160;<a href="speed_test.xml#rate_vec" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;rate_vec</a><br/>
ratio&#160;<a href="luratio.xml#ratio" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;ratio</a><br/>
raw&#160;<a href="omp_delete_array.xml" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_create_array.xml" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array</a><br/>
re<b>-</b>tape&#160;<a href="compare_change.cpp.xml" target="_top">CompareChange&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
re<b>-</b>tape<b>:</b>&#160;<a href="fun_check.cpp.xml" target="_top">ADFun&#xA0;Check&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.cpp.xml" target="_top">CompareChange&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
real&#160;<a href="integer.xml#x.Real Types" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;x.Real&#xA0;Types</a><br/>
realistic&#160;<a href="general.xml" target="_top">General&#xA0;Examples</a><br/>
recipes&#160;<a href="bib.xml#Numerical Recipes" target="_top">Bibliography:&#160;Numerical&#xA0;Recipes</a><br/>
reciprocal&#160;<a href="atomic_reciprocal.cpp.xml" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
reciprocal<b>:</b>&#160;<a href="old_reciprocal.cpp.xml" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
recomputation&#160;<a href="wish_list.xml#Forward Mode Recomputation" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Forward&#xA0;Mode&#xA0;Recomputation</a><br/>
record&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
recorded&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
recording&#160;<a href="mul_level.xml#Procedure.Start AD&lt; AD&lt;double&gt; &gt; Recording" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.cpp.xml" target="_top">Abort&#xA0;Current&#xA0;Recording:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.xml" target="_top">Abort&#xA0;Recording&#xA0;of&#xA0;an&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Stop Recording" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Stop&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Start Recording" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Start&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function.Recording" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.Recording" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function.Recording" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function.Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function.Recording" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function.Recording" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Use Atomic Function.Recording" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Purpose.Faster Recording" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Faster&#xA0;Recording</a><br/>
recording<b>:</b>&#160;<a href="abort_recording.cpp.xml" target="_top">Abort&#xA0;Current&#xA0;Recording:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
recursion&#160;<a href="erf_forward.xml#Taylor Coefficients Recursion" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml#Taylor Coefficients Recursion" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml#Taylor Coefficients Recursion" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml#Taylor Coefficients Recursion" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Cases that Apply Recursion Above" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Cases&#xA0;that&#xA0;Apply&#xA0;Recursion&#xA0;Above</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Taylor Coefficients Recursion Formula" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Taylor&#xA0;Coefficients&#xA0;Recursion&#xA0;Formula</a><br/>
redirecting&#160;<a href="printfor.xml#Redirecting Output" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;Redirecting&#xA0;Output</a><br/>
reduce&#160;<a href="checkpoint.xml#Purpose.Reduce Memory" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Reduce&#xA0;Memory</a><br/>
reduced&#160;<a href="benderquad.xml" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective</a><br/>
reference&#160;<a href="opt_val_hes.xml#Reference" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Reference</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Assignment.Return Reference" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Assignment.Return&#xA0;Reference</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Reference" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reference</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Reference" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Reference</a><br/>
rel&#160;<a href="condexp.xml#Rel" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Rel</a><br/>
relative&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
release&#160;<a href="download.xml#Release Versions" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Release&#xA0;Versions</a><br/>
removed&#160;<a href="old_max_num_threads.xml#Removed" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Removed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_efficient.xml#Removed" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use:&#160;Removed</a><br/>
repeat&#160;<a href="repeat_det_by_minor_c.xml#repeat" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times:&#160;repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="repeat_det_by_minor_c.xml" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml#repeat" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#repeat" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml#repeat" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#repeat" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml#repeat" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply:&#160;repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#repeat" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#repeat" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#test.repeat" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;test.repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Test.repeat" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Test.repeat</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#test.repeat" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;test.repeat</a><br/>
repeating&#160;<a href="checkpoint.xml#Purpose.Repeating Forward" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Repeating&#xA0;Forward</a><br/>
replace&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
replacing&#160;<a href="error_handler.cpp.xml" target="_top">Replacing&#xA0;The&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
reporting&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
representation&#160;<a href="ipopt_nlp_ode_fast.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#Simple Representation" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#fg(x).Representation" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg(x).Representation</a><br/>
representations&#160;<a href="ipopt_ode_speed.cpp.xml" target="_top">Speed&#xA0;Test&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_check.cpp.xml" target="_top">Correctness&#xA0;Check&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
require&#160;<a href="base_identical.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad.xml" target="_top">AD&#xA0;Objects</a><br/>
required&#160;<a href="base_member.xml" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions</a><br/>
requirement&#160;<a href="ipopt_nlp_get_started.cpp.xml#Configuration Requirement" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Configuration&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Configuration Requirement" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Configuration&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml#Configuration Requirement" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Configuration&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml#Configuration Requirement" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Configuration&#xA0;Requirement</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_to_string.xml#Base Requirement" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type:&#160;Base&#xA0;Requirement</a><br/>
requirements&#160;<a href="zdouble.xml#Base Type Requirements" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Base&#xA0;Type&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Base Requirements" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Base&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Template Class Requirements" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Template&#xA0;Class&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Type Requirements" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Type&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_limits.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Numeric&#xA0;Limits</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_ordered.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad.xml#Base Type Requirements" target="_top">AD&#xA0;Objects:&#160;Base&#xA0;Type&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#Requirements" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Requirements</a><br/>
resize&#160;<a href="cppad_vector.xml#resize" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;resize</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Resize" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Resize</a><br/>
restriction&#160;<a href="old_atomic.xml#clear.Restriction" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;clear.Restriction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_thread.xml#Restriction" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup:&#160;Restriction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml#Restriction" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Restriction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml#Restriction" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode:&#160;Restriction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml#Restriction" target="_top">Free&#xA0;Static&#xA0;Variables:&#160;Restriction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#clear.Restriction" target="_top">Checkpointing&#xA0;Functions:&#160;clear.Restriction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Purpose.Restriction" target="_top">Checkpointing&#xA0;Functions:&#160;Purpose.Restriction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.xml#Restriction" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;Restriction</a><br/>
restrictions&#160;<a href="old_max_num_threads.xml#Restrictions" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml#Restrictions" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_all.xml#Restrictions" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc:&#160;Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml#Restrictions" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment:&#160;Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml#Restrictions" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept:&#160;Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Restrictions" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#VectorSet.Restrictions" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;VectorSet.Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#VectorSet.Restrictions" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;VectorSet.Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#xq.Restrictions" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;xq.Restrictions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#atomic_base.Restrictions" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_base.Restrictions</a><br/>
result&#160;<a href="lu_vec_ad.cpp.xml#Result" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;Result</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="set_union.xml#result" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets:&#160;result</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Result Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Result&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function.Test Result" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function.Test&#xA0;Result</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#result" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;result</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Result" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Result</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.xml#Result" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Result</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml#Result" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Result</a><br/>
results&#160;<a href="speed_main.xml#Speed Results" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Speed&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Correctness Results" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Correctness&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results</a><br/>
retains&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
retape&#160;<a href="wish_list.xml#checkpoint.Retape" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;checkpoint.Retape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_retape.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#Example.retape" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Example.retape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#options.Retape" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;options.Retape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interp_retape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
retaping<b>:</b>&#160;<a href="ipopt_solve_retape.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interp_retape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
return&#160;<a href="omp_delete_array.xml" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.xml#ind.Return" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector:&#160;ind.Return</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Assignment.Return Reference" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Assignment.Return&#xA0;Reference</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Return Value" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Return Value" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Return Value" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Return Value" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Return Value" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Return Value" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Return&#xA0;Value</a><br/>
return<b>_</b>memory&#160;<a href="omp_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc</a><br/>
returns&#160;<a href="elapsed_seconds_c.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.xml" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
reuse&#160;<a href="get_sacado.sh.xml#Reuse" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Reuse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#Reuse" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Reuse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#Reuse" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Reuse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#Reuse" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Reuse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#Reuse" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Reuse</a><br/>
rev<b>_</b>hes<b>_</b>sparse&#160;<a href="old_atomic.xml#rev_hes_sparse" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;rev_hes_sparse</a><br/>
rev<b>_</b>jac<b>_</b>sparse&#160;<a href="old_atomic.xml#rev_jac_sparse" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;rev_jac_sparse</a><br/>
rev<b>_</b>sparse<b>_</b>hes&#160;<a href="atomic_mat_mul.hpp.xml#rev_sparse_hes" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function.rev_sparse_hes" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Private.rev_sparse_hes" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Private.rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.rev_sparse_hes" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#rev_sparse_hes" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function.rev_sparse_hes" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function.rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#rev_sparse_hes" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function.rev_sparse_hes" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#rev_sparse_hes" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function.rev_sparse_hes" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#rev_sparse_hes" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_hes</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#rev_sparse_hes" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_hes</a><br/>
rev<b>_</b>sparse<b>_</b>jac&#160;<a href="optimize.xml#Atomic Functions.rev_sparse_jac" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Atomic&#xA0;Functions.rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#rev_sparse_jac" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function.rev_sparse_jac" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Private.rev_sparse_jac" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Private.rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.rev_sparse_jac" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#rev_sparse_jac" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function.rev_sparse_jac" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function.rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#rev_sparse_jac" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function.rev_sparse_jac" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#rev_sparse_jac" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function.rev_sparse_jac" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#rev_sparse_jac" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#rev_sparse_jac" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#rev_sparse_jac" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_jac</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#rev_sparse_jac" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;rev_sparse_jac</a><br/>
reverse&#160;<a href="old_mat_mul.hpp.xml#Reverse Partials One Order" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Reverse&#xA0;Partials&#xA0;One&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#reverse" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#ty.reverse" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;ty.reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_identity.xml#Reverse Sweep" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity:&#160;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_identity.xml" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_reverse.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt_reverse.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_reverse.xml" target="_top">Logarithm&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_reverse.xml" target="_top">Exponential&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Mode: Forward or Reverse" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Mode:&#xA0;Forward&#xA0;or&#xA0;Reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize_reverse_active.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Reverse&#xA0;Activity&#xA0;Analysis</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_two.cpp.xml" target="_top">Second&#xA0;Partials&#xA0;Reverse&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml#Forward or Reverse" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine:&#160;Forward&#xA0;or&#xA0;Reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="drivers.xml" target="_top">First&#xA0;and&#xA0;Second&#xA0;Derivatives:&#xA0;Easy&#xA0;Drivers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_hes.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_jac.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_three.cpp.xml" target="_top">Third&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.cpp.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;ModeExample&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse.xml" target="_top">Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Reverse Mode" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#reverse" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Reverse Matrix Multiply" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Reverse&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function.reverse" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Private.reverse" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Private.reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Reverse Mode" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Private.reverse" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Private.reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Theory.Reverse" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Theory.Reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Private.reverse" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Private.reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Theory.Reverse" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Theory.Reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.reverse" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#reverse" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function.reverse" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#reverse" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function.reverse" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#reverse" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#reverse" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;reverse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_cppad.xml" target="_top">exp_eps:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_cppad.xml" target="_top">exp_2:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="introduction.xml#Preface.Reverse Mode" target="_top">An&#xA0;Introduction&#xA0;by&#xA0;Example&#xA0;to&#xA0;Algorithmic&#xA0;Differentiation:&#160;Preface.Reverse&#xA0;Mode</a><br/>
reverse<b>:</b>&#160;<a href="atomic_reverse.cpp.xml" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
revone&#160;<a href="revone.xml#RevOne Uses Forward" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;RevOne&#xA0;Uses&#xA0;Forward</a><br/>
revsparsehes&#160;<a href="sparsity_sub.cpp.xml#RevSparseHes" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test:&#160;RevSparseHes</a><br/>
revsparsity&#160;<a href="speed_main.xml#Sparsity Options.revsparsity" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Sparsity&#xA0;Options.revsparsity</a><br/>
revtwo&#160;<a href="revtwo.xml#RevTwo Uses Forward" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;RevTwo&#xA0;Uses&#xA0;Forward</a><br/>
rhs&#160;<a href="lu_vec_ad.cpp.xml#Rhs" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;Rhs</a><br/>
right&#160;<a href="set_union.xml#right" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets:&#160;right</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Right Operand Element Index" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Right&#xA0;Operand&#xA0;Element&#xA0;Index</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#right" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;right</a><br/>
romberg&#160;<a href="rombergmul.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="romberg_one.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
root&#160;<a href="sqrt_reverse.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sqrt_forward.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sqrt.xml" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt</a><br/>
rosen34<b>:</b>&#160;<a href="rosen_34.cpp.xml" target="_top">Rosen34:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
rosenbrock&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
routine&#160;<a href="repeat_det_by_minor_c.xml" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="correct_det_by_minor_c.xml" target="_top">Correctness&#xA0;Test&#xA0;of&#xA0;det_by_minor&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine</a><br/>
routines&#160;<a href="old_atomic.xml#Syntax Function.Callback Routines" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function.Callback&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Library Routines" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Library&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Speed Utility Routines" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Speed&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exampleutility.xml" target="_top">Utility&#xA0;Routines&#xA0;used&#xA0;by&#xA0;CppAD&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#General Numerical Routines" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;General&#xA0;Numerical&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
row&#160;<a href="sparse_hes_fun.xml#row" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;row</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#row" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;row</a><br/>
&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml#row" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;row</a><br/>
&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#row" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;row</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#row, col" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;row,&#xA0;col</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#row, col" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;row,&#xA0;col</a><br/>
rt&#160;<a href="atomic_rev_sparse_jac.xml#Implementation.rt" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.rt</a><br/>
run&#160;<a href="speed_example.cpp.xml" target="_top">Run&#xA0;the&#xA0;Speed&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;<a href="speedtest.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;<a href="speed_test.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction</a><br/>
runge<b>-</b>kutta&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
runge45<b>:</b>&#160;<a href="runge45_2.cpp.xml" target="_top">Runge45:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45_1.cpp.xml" target="_top">Runge45:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
running&#160;<a href="ipopt_nlp_ode_run.hpp.xml" target="_top">Driver&#xA0;for&#xA0;Running&#xA0;the&#xA0;Ipopt&#xA0;ODE&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_sacado.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_fadbad.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_cppad.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;CppAD:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_adolc.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_double.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Functions&#xA0;in&#xA0;Double:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_example.cpp.xml#Running Tests" target="_top">Run&#xA0;the&#xA0;Speed&#xA0;Examples:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.cpp.xml#Running Tests" target="_top">CppAD&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.xml#Running Examples" target="_top">Examples:&#160;Running&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml#Running This Program" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest:&#160;Running&#xA0;This&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#Running Tests" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml#Running" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Running</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml#Running Tests" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Running" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Running</a><br/>

<b><big><a name="S">S</a></big></b>
<br/>
Sacado&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
SimpleVector&#160;<a href="check_simple_vector.cpp.xml" target="_top">The&#xA0;CheckSimpleVector&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
SparseHessian&#160;<a href="sparse_hessian.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
SparseJacobian&#160;<a href="sparse_jacobian.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver</a><br/>
SpeedTest&#160;<a href="speedtest.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results</a><br/>
sacado&#160;<a href="sacado_sparse_jacobian.cpp.xml" target="_top">sacado&#xA0;Speed:&#xA0;sparse_jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_sparse_hessian.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_poly.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_ode.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_mat_mul.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_sacado.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;download<b>&#xA0;</b>and<b>&#xA0;</b>install&#160;<a href="get_sacado.sh.xml" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory</a><br/>
sacado<b>_</b>dir&#160;<a href="auto_tools.xml#sacado_dir" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;sacado_dir</a><br/>
sacado<b>_</b>prefix&#160;<a href="speed_sacado.xml#sacado_prefix" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado:&#160;sacado_prefix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml#sacado_prefix" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests:&#160;sacado_prefix</a><br/>
same&#160;<a href="multi_thread.xml#Same Thread" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;Same&#xA0;Thread</a><br/>
scalar&#160;<a href="det_by_minor.xml#Scalar" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml#Scalar" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#Scalar" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Scalar" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Scalar" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Scalar" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Scalar" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Scalar" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml#Scalar" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;Scalar</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Scalar Function" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Scalar&#xA0;Function</a><br/>
scur&#160;<a href="odeerrcontrol.xml#scur" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;scur</a><br/>
second&#160;<a href="sacado_poly.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Second Start AD&lt; AD&lt;double&gt; &gt;" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Second&#xA0;Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_two.cpp.xml" target="_top">Second&#xA0;Partials&#xA0;Reverse&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_two.cpp.xml" target="_top">Subset&#xA0;of&#xA0;Second&#xA0;Order&#xA0;Partials:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml" target="_top">Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="drivers.xml" target="_top">First&#xA0;and&#xA0;Second&#xA0;Derivatives:&#xA0;Easy&#xA0;Drivers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#Second Order" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Second&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.cpp.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;ModeExample&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#dw.Second Order Partials" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;dw.Second&#xA0;Order&#xA0;Partials</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Second Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Second&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence.Second" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Second</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Second Order Expansion" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Second&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence.Second" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Second</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Second Order Expansion" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Second&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation</a><br/>
seconds&#160;<a href="elapsed_seconds_c.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="microsoft_timer.xml" target="_top">Microsoft&#xA0;Version&#xA0;of&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.cpp.xml" target="_top">Elapsed&#xA0;Seconds:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
seconds<b>:</b>&#160;<a href="elapsed_seconds.cpp.xml" target="_top">Elapsed&#xA0;Seconds:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
see&#160;<a href="opt_val_hes.xml#See Also" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="benderquad.xml#See Also" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="to_string.xml#See Also" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="pow_int.xml#See Also" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="optimize_nest_conditional.cpp.xml#See Also" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Nested&#xA0;Conditional&#xA0;Expressions:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="optimize_conditional_skip.cpp.xml#See Also" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Conditional&#xA0;Expressions:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="optimize_compare_op.cpp.xml#See Also" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Comparison&#xA0;Operators:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="sparse_sub_hes.cpp.xml#See Also" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml#See Also" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="sparsity_sub.cpp.xml#See Also" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml#See Also" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="number_skip.xml#Syntax.See Also" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped:&#160;Syntax.See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="capacity_order.xml#Syntax.See Also" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;Syntax.See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="size_order.xml#Syntax.See Also" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored:&#160;Syntax.See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="seq_property.xml#Syntax.See Also" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;Syntax.See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#See Also" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#See Also" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#See Also" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml#See Also" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml#See Also" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="checkpoint.xml#See Also" target="_top">Checkpointing&#xA0;Functions:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="interp_retape.cpp.xml#See Also" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml#See Also" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="cond_exp.cpp.xml#See Also" target="_top">Conditional&#xA0;Expressions:&#xA0;Example&#xA0;and&#xA0;Test:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="pow.xml#See Also" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="var2par.xml#See Also" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="ad_to_string.xml#See Also" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String:&#160;See&#xA0;Also</a><br/>
&#160;&#160;&#160;&#160;<a href="value.xml#See Also" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;See&#xA0;Also</a><br/>
seed&#160;<a href="uniform_01_c.xml#seed" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;seed</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml#seed" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;seed</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#seed" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;seed</a><br/>
semantics&#160;<a href="cppad_vector.xml#Assignment.Move Semantics" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Assignment.Move&#xA0;Semantics</a><br/>
sequence&#160;<a href="wish_list.xml#Operation Sequence" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Operation.Sequence" target="_top">Glossary:&#160;Operation.Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Float.Operation Sequence" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Float.Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Operation Sequence" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Operation Sequence" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml#Operation Sequence" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.xml" target="_top">Abort&#xA0;Recording&#xA0;of&#xA0;an&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Example.Sequence Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Example.Sequence&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Sequence Constructor" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Sequence&#xA0;Constructor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parvar.xml#Operation Sequence" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Operation Sequence" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml#Operation Sequence" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml#Operation Sequence" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Operation Sequence" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Operation Sequence" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.xml#Operation Sequence" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml#Operation Sequence" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Operation Sequence" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Operation Sequence" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml#Operation Sequence" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml#Operation Sequence" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.xml#Operation Sequence" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml#Operation Sequence" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#Operation Sequence" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.xml#Operation Sequence" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Operation Sequence" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
sequential&#160;<a href="ta_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode</a><br/>
set&#160;<a href="old_mat_mul.hpp.xml#Set Union" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Set&#xA0;Union</a><br/>
&#160;&#160;&#160;&#160;<a href="old_max_num_threads.xml" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;<a href="set_union.cpp.xml" target="_top">Set&#xA0;Union:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_option.xml" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options</a><br/>
set<b>_</b>max<b>_</b>num<b>_</b>threads&#160;<a href="omp_max_num_threads.xml#set_max_num_threads" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;set_max_num_threads</a><br/>
set<b>_</b>sparsity<b>_</b>enum&#160;<a href="atomic_set_sparsity.cpp.xml#set_sparsity_enum" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;set_sparsity_enum</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_option.xml#atomic_sparsity.set_sparsity_enum" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options:&#160;atomic_sparsity.set_sparsity_enum</a><br/>
set<b>_</b>union&#160;<a href="utility.xml#Miscellaneous.set_union" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.set_union</a><br/>
sets&#160;<a href="glossary.xml#Sparsity Pattern.Vector of Sets" target="_top">Glossary:&#160;Sparsity&#xA0;Pattern.Vector&#xA0;of&#xA0;Sets</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="set_union.xml" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
setup&#160;<a href="omp_max_thread.xml" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
shampine&#160;<a href="bib.xml#Shampine, L.F." target="_top">Bibliography:&#160;Shampine,&#xA0;L.F.</a><br/>
sign&#160;<a href="luratio.xml#sign" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;sign</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#sign" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;sign</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#sign" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;sign</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#sign" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;sign</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#sign" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;sign</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#sign" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;sign</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#sign" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;sign</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sign.cpp.xml" target="_top">Sign&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sign.xml" target="_top">The&#xA0;Sign:&#xA0;sign</a><br/>
sign<b>:</b>&#160;<a href="sign.xml" target="_top">The&#xA0;Sign:&#xA0;sign</a><br/>
signdet&#160;<a href="opt_val_hes.xml#signdet" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;signdet</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#signdet" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;signdet</a><br/>
simple&#160;<a href="old_usead_1.cpp.xml#Simple Case" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives:&#160;Simple&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Example.Simple" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Example.Simple</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_ode_speed.cpp.xml" target="_top">Speed&#xA0;Test&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_check.cpp.xml" target="_top">Correctness&#xA0;Check&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#Simple Representation" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_vector.cpp.xml" target="_top">Simple&#xA0;Vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Simple Vector Template Class" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Simple&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml#EqualOpSeq.The Simple Case" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;EqualOpSeq.The&#xA0;Simple&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.cpp.xml" target="_top">Simple&#xA0;Checkpointing:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
simple<b>_</b>ad&#160;<a href="thread_test.cpp.xml#simple_ad" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;simple_ad</a><br/>
simulate&#160;<a href="uniform_01_c.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
simulated&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulated Measurement Values" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulated&#xA0;Measurement&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulated Measurement Values" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulated&#xA0;Measurement&#xA0;Values</a><br/>
simulation&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulation Parameter Values" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulation&#xA0;Parameter&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulation Analytic Solution" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulation&#xA0;Analytic&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulation Parameter Values" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulation&#xA0;Parameter&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulation Analytic Solution" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulation&#xA0;Analytic&#xA0;Solution</a><br/>
simultaneous&#160;<a href="ipopt_nlp_ode_problem.xml#Simultaneous Method" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Simultaneous&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode.xml" target="_top">Example&#xA0;Simultaneous&#xA0;Solution&#xA0;of&#xA0;Forward&#xA0;and&#xA0;Inverse&#xA0;Problem</a><br/>
sin&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="sin.cpp.xml" target="_top">The&#xA0;AD&#xA0;sin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="sin.xml" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin</a><br/>
sine&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sinh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sin.xml" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin.xml" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acos.xml" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos</a><br/>
sinh&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;sinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sinh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh</a><br/>
sini&#160;<a href="odegearcontrol.xml#sini" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;sini</a><br/>
size&#160;<a href="repeat_det_by_minor_c.xml#size" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times:&#160;size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Size" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml#size" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml#size" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml#size" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#size" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#size" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#size" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Assignment.Check Size" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Assignment.Check&#xA0;Size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Size" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#test.size" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;test.size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Test.size" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Test.size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#test.size" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;test.size</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#size" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;size</a><br/>
size<b>_</b>forward<b>_</b>bool&#160;<a href="forsparsejac.xml#f.size_forward_bool" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;f.size_forward_bool</a><br/>
size<b>_</b>forward<b>_</b>set&#160;<a href="forsparsejac.xml#f.size_forward_set" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;f.size_forward_set</a><br/>
size<b>_</b>min&#160;<a href="omp_create_array.xml#size_min" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;size_min</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml#size_min" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;size_min</a><br/>
size<b>_</b>op&#160;<a href="seq_property.xml#size_op" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;size_op</a><br/>
size<b>_</b>op<b>_</b>arg&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#size_op_arg" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;size_op_arg</a><br/>
size<b>_</b>op<b>_</b>seq&#160;<a href="seq_property.xml#size_op_seq" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;size_op_seq</a><br/>
size<b>_</b>out&#160;<a href="omp_create_array.xml#size_out" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;size_out</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml#size_out" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;size_out</a><br/>
size<b>_</b>par&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#size_par" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;size_par</a><br/>
size<b>_</b>t&#160;<a href="vecad.xml#size_t Indexing" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;size_t&#xA0;Indexing</a><br/>
size<b>_</b>taylor&#160;<a href="fundeprecated.xml#size_taylor" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;size_taylor</a><br/>
size<b>_</b>text&#160;<a href="seq_property.xml#size_text" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;size_text</a><br/>
size<b>_</b>VecAD&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
size<b>_</b>var&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#size_var" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;size_var</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#size_var" target="_top">Checkpointing&#xA0;Functions:&#160;size_var</a><br/>
size<b>_</b>vec&#160;<a href="speed_test.xml#size_vec" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;size_vec</a><br/>
size<b>_</b>vecad&#160;<a href="seq_property.xml#size_VecAD" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;size_VecAD</a><br/>
sizevector&#160;<a href="luratio.xml#SizeVector" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;SizeVector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#SizeVector" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;SizeVector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#SizeVector" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;SizeVector</a><br/>
sizing&#160;<a href="simplevector.xml#Sizing Constructor" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Sizing&#xA0;Constructor</a><br/>
skipped&#160;<a href="number_skip.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped</a><br/>
skipped<b>:</b>&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
smax&#160;<a href="odegearcontrol.xml#smax" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;smax</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#smax" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;smax</a><br/>
smin&#160;<a href="odegearcontrol.xml#smin" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;smin</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#smin" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;smin</a><br/>
software&#160;<a href="license.xml" target="_top">Your&#xA0;License&#xA0;for&#xA0;the&#xA0;CppAD&#xA0;Software</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Software Guidelines" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Software&#xA0;Guidelines</a><br/>
solution&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulation Analytic Solution" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulation&#xA0;Analytic&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode.xml" target="_top">Example&#xA0;Simultaneous&#xA0;Solution&#xA0;of&#xA0;Forward&#xA0;and&#xA0;Inverse&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#solution" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_ode.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_ode.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml#ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Derivative of ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Derivative&#xA0;of&#xA0;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Derivative of ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Derivative&#xA0;of&#xA0;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#ODE Solution" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Solution Method" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Solution&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulation Analytic Solution" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulation&#xA0;Analytic&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#solution" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml#Solution" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml#Solution" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Solution</a><br/>
solve&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ludetandsolve.xml" target="_top">Compute&#xA0;Determinants&#xA0;and&#xA0;Solve&#xA0;Equations&#xA0;by&#xA0;LU&#xA0;Factorization</a><br/>
solver&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml#ODE Solver" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml#ODE Solver" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test:&#160;ODE&#xA0;Solver</a><br/>
solver<b>:</b>&#160;<a href="ode_taylor.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
solvers&#160;<a href="odegearcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers</a><br/>
some&#160;<a href="numeric_ad.xml" target="_top">Some&#xA0;Numerical&#xA0;AD&#xA0;Utilities</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="utility.xml" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities</a><br/>
sort&#160;<a href="index_sort.xml" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector</a><br/>
sort<b>:</b>&#160;<a href="index_sort.cpp.xml" target="_top">Index&#xA0;Sort:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
sorting&#160;<a href="utility.xml#Miscellaneous.Sorting Indices" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Sorting&#xA0;Indices</a><br/>
source&#160;<a href="main_compare_c.xml#Source Code" target="_top">Main&#xA0;Program&#xA0;For&#xA0;Comparing&#xA0;C&#xA0;and&#xA0;C++&#xA0;Speed:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_det_by_minor_c.xml#Source Code" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds_c.xml#Source Code" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="repeat_det_by_minor_c.xml#Source Code" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="correct_det_by_minor_c.xml#Source Code" target="_top">Correctness&#xA0;Test&#xA0;of&#xA0;det_by_minor&#xA0;Routine:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01_c.xml#Source Code" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor_c.xml#Source Code" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor_c.xml#Source Code" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml#Begin Source" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Begin&#xA0;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.hpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml#Source" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Source" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Source" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.hpp.xml" target="_top">Source:&#xA0;uniform_01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml#Source Code" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.hpp.xml" target="_top">Source:&#xA0;sparse_hes_fun</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#Source Code" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.hpp.xml" target="_top">Source:&#xA0;sparse_jac_fun</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#Source Code" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.hpp.xml" target="_top">Source:&#xA0;ode_evaluate</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Source Code" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.hpp.xml" target="_top">Source:&#xA0;mat_sum_sq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml#Source Code" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.hpp.xml" target="_top">Source:&#xA0;det_grad_33</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml#Source Code" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.hpp.xml" target="_top">Source:&#xA0;det_33</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml#Source Code" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.hpp.xml" target="_top">Source:&#xA0;det_by_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml#Source Code" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.hpp.xml" target="_top">Source:&#xA0;det_of_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml#Source Code" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.hpp.xml" target="_top">Source:&#xA0;det_by_lu</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#Source Code" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Source Code" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Source" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Source" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.cpp.xml#Source" target="_top">Multiple&#xA0;Level&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_plugin.hpp.xml" target="_top">Source&#xA0;Code&#xA0;for&#xA0;eigen_plugin.hpp</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Source" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Source Code" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Source Code" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Source Code" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Source Code" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Source Code" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml#Source Code" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml#Source Code" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_invert.hpp.xml" target="_top">Source:&#xA0;LuInvert</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml#Source" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_factor.hpp.xml" target="_top">Source:&#xA0;LuFactor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#Source" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_solve.hpp.xml" target="_top">Source:&#xA0;LuSolve</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Source" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.hpp.xml" target="_top">Source:&#xA0;Poly</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Source" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Source" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml#Source" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml#Source" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#Source" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml#Source" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml#Source" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml#Source" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_example.cpp.xml#Source Code" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml#Source Code" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#Source" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml#Source" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml#Source Code" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Source&#xA0;Code</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code</a><br/>
source<b>:</b>&#160;<a href="uniform_01.hpp.xml" target="_top">Source:&#xA0;uniform_01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.hpp.xml" target="_top">Source:&#xA0;sparse_hes_fun</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.hpp.xml" target="_top">Source:&#xA0;sparse_jac_fun</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.hpp.xml" target="_top">Source:&#xA0;ode_evaluate</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.hpp.xml" target="_top">Source:&#xA0;mat_sum_sq</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.hpp.xml" target="_top">Source:&#xA0;det_grad_33</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.hpp.xml" target="_top">Source:&#xA0;det_33</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.hpp.xml" target="_top">Source:&#xA0;det_by_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.hpp.xml" target="_top">Source:&#xA0;det_of_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.hpp.xml" target="_top">Source:&#xA0;det_by_lu</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_invert.hpp.xml" target="_top">Source:&#xA0;LuInvert</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_factor.hpp.xml" target="_top">Source:&#xA0;LuFactor</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_solve.hpp.xml" target="_top">Source:&#xA0;LuSolve</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.hpp.xml" target="_top">Source:&#xA0;Poly</a><br/>
spare&#160;<a href="sparse_hessian.cpp.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.cpp.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
sparse&#160;<a href="sacado_sparse_hessian.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_sparse_hessian.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_jacobian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_hessian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_jacobian.cpp.xml" target="_top">adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_hessian.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_jacobian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_hessian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#options.Sparse" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;options.Sparse</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_sub_hes.cpp.xml" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.cpp.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.cpp.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_hes.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_jac.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
sparse<b>_</b>hes<b>_</b>fun&#160;<a href="sparse_hes_fun.hpp.xml" target="_top">Source:&#xA0;sparse_hes_fun</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.cpp.xml" target="_top">sparse_hes_fun:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian</a><br/>
sparse<b>_</b>hes<b>_</b>fun<b>:</b>&#160;<a href="sparse_hes_fun.cpp.xml" target="_top">sparse_hes_fun:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
sparse<b>_</b>jac<b>_</b>fun&#160;<a href="sparse_jac_fun.hpp.xml" target="_top">Source:&#xA0;sparse_jac_fun</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.cpp.xml" target="_top">sparse_jac_fun:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian</a><br/>
sparse<b>_</b>jac<b>_</b>fun<b>:</b>&#160;<a href="sparse_jac_fun.cpp.xml" target="_top">sparse_jac_fun:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
sparse<b>_</b>jacobian&#160;<a href="sacado_sparse_jacobian.cpp.xml" target="_top">sacado&#xA0;Speed:&#xA0;sparse_jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_sparse_jacobian.cpp.xml" target="_top">fadbad&#xA0;Speed:&#xA0;sparse_jacobian</a><br/>
sparsity&#160;<a href="wish_list.xml#Sparsity Patterns" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Sparsity Pattern" target="_top">Glossary:&#160;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Sparsity Options" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Sparsity&#xA0;Options</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bool_sparsity.cpp.xml" target="_top">Using&#xA0;vectorBool&#xA0;Sparsity&#xA0;To&#xA0;Conserve&#xA0;Memory:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_hes.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparsity_sub.cpp.xml" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_hes.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml#Entire Sparsity Pattern" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_jac.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#Entire Sparsity Pattern" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_jac.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#Entire Sparsity Pattern" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Entire&#xA0;Sparsity&#xA0;Pattern</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse.xml" target="_top">Calculating&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funeval.xml" target="_top">Evaluate&#xA0;ADFun&#xA0;Functions,&#xA0;Derivatives,&#xA0;and&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Assignment Operator.Sparsity Patterns" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Assignment&#xA0;Operator.Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#sparsity" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;sparsity</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#sparsity" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;sparsity</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#sparsity" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;sparsity</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#atomic_base.sparsity" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;atomic_base.sparsity</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Hessian Sparsity Patterns" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Hessian&#xA0;Sparsity&#xA0;Patterns</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#sparsity" target="_top">Checkpointing&#xA0;Functions:&#160;sparsity</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
sparsity<b>:</b>&#160;<a href="for_sparse_hes.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_hes.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_jac.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_jac.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
special&#160;<a href="wish_list.xml#Optimization.Special Operators" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Optimization.Special&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Special Cases" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Special&#xA0;Cases</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml#Special Case" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Special&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml#Special Case" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Special&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml#Special Case" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values:&#160;Special&#xA0;Case</a><br/>
specifications&#160;<a href="sacado_poly.cpp.xml#Specifications" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_ode.cpp.xml#Specifications" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_mat_mul.cpp.xml#Specifications" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml#Specifications" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml#Specifications" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml#Specifications" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_ode.cpp.xml#Specifications" target="_top">Fadbad&#xA0;Speed:&#xA0;Ode:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml#Specifications" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml#Specifications" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml#Specifications" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_jacobian.cpp.xml#Specifications" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_hessian.cpp.xml#Specifications" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml#Specifications" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml#Specifications" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_mat_mul.cpp.xml#Specifications" target="_top">CppAD&#xA0;Speed,&#xA0;Matrix&#xA0;Multiplication:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml#Specifications" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml#Specifications" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_jacobian.cpp.xml#Specifications" target="_top">adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_hessian.cpp.xml#Specifications" target="_top">Adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml#Specifications" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_ode.cpp.xml#Specifications" target="_top">Adolc&#xA0;Speed:&#xA0;Ode:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml#Specifications" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml#Specifications" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml#Specifications" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_jacobian.cpp.xml#Specifications" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_hessian.cpp.xml#Specifications" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_poly.cpp.xml#Specifications" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_ode.cpp.xml#Specifications" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml#Specifications" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version):&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml#Specifications" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml#Specifications" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Specifications</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
specified&#160;<a href="repeat_det_by_minor_c.xml" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Elements of Specified Type" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Elements&#xA0;of&#xA0;Specified&#xA0;Type</a><br/>
speed&#160;<a href="main_compare_c.xml" target="_top">Main&#xA0;Program&#xA0;For&#xA0;Comparing&#xA0;C&#xA0;and&#xA0;C++&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_c.xml" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_ode_speed.cpp.xml" target="_top">Speed&#xA0;Test&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml#Allocation Speed" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Allocation&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#Compilation Speed" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Compilation&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Speed" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_poly.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_ode.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_mat_mul.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_sacado.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_ode.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_fadbad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_jacobian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_hessian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed,&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_cppad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_jacobian.cpp.xml" target="_top">adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_hessian.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_ode.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_adolc.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_jacobian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_hessian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_poly.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_ode.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_double.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Functions&#xA0;in&#xA0;Double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Speed Utility Routines" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Speed&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml#Speed Main Program" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Speed&#xA0;Main&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml" target="_top">Speed&#xA0;Testing&#xA0;Utilities</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Speed Results" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Speed&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#test.speed" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;test.speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed.xml" target="_top">Speed&#xA0;Test&#xA0;an&#xA0;Operator&#xA0;Overloading&#xA0;AD&#xA0;Package</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_example.cpp.xml" target="_top">Run&#xA0;the&#xA0;Speed&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#Allocation Speed" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Allocation&#xA0;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml#Speed" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment:&#160;Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Speed Test of Implementation" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Speed&#xA0;Test&#xA0;of&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Speed Testing" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Speed&#xA0;Testing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml#count.Speed" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;count.Speed</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#Speed and Memory" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;Speed&#xA0;and&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml#Speed Tests" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests:&#160;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml#Speed Tests" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests:&#160;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml#Speed Tests" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;compare<b>&#xA0;</b>C<b>&#xA0;</b>and<b>&#xA0;</b>C<b>++</b>&#160;<a href="compare_c.xml" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++</a><br/>
speed<b>:</b>&#160;<a href="sacado_sparse_jacobian.cpp.xml" target="_top">sacado&#xA0;Speed:&#xA0;sparse_jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_sparse_hessian.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_poly.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_ode.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_mat_mul.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_minor.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_sparse_jacobian.cpp.xml" target="_top">fadbad&#xA0;Speed:&#xA0;sparse_jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_sparse_hessian.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_poly.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_ode.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_mat_mul.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_minor.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_jacobian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_sparse_hessian.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_poly.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ode.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_minor.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_jacobian.cpp.xml" target="_top">adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_sparse_hessian.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_poly.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_ode.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Ode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_mat_mul.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_minor.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_jacobian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_sparse_hessian.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_poly.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Evaluate&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_ode.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_minor.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
speed<b>_</b>test&#160;<a href="speed_test.cpp.xml" target="_top">speed_test:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results</a><br/>
speed<b>_</b>test<b>:</b>&#160;<a href="speed_test.cpp.xml" target="_top">speed_test:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
speedtest&#160;<a href="speed_program.cpp.xml" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest</a><br/>
sqrt&#160;<a href="sqrt_reverse.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sqrt_forward.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sqrt.cpp.xml" target="_top">The&#xA0;AD&#xA0;sqrt&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sqrt.xml" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt</a><br/>
square&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt_reverse.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt_forward.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt.xml" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt</a><br/>
squared<b>:</b>&#160;<a href="atomic_norm_sq.cpp.xml" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
st&#160;<a href="atomic_rev_sparse_jac.xml#Implementation.st" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.st</a><br/>
stability&#160;<a href="luratio.xml" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation</a><br/>
stack&#160;<a href="stack_machine.cpp.xml" target="_top">Example&#xA0;Differentiating&#xA0;a&#xA0;Stack&#xA0;Machine&#xA0;Interpreter</a><br/>
standard&#160;<a href="zdouble.xml#Syntax.Standard Math" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax.Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml#Standard Math Functions" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="set_union.xml" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Unary Standard Math" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#Unary Standard Math" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Standard Base Types" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Standard&#xA0;Base&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
start&#160;<a href="mul_level.xml#Procedure.Second Start AD&lt; AD&lt;double&gt; &gt;" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Second&#xA0;Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.Start AD&lt; AD&lt;double&gt; &gt; Recording" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.Start&#xA0;AD&lt;&#xA0;AD&lt;double&gt;&#xA0;&gt;&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml#Procedure.First Start AD&lt;double&gt;" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD:&#160;Procedure.First&#xA0;Start&#xA0;AD&lt;double&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Start Recording" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Start&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.hpp.xml#Start Class Definition" target="_top">Matrix&#xA0;Multiply&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Start Class Definition" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Start Class Definition" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Start Class Definition" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#Start Class Definition" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Start&#xA0;Class&#xA0;Definition</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
started&#160;<a href="atomic_get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Getting Started" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Getting&#xA0;Started</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
state&#160;<a href="capacity_order.xml#Original State" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;Original&#xA0;State</a><br/>
static&#160;<a href="old_atomic.xml#Syntax Function.Free Static Memory" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function.Free&#xA0;Static&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="memory_leak.xml" target="_top">Memory&#xA0;Leak&#xA0;Detection</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml" target="_top">Free&#xA0;Static&#xA0;Variables</a><br/>
status&#160;<a href="cppad_ipopt_nlp.xml#solution.status" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;solution.status</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#solution.status" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;solution.status</a><br/>
std&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml#std" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;std</a><br/>
std<b>::</b>complex<b>&lt;</b>double<b>&gt;</b>&#160;<a href="base_complex.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;</a><br/>
std<b>::</b>numeric<b>_</b>limits&#160;<a href="numeric_limits.xml#std::numeric_limits" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;std::numeric_limits</a><br/>
std<b>::</b>vector&#160;<a href="test_vector.xml#std::vector" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;std::vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml#std::vector" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;std::vector</a><br/>
stegun&#160;<a href="bib.xml#Abramowitz and Stegun" target="_top">Bibliography:&#160;Abramowitz&#xA0;and&#xA0;Stegun</a><br/>
step&#160;<a href="odeerrcontrol.xml#Method.step" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Method.step</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions.Step 4: Installation" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;4:&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions.Step 3: Check" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;3:&#xA0;Check</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions.Step 2: Cmake" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;2:&#xA0;Cmake</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="install.xml#Instructions.Step 1: Download" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions:&#160;Instructions.Step&#xA0;1:&#xA0;Download</a><br/>
steps&#160;<a href="reverse_checkpoint.cpp.xml#Processing Steps" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test:&#160;Processing&#xA0;Steps</a><br/>
stiff&#160;<a href="ode_stiff.cpp.xml" target="_top">A&#xA0;Stiff&#xA0;Ode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver</a><br/>
stop&#160;<a href="dependent.xml" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Stop Recording" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Stop&#xA0;Recording</a><br/>
storage&#160;<a href="luratio.xml#Matrix Storage" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;Matrix&#xA0;Storage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml#Storage Convention" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;Storage&#xA0;Convention</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml#Matrix Storage" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;Matrix&#xA0;Storage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#Matrix Storage" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;Matrix&#xA0;Storage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Matrix Storage" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Matrix&#xA0;Storage</a><br/>
storage<b>:</b>&#160;<a href="faq.xml#Tape Storage: Disk or Memory" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Tape&#xA0;Storage:&#xA0;Disk&#xA0;or&#xA0;Memory</a><br/>
store&#160;<a href="dependent.xml" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence</a><br/>
stored&#160;<a href="size_order.xml" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored</a><br/>
stream&#160;<a href="ad_output.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>
string&#160;<a href="ipopt_solve.xml#options.String" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;options.String</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_to_string.xml" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String</a><br/>
structure&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
subset&#160;<a href="sparse_sub_hes.cpp.xml" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml#Subset" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#160;Subset</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#Subset Hessian" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;Subset&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#p.Column Subset" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;p.Column&#xA0;Subset</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="for_two.cpp.xml" target="_top">Subset&#xA0;of&#xA0;Second&#xA0;Order&#xA0;Partials:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparsity_sub.cpp.xml" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
subsets&#160;<a href="cmake_check.xml#Subsets" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Subsets</a><br/>
subtract&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
subtraction&#160;<a href="reversetheory.xml#Binary Operators.Subtraction" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Binary&#xA0;Operators.Subtraction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Binary Operators.Subtraction" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Binary&#xA0;Operators.Subtraction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Derivative.Subtraction" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Derivative.Subtraction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Derivative.Subtraction" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Derivative.Subtraction</a><br/>
subtraction<b>:</b>&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
subversion&#160;<a href="download.xml#Current Version.Subversion" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Current&#xA0;Version.Subversion</a><br/>
suggestion&#160;<a href="base_require.xml#Integer.Suggestion" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Integer.Suggestion</a><br/>
sum&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>
&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml#sum" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;sum</a><br/>
&#160;&#160;&#160;&#160;<a href="optimize_cumulative_sum.cpp.xml" target="_top">Example&#xA0;Optimization&#xA0;and&#xA0;Cumulative&#xA0;Sum&#xA0;Operations</a><br/>
summation&#160;<a href="harmonic_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml#Summation" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;Summation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
sweep&#160;<a href="reverse_identity.xml#Reverse Sweep" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity:&#160;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev2.xml" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence.Sweep" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence.Sweep" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence.Sweep" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence.Sweep" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence.Sweep" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Operation Sequence.Sweep" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Sweep</a><br/>
sweeps&#160;<a href="exp_eps_cppad.xml" target="_top">exp_eps:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_cppad.xml" target="_top">exp_2:&#xA0;CppAD&#xA0;Forward&#xA0;and&#xA0;Reverse&#xA0;Sweeps</a><br/>
symbol&#160;<a href="faq.xml#Namespace.Test Vector Preprocessor Symbol" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Namespace.Test&#xA0;Vector&#xA0;Preprocessor&#xA0;Symbol</a><br/>
symbols&#160;<a href="addon.xml#Preprocessor Symbols" target="_top">CppAD&#xA0;Addons:&#160;Preprocessor&#xA0;Symbols</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="preprocessor.xml" target="_top">CppAD&#xA0;API&#xA0;Preprocessor&#xA0;Symbols</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml#Preprocessor Symbols" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms:&#160;Preprocessor&#xA0;Symbols</a><br/>
syntax&#160;<a href="luratio.xml#Syntax" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="opt_val_hes.xml#Syntax" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="benderquad.xml#Syntax" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_det_by_minor_c.xml#Syntax" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds_c.xml#Syntax" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="repeat_det_by_minor_c.xml#Syntax" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="correct_det_by_minor_c.xml#Syntax" target="_top">Correctness&#xA0;Test&#xA0;of&#xA0;det_by_minor&#xA0;Routine:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01_c.xml#Syntax" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor_c.xml#Syntax" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor_c.xml#Syntax" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_c.xml#Syntax" target="_top">Compare&#xA0;Speed&#xA0;of&#xA0;C&#xA0;and&#xA0;C++:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml#Syntax" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml#Syntax" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Syntax Function" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#Syntax" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="test_vector.xml#Syntax" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="epsilon.xml#Syntax" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="memory_leak.xml#Syntax" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_max_num_threads.xml#Syntax" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_efficient.xml#Syntax" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml#Syntax" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml#Syntax" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml#Syntax" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml#Syntax" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml#Syntax" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml#Syntax" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml#Syntax" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml#Syntax" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml#Syntax" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml#Syntax" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.xml#Syntax" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml#Syntax" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_thread.xml#Syntax" target="_top">OpenMP&#xA0;Parallel&#xA0;Setup:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="comparechange.xml#Syntax" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fundeprecated.xml#Syntax" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_alloc_mat.xml#Syntax" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml#Syntax" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml#Syntax" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml#Syntax" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.xml#Syntax" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml#Syntax" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml#Syntax" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml#Syntax" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml#Syntax" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.xml#Syntax" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#Syntax" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="microsoft_timer.xml#Syntax" target="_top">Microsoft&#xA0;Version&#xA0;of&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#Syntax" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml#Syntax" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml#Syntax" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml#Syntax" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml#Syntax" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="set_union.xml#Syntax" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#Syntax" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.xml#Syntax" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_all.xml#Syntax" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml#Syntax" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml#Syntax" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml#Syntax" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml#Syntax" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_hold_memory.xml#Syntax" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml#Syntax" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml#Syntax" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#Syntax" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml#Syntax" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml#Syntax" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_num_threads.xml#Syntax" target="_top">Get&#xA0;Number&#xA0;of&#xA0;Threads:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml#Syntax" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.xml#Syntax" target="_top">A&#xA0;Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#Syntax" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Syntax" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Syntax" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Syntax" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Syntax" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Syntax" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.xml#Syntax" target="_top">Multi-dimensional&#xA0;Romberg&#xA0;Integration:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rombergone.xml#Syntax" target="_top">One&#xA0;DimensionalRomberg&#xA0;Integration:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="luinvert.xml#Syntax" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lufactor.xml#Syntax" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lusolve.xml#Syntax" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Syntax" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml#Syntax" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml#nan(zero).Syntax" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;nan(zero).Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml#Syntax" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml#Syntax" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checknumerictype.xml#Syntax" target="_top">Check&#xA0;NumericType&#xA0;Class&#xA0;Concept:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml#Syntax" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#Syntax" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Syntax" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#Syntax" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml#Syntax" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_assert.xml#Syntax" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="errorhandler.xml#Syntax" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Syntax" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml#Syntax" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml#Syntax" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#Syntax" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml#Syntax" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml#Syntax" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic.cpp.xml#Syntax" target="_top">Multi-Threaded&#xA0;Implementation&#xA0;of&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#Syntax" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parallel_ad.xml#Syntax" target="_top">Enable&#xA0;AD&#xA0;Calculations&#xA0;During&#xA0;Parallel&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.xml#Syntax" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Syntax" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml#Syntax" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#Syntax" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#Syntax" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml#Syntax" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml#Syntax" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml#Syntax" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml#Syntax" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml#Syntax" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml#Syntax" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml#Syntax" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml#Syntax" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#Syntax" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#Syntax" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#Syntax" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#Syntax" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml#Syntax" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.xml#Syntax" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml#Syntax" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml#Syntax" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml#Syntax" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Syntax" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Syntax" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml#Syntax" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml#Syntax" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml#Syntax" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="seq_property.xml#Syntax" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.xml#Syntax" target="_top">Abort&#xA0;Recording&#xA0;of&#xA0;an&#xA0;Operation&#xA0;Sequence:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml#Syntax" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Syntax" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#Syntax" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Syntax" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml#Syntax" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Syntax" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml#Syntax" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml#Syntax" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parvar.xml#Syntax" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Syntax" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml#Syntax" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare.xml#Syntax" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml#Syntax" target="_top">Free&#xA0;Static&#xA0;Variables:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml#Syntax" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml#Syntax" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Syntax" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.xml#Syntax" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.xml#Syntax" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.xml#Syntax" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml#Syntax" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_option.xml#Syntax" target="_top">Set&#xA0;Atomic&#xA0;Function&#xA0;Options:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#Syntax" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Syntax" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.xml#Syntax" target="_top">Checkpointing&#xA0;Functions:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml#Syntax" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Syntax" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Syntax" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="azmul.xml#Syntax" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="pow.xml#Syntax" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml#Syntax" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sign.xml#Syntax" target="_top">The&#xA0;Sign:&#xA0;sign:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log1p.xml#Syntax" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml#Syntax" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf.xml#Syntax" target="_top">The&#xA0;Error&#xA0;Function:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml#Syntax" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml#Syntax" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml#Syntax" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml#Syntax" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.xml#Syntax" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan.xml#Syntax" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt.xml#Syntax" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sinh.xml#Syntax" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin.xml#Syntax" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log10.xml#Syntax" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log.xml#Syntax" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp.xml#Syntax" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cosh.xml#Syntax" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cos.xml#Syntax" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.xml#Syntax" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin.xml#Syntax" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos.xml#Syntax" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml#Syntax" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml#Syntax" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml#Syntax" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml#Syntax" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml#Syntax" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml#Syntax" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml#Syntax" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_output.xml#Syntax" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_input.xml#Syntax" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_to_string.xml#Syntax" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#Syntax" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.xml#Syntax" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.xml#Syntax" target="_top">AD&#xA0;Assignment&#xA0;Operator:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.xml#Syntax" target="_top">AD&#xA0;Constructors:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#Syntax" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#Syntax" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_sacado.sh.xml#Syntax" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Sacado&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_ipopt.sh.xml#Syntax" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Ipopt&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_fadbad.sh.xml#Syntax" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Fadbad&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_eigen.sh.xml#Syntax" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Eigen&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_colpack.sh.xml#Syntax" target="_top">Download&#xA0;and&#xA0;Install&#xA0;ColPack&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_adolc.sh.xml#Syntax" target="_top">Download&#xA0;and&#xA0;Install&#xA0;Adolc&#xA0;in&#xA0;Build&#xA0;Directory:&#160;Syntax</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml#Syntax" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms:&#160;Syntax</a><br/>
systems&#160;<a href="elapsed_seconds.xml#Microsoft Systems" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds:&#160;Microsoft&#xA0;Systems</a><br/>

<b><big><a name="T">T</a></big></b>
<br/>
Taylor&#160;<a href="ode_taylor.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
tan&#160;<a href="old_tan.cpp.xml" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="tan_reverse.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="tan_forward.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="atan2.xml" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="tan.cpp.xml" target="_top">The&#xA0;AD&#xA0;tan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="tan.xml" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan</a><br/>
tangent&#160;<a href="old_atomic.xml#Example.Tangent Function" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Example.Tangent&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_reverse.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_reverse.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan2.xml" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tanh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan.xml" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan.xml" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan</a><br/>
tanh&#160;<a href="old_tan.cpp.xml" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;tanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tanh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh</a><br/>
tape&#160;<a href="glossary.xml#Tape" target="_top">Glossary:&#160;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Tape Storage: Disk or Memory" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Tape&#xA0;Storage:&#xA0;Disk&#xA0;or&#xA0;Memory</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.xml" target="_top">Abort&#xA0;Recording&#xA0;of&#xA0;an&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interp_retape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tape_index.cpp.xml" target="_top">Taping&#xA0;Array&#xA0;Index&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
tape<b>_</b>addr<b>_</b>type&#160;<a href="auto_tools.xml#tape_addr_type" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;tape_addr_type</a><br/>
tape<b>_</b>id<b>_</b>type&#160;<a href="auto_tools.xml#tape_id_type" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;tape_id_type</a><br/>
taping&#160;<a href="wish_list.xml#Optimization.Taping" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Optimization.Taping</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="dependent.xml#Taping" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;Taping</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tape_index.cpp.xml" target="_top">Taping&#xA0;Array&#xA0;Index&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
taping<b>:</b>&#160;<a href="mul_level_adolc.cpp.xml" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
taylor&#160;<a href="glossary.xml#Taylor Coefficient" target="_top">Glossary:&#160;Taylor&#xA0;Coefficient</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml#Taylor Notation" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode:&#160;Taylor&#xA0;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_forward.xml#Taylor Coefficients Recursion" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_forward.xml" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml#Taylor Coefficients Recursion" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml#Taylor Coefficients Recursion" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml#Taylor Coefficients Recursion" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml#Taylor Coefficients Recursion" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory:&#160;Taylor&#xA0;Coefficients&#xA0;Recursion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Taylor Coefficients Recursion Formula" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Taylor&#xA0;Coefficients&#xA0;Recursion&#xA0;Formula</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Taylor Notation" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Taylor&#xA0;Notation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_three.cpp.xml#Taylor Coefficients" target="_top">Third&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor&#xA0;Coefficients</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.cpp.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficient&#xA0;Memory&#xA0;Allocation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficients&#xA0;Memory&#xA0;Allocation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="size_order.xml" target="_top">Number&#xA0;Taylor&#xA0;Coefficient&#xA0;Orders&#xA0;Currently&#xA0;Stored</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funconstruct.xml#Assignment Operator.Taylor Coefficients" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;Assignment&#xA0;Operator.Taylor&#xA0;Coefficients</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml#Notation.Taylor Coefficient" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Notation.Taylor&#xA0;Coefficient</a><br/>
taylor<b>'</b>s&#160;<a href="ode_taylor.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Taylor's Method Using AD" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor's&#xA0;Method&#xA0;Using&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Taylor's Method Using AD" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor's&#xA0;Method&#xA0;Using&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
taylor<b>_</b>size&#160;<a href="fundeprecated.xml#taylor_size" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;taylor_size</a><br/>
team&#160;<a href="team_pthread.cpp.xml" target="_top">Pthread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="team_bthread.cpp.xml" target="_top">Boost&#xA0;Thread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="team_openmp.cpp.xml" target="_top">OpenMP&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="team_example.cpp.xml" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#Team Implementations" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;Team&#xA0;Implementations</a><br/>
team<b>_</b>create&#160;<a href="team_thread.hpp.xml#team_create" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;team_create</a><br/>
team<b>_</b>destroy&#160;<a href="team_thread.hpp.xml#team_destroy" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;team_destroy</a><br/>
team<b>_</b>example&#160;<a href="thread_test.cpp.xml#team_example" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;team_example</a><br/>
team<b>_</b>name&#160;<a href="team_thread.hpp.xml#team_name" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;team_name</a><br/>
team<b>_</b>work&#160;<a href="team_thread.hpp.xml#team_work" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;team_work</a><br/>
template&#160;<a href="test_vector.xml" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.xml#The CppAD Test Vector Template Class" target="_top">Examples:&#160;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.cpp.xml" target="_top">CppAD::vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_vector.cpp.xml" target="_top">Simple&#xA0;Vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Template Class Requirements" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Template&#xA0;Class&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Simple Vector Template Class" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Simple&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
terms&#160;<a href="ode_evaluate.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE</a><br/>
test&#160;<a href="lu_ratio.cpp.xml" target="_top">LuRatio:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="opt_val_hes.cpp.xml" target="_top">opt_val_hes:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="bender_quad.cpp.xml" target="_top">BenderQuad:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="correct_det_by_minor_c.xml" target="_top">Correctness&#xA0;Test&#xA0;of&#xA0;det_by_minor&#xA0;Routine</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="zdouble.cpp.xml" target="_top">zdouble:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.cpp.xml" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_tan.cpp.xml" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_reciprocal.cpp.xml" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_ode_speed.cpp.xml" target="_top">Speed&#xA0;Test&#xA0;for&#xA0;Both&#xA0;Simple&#xA0;and&#xA0;Fast&#xA0;Representations</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="test_vector.xml" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.cpp.xml" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.cpp.xml" target="_top">Tracking&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Namespace.Test Vector Preprocessor Symbol" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Namespace.Test&#xA0;Vector&#xA0;Preprocessor&#xA0;Symbol</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_sacado.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_fadbad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_cppad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_adolc.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_double.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Functions&#xA0;in&#xA0;Double</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.cpp.xml" target="_top">sparse_hes_fun:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.cpp.xml" target="_top">sparse_jac_fun:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_evaluate.cpp.xml" target="_top">ode_evaluate:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_of_minor.cpp.xml" target="_top">Determinant&#xA0;of&#xA0;a&#xA0;Minor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml#test" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program:&#160;test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed.xml" target="_top">Speed&#xA0;Test&#xA0;an&#xA0;Operator&#xA0;Overloading&#xA0;AD&#xA0;Package</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="stack_machine.cpp.xml" target="_top">Example&#xA0;Differentiating&#xA0;a&#xA0;Stack&#xA0;Machine&#xA0;Interpreter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_taylor.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;An&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_stiff.cpp.xml" target="_top">A&#xA0;Stiff&#xA0;Ode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mul_level.cpp.xml" target="_top">Multiple&#xA0;Level&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="jac_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="jac_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interface2c.cpp.xml" target="_top">Interfacing&#xA0;to&#xA0;C:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="hes_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;LU&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="hes_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="eigen_det.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;To&#xA0;Compute&#xA0;Determinant:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="eigen_array.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;Arrays:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="conj_grad.cpp.xml" target="_top">Differentiate&#xA0;Conjugate&#xA0;Gradient&#xA0;Algorithm:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_fun.cpp.xml" target="_top">Creating&#xA0;Your&#xA0;Own&#xA0;Interface&#xA0;to&#xA0;an&#xA0;ADFun&#xA0;Object</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="example.xml#The CppAD Test Vector Template Class" target="_top">Examples:&#160;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_retape.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="set_union.cpp.xml" target="_top">Set&#xA0;Union:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="to_string.cpp.xml" target="_top">to_string:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="index_sort.cpp.xml" target="_top">Index&#xA0;Sort:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="thread_alloc.cpp.xml" target="_top">Fast&#xA0;Multi-Threading&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="vector_bool.cpp.xml" target="_top">CppAD::vectorBool&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.cpp.xml" target="_top">CppAD::vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_gear_control.cpp.xml" target="_top">OdeGearControl:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_gear.cpp.xml" target="_top">OdeGear:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_err_maxabs.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;Using&#xA0;Maxabs&#xA0;Argument</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ode_err_control.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rosen_34.cpp.xml" target="_top">Rosen34:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="runge45_2.cpp.xml" target="_top">Runge45:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="runge45_1.cpp.xml" target="_top">Runge45:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rombergmul.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="romberg_one.cpp.xml" target="_top">One&#xA0;Dimensional&#xA0;Romberg&#xA0;Integration:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="lu_invert.cpp.xml" target="_top">LuInvert:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="lu_factor.cpp.xml" target="_top">LuFactor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="lu_solve.cpp.xml" target="_top">LuSolve&#xA0;With&#xA0;Complex&#xA0;Arguments:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="poly.cpp.xml" target="_top">Polynomial&#xA0;Evaluation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="pow_int.cpp.xml" target="_top">The&#xA0;Pow&#xA0;Integer&#xA0;Exponent:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="nan.cpp.xml" target="_top">nan:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="check_simple_vector.cpp.xml" target="_top">The&#xA0;CheckSimpleVector&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simple_vector.cpp.xml" target="_top">Simple&#xA0;Vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="check_numeric_type.cpp.xml" target="_top">The&#xA0;CheckNumericType&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="numeric_type.cpp.xml" target="_top">The&#xA0;NumericType:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="time_test.cpp.xml" target="_top">time_test:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.cpp.xml" target="_top">Elapsed&#xA0;Seconds:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#test" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_test.cpp.xml" target="_top">speed_test:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml#Test" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results:&#160;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speedtest.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Print&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#test" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="near_equal.cpp.xml" target="_top">NearEqual&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="error_handler.cpp.xml" target="_top">Replacing&#xA0;The&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Speed Test of Implementation" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Speed&#xA0;Test&#xA0;of&#xA0;Implementation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="team_example.cpp.xml" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;pthread&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="check_for_nan.cpp.xml" target="_top">ADFun&#xA0;Checking&#xA0;For&#xA0;Nan:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="fun_check.cpp.xml" target="_top">ADFun&#xA0;Check&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_sub_hes.cpp.xml" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.cpp.xml" target="_top">Sparse&#xA0;Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.cpp.xml" target="_top">Sparse&#xA0;Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rev_two.cpp.xml" target="_top">Second&#xA0;Partials&#xA0;Reverse&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="for_two.cpp.xml" target="_top">Subset&#xA0;of&#xA0;Second&#xA0;Order&#xA0;Partials:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="hes_lagrangian.cpp.xml" target="_top">Hessian&#xA0;of&#xA0;Lagrangian&#xA0;and&#xA0;&#xA0;ADFun&#xA0;Default&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="hessian.cpp.xml" target="_top">Hessian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rev_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Derivative&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="for_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Driver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="jacobian.cpp.xml" target="_top">Jacobian:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="bool_sparsity.cpp.xml" target="_top">Using&#xA0;vectorBool&#xA0;Sparsity&#xA0;To&#xA0;Conserve&#xA0;Memory:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_hes.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparsity_sub.cpp.xml" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_hes.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="dependency.cpp.xml" target="_top">Computing&#xA0;Dependency:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="rev_sparse_jac.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="for_sparse_jac.cpp.xml" target="_top">Forward&#xA0;Mode&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_checkpoint.cpp.xml" target="_top">Reverse&#xA0;Mode&#xA0;General&#xA0;Case&#xA0;(Checkpointing):&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_three.cpp.xml" target="_top">Third&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="hes_times_dir.cpp.xml" target="_top">Hessian&#xA0;Times&#xA0;Direction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.cpp.xml" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;ModeExample&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.cpp.xml" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="capacity_order.cpp.xml" target="_top">Controlling&#xA0;Taylor&#xA0;Coefficient&#xA0;Memory&#xA0;Allocation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="compare_change.cpp.xml" target="_top">CompareChange&#xA0;and&#xA0;Re-Tape:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Directions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_order.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;of&#xA0;Multiple&#xA0;Orders</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward.cpp.xml" target="_top">Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="seq_property.cpp.xml" target="_top">ADFun&#xA0;Sequence&#xA0;Properties:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.cpp.xml" target="_top">Abort&#xA0;Current&#xA0;Recording:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="fun_assign.cpp.xml" target="_top">ADFun&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="independent.cpp.xml" target="_top">Independent&#xA0;and&#xA0;ADFun&#xA0;Constructor:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="complex_poly.cpp.xml" target="_top">Complex&#xA0;Polynomial:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="equal_op_seq.cpp.xml" target="_top">EqualOpSeq:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="par_var.cpp.xml" target="_top">AD&#xA0;Parameter&#xA0;and&#xA0;Variable&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="bool_fun.cpp.xml" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="near_equal_ext.cpp.xml" target="_top">Compare&#xA0;AD&#xA0;with&#xA0;Base&#xA0;Objects:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="compare.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function.Test Result" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function.Test&#xA0;Result</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml#Test Atomic Function" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_extended_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;Extended&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checkpoint_ode.cpp.xml" target="_top">Checkpointing&#xA0;an&#xA0;ODE&#xA0;Solver:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_mul_level.cpp.xml" target="_top">Atomic&#xA0;Operations&#xA0;and&#xA0;Multiple-Levels&#xA0;of&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="checkpoint.cpp.xml" target="_top">Simple&#xA0;Checkpointing:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="num_limits.cpp.xml" target="_top">Numeric&#xA0;Limits:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interp_retape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tape_index.cpp.xml" target="_top">Taping&#xA0;Array&#xA0;Index&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cond_exp.cpp.xml" target="_top">Conditional&#xA0;Expressions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Test" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="azmul.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Zero&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="pow.cpp.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atan2.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan2&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sign.cpp.xml" target="_top">Sign&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="log1p.cpp.xml" target="_top">The&#xA0;AD&#xA0;log1p&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="expm1.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="erf.cpp.xml" target="_top">The&#xA0;AD&#xA0;erf&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;atanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;asinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;acosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="abs.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;tanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tan.cpp.xml" target="_top">The&#xA0;AD&#xA0;tan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sqrt.cpp.xml" target="_top">The&#xA0;AD&#xA0;sqrt&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;sinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sin.cpp.xml" target="_top">The&#xA0;AD&#xA0;sin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="log10.cpp.xml" target="_top">The&#xA0;AD&#xA0;log10&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="log.cpp.xml" target="_top">The&#xA0;AD&#xA0;log&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;cosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cos.cpp.xml" target="_top">The&#xA0;AD&#xA0;cos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atan.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asin.cpp.xml" target="_top">The&#xA0;AD&#xA0;asin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acos.cpp.xml" target="_top">The&#xA0;AD&#xA0;acos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="div_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mul_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sub_eq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="addeq.cpp.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="div.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Division:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mul.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sub.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Subtraction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="add.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Addition:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="unary_minus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="unary_plus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="print_for_string.cpp.xml" target="_top">Print&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="print_for_cout.cpp.xml" target="_top">Printing&#xA0;During&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_output.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_input.cpp.xml" target="_top">AD&#xA0;Output&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="integer.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.cpp.xml" target="_top">AD&#xA0;Assignment:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.cpp.xml" target="_top">AD&#xA0;Constructors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.cpp.xml" target="_top">exp_eps:&#xA0;Test&#xA0;of&#xA0;exp_eps</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#Test" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2.cpp.xml" target="_top">exp_2:&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#Test" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml#Test Vector" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Test&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="colpack_hes.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="colpack_jac.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="install.xml" target="_top">CppAD&#xA0;Download,&#xA0;Test,&#xA0;and&#xA0;Install&#xA0;Instructions</a><br/>
test<b>_</b>size&#160;<a href="time_test.xml#test_size" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;test_size</a><br/>
test<b>_</b>time&#160;<a href="multi_newton_time.cpp.xml#test_time" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;test_time</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml#test_time" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;test_time</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#multi_newton.test_time" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;multi_newton.test_time</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#harmonic.test_time" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;harmonic.test_time</a><br/>
testing&#160;<a href="test_vector.xml" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml#checkpoint.Testing" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;checkpoint.Testing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml" target="_top">Speed&#xA0;Testing&#xA0;Utilities</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_jacobian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_sparse_hessian.xml" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_poly.xml" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Testing" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Testing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="optimize.xml#Speed Testing" target="_top">Optimize&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;Tape:&#160;Speed&#xA0;Testing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Windows File Extraction and Testing" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Windows&#xA0;File&#xA0;Extraction&#xA0;and&#xA0;Testing</a><br/>
tests&#160;<a href="speed_sacado.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_fadbad.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_cppad.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;CppAD:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_adolc.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_double.xml#Running Tests" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Functions&#xA0;in&#xA0;Double:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_example.cpp.xml#Running Tests" target="_top">Run&#xA0;the&#xA0;Speed&#xA0;Examples:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.cpp.xml#Running Tests" target="_top">CppAD&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.cpp.xml" target="_top">CppAD&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#Running Tests" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml#Running Tests" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction:&#160;Running&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_apx_main.cpp.xml" target="_top">Correctness&#xA0;Tests&#xA0;For&#xA0;Exponential&#xA0;Approximation&#xA0;in&#xA0;Introduction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#make.Examples and Tests" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;make.Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake_check.xml" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml#Speed Tests" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests:&#160;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml#Examples and Tests" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests:&#160;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml#Speed Tests" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests:&#160;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml#Speed Tests" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
text&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
tf&#160;<a href="odegearcontrol.xml#tf" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;tf</a><br/>
&#160;&#160;&#160;<a href="odeerrcontrol.xml#tf" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;tf</a><br/>
&#160;&#160;&#160;<a href="rosen34.xml#tf" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;tf</a><br/>
&#160;&#160;&#160;<a href="runge45.xml#tf" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;tf</a><br/>
than&#160;<a href="ad_in_c.cpp.xml" target="_top">Example&#xA0;and&#xA0;Test&#xA0;Linking&#xA0;CppAD&#xA0;to&#xA0;Languages&#xA0;Other&#xA0;than&#xA0;C++</a><br/>
that&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml#Standard Math Functions.Cases that Apply Recursion Above" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode:&#160;Standard&#xA0;Math&#xA0;Functions.Cases&#xA0;that&#xA0;Apply&#xA0;Recursion&#xA0;Above</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_fun.xml" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="index_sort.xml" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_free_all.xml" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="number_skip.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_example.xml" target="_top">Example&#xA0;AD&#xA0;Base&#xA0;Types&#xA0;That&#xA0;are&#xA0;not&#xA0;AD&lt;OtherBase&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
the&#160;<a href="license.xml" target="_top">Your&#xA0;License&#xA0;for&#xA0;the&#xA0;CppAD&#xA0;Software</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_run.hpp.xml" target="_top">Driver&#xA0;for&#xA0;Running&#xA0;the&#xA0;Ipopt&#xA0;ODE&#xA0;Example</a><br/>
&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt</a><br/>
&#160;&#160;&#160;&#160;<a href="test_vector.xml" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;OpenMP&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;<a href="wish_list.xml" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List</a><br/>
&#160;&#160;&#160;&#160;<a href="bib.xml#The C++ Programming Language" target="_top">Bibliography:&#160;The&#xA0;C++&#xA0;Programming&#xA0;Language</a><br/>
&#160;&#160;&#160;&#160;<a href="reversetheory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;<a href="forwardtheory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;<a href="theory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Derivative&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="mat_sum_sq.cpp.xml" target="_top">Sum&#xA0;of&#xA0;the&#xA0;Elements&#xA0;of&#xA0;the&#xA0;Square&#xA0;of&#xA0;a&#xA0;Matrix:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="link_ode.xml" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution</a><br/>
&#160;&#160;&#160;&#160;<a href="speed_main.xml" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;<a href="testvector.xml" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;<a href="speed_example.cpp.xml" target="_top">Run&#xA0;the&#xA0;Speed&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;<a href="listallexamples.xml" target="_top">List&#xA0;of&#xA0;All&#xA0;the&#xA0;CppAD&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;<a href="example.xml#The CppAD Test Vector Template Class" target="_top">Examples:&#160;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_in_parallel.xml" target="_top">Is&#xA0;The&#xA0;Current&#xA0;Execution&#xA0;in&#xA0;Parallel&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;<a href="pow_int.cpp.xml" target="_top">The&#xA0;Pow&#xA0;Integer&#xA0;Exponent:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="pow_int.xml" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="check_simple_vector.cpp.xml" target="_top">The&#xA0;CheckSimpleVector&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="check_numeric_type.cpp.xml" target="_top">The&#xA0;CheckNumericType&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="numeric_type.cpp.xml" target="_top">The&#xA0;NumericType:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="error_handler.cpp.xml" target="_top">Replacing&#xA0;The&#xA0;CppAD&#xA0;Error&#xA0;Handler:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="errorhandler.xml" target="_top">Replacing&#xA0;the&#xA0;CppAD&#xA0;Error&#xA0;Handler</a><br/>
&#160;&#160;&#160;&#160;<a href="base_identical.xml#EqualOpSeq.The Simple Case" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons:&#160;EqualOpSeq.The&#xA0;Simple&#xA0;Case</a><br/>
&#160;&#160;&#160;&#160;<a href="pow.cpp.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="pow.xml" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atan2.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan2&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="sign.xml" target="_top">The&#xA0;Sign:&#xA0;sign</a><br/>
&#160;&#160;&#160;&#160;<a href="log1p.cpp.xml" target="_top">The&#xA0;AD&#xA0;log1p&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="log1p.xml" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p</a><br/>
&#160;&#160;&#160;&#160;<a href="expm1.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="expm1.xml" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1</a><br/>
&#160;&#160;&#160;&#160;<a href="erf.cpp.xml" target="_top">The&#xA0;AD&#xA0;erf&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="erf.xml" target="_top">The&#xA0;Error&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;atanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="atanh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh</a><br/>
&#160;&#160;&#160;&#160;<a href="asinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;asinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="asinh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh</a><br/>
&#160;&#160;&#160;&#160;<a href="acosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;acosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="acosh.xml" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh</a><br/>
&#160;&#160;&#160;&#160;<a href="tanh.cpp.xml" target="_top">The&#xA0;AD&#xA0;tanh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="tan.cpp.xml" target="_top">The&#xA0;AD&#xA0;tan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="sqrt.cpp.xml" target="_top">The&#xA0;AD&#xA0;sqrt&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="sinh.cpp.xml" target="_top">The&#xA0;AD&#xA0;sinh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="sin.cpp.xml" target="_top">The&#xA0;AD&#xA0;sin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="log10.cpp.xml" target="_top">The&#xA0;AD&#xA0;log10&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="log.cpp.xml" target="_top">The&#xA0;AD&#xA0;log&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="exp.cpp.xml" target="_top">The&#xA0;AD&#xA0;exp&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="cosh.cpp.xml" target="_top">The&#xA0;AD&#xA0;cosh&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="cos.cpp.xml" target="_top">The&#xA0;AD&#xA0;cos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="atan.cpp.xml" target="_top">The&#xA0;AD&#xA0;atan&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="asin.cpp.xml" target="_top">The&#xA0;AD&#xA0;asin&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="acos.cpp.xml" target="_top">The&#xA0;AD&#xA0;acos&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="tanh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh</a><br/>
&#160;&#160;&#160;&#160;<a href="tan.xml" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan</a><br/>
&#160;&#160;&#160;&#160;<a href="sqrt.xml" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt</a><br/>
&#160;&#160;&#160;&#160;<a href="sinh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh</a><br/>
&#160;&#160;&#160;&#160;<a href="sin.xml" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin</a><br/>
&#160;&#160;&#160;&#160;<a href="log10.xml" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10</a><br/>
&#160;&#160;&#160;&#160;<a href="log.xml" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log</a><br/>
&#160;&#160;&#160;&#160;<a href="exp.xml" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp</a><br/>
&#160;&#160;&#160;&#160;<a href="cosh.xml" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh</a><br/>
&#160;&#160;&#160;&#160;<a href="cos.xml" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos</a><br/>
&#160;&#160;&#160;&#160;<a href="binary_math.xml" target="_top">The&#xA0;Binary&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;<a href="cmake_check.xml" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;<a href="sacado_prefix.xml" target="_top">Including&#xA0;the&#xA0;Sacado&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_prefix.xml" target="_top">Including&#xA0;the&#xA0;cppad_ipopt&#xA0;Library&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="fadbad_prefix.xml" target="_top">Including&#xA0;the&#xA0;FADBAD&#xA0;Speed&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="colpack_prefix.xml" target="_top">Including&#xA0;the&#xA0;ColPack&#xA0;Sparsity&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests</a><br/>
&#160;&#160;&#160;&#160;<a href="cmake.xml#The CMake Program" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD:&#160;The&#xA0;CMake&#xA0;Program</a><br/>
&#160;&#160;&#160;&#160;<a href="download.xml" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code</a><br/>
theorem&#160;<a href="reverse_identity.xml#Theorem" target="_top">An&#xA0;Important&#xA0;Reverse&#xA0;Mode&#xA0;Identity:&#160;Theorem</a><br/>
theory&#160;<a href="old_tan.cpp.xml#Theory" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_reciprocal.cpp.xml#Theory" target="_top">Old&#xA0;Atomic&#xA0;Operation&#xA0;Reciprocal:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_reverse.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_reverse.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_reverse.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt_reverse.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_reverse.xml" target="_top">Logarithm&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_reverse.xml" target="_top">Exponential&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reversetheory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Reverse&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="erf_forward.xml" target="_top">Error&#xA0;Function&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tan_forward.xml" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Taylor&#xA0;Polynomial&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="acos_forward.xml" target="_top">Inverse&#xA0;Cosine&#xA0;and&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="asin_forward.xml" target="_top">Inverse&#xA0;Sine&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atan_forward.xml" target="_top">Inverse&#xA0;Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sqrt_forward.xml" target="_top">Square&#xA0;Root&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="log_forward.xml" target="_top">Logarithm&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_forward.xml" target="_top">Exponential&#xA0;Function&#xA0;Forward&#xA0;Mode&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forwardtheory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="theory.xml" target="_top">The&#xA0;Theory&#xA0;of&#xA0;Derivative&#xA0;Calculations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Theory" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Theory" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Theory" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cholesky_theory.xml" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Theory" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Theory" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Theory" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Theory" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Theory" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Theory</a><br/>
theta&#160;<a href="atan2.xml#theta" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function:&#160;theta</a><br/>
third&#160;<a href="reverse_three.cpp.xml" target="_top">Third&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
this&#160;<a href="whats_new.xml#This Year" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD:&#160;This&#xA0;Year</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml#Running This Program" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest:&#160;Running&#xA0;This&#xA0;Program</a><br/>
thread&#160;<a href="memory_leak.xml#thread" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_alloc.cpp.xml" target="_top">OpenMP&#xA0;Memory&#xA0;Allocator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_efficient.xml#Thread" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use:&#160;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml#Thread" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml#thread" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml#thread" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml#thread" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml#Thread" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc:&#160;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml#thread" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;OpenMP&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml#Thread" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml#thread" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml#thread" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml#thread" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml#Thread" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc:&#160;Thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml#thread" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number:&#160;thread</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_thread_num.xml" target="_top">Get&#xA0;the&#xA0;Current&#xA0;Thread&#xA0;Number</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_bthread.cpp.xml" target="_top">Boost&#xA0;Thread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_example.cpp.xml" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_pthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Parallel&#xA0;Pthread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Thread&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a11c_openmp.cpp.xml" target="_top">A&#xA0;Simple&#xA0;OpenMP&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml#Same Thread" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment:&#160;Same&#xA0;Thread</a><br/>
thread<b>_</b>alloc&#160;<a href="ta_free_all.xml" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
thread<b>_</b>num&#160;<a href="ta_parallel_setup.xml#thread_num" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment:&#160;thread_num</a><br/>
thread<b>_</b>team&#160;<a href="team_example.cpp.xml#thread_team" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test:&#160;thread_team</a><br/>
thread<b>_</b>test&#160;<a href="thread_test.cpp.xml" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests</a><br/>
threading&#160;<a href="multi_newton.cpp.xml" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_ad_bthread.cpp.xml" target="_top">A&#xA0;Simple&#xA0;Boost&#xA0;Threading&#xA0;AD:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#Running Tests.threading" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;Running&#xA0;Tests.threading</a><br/>
threads&#160;<a href="old_max_num_threads.xml" target="_top">Set&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_max_num_threads.xml" target="_top">Set&#xA0;and&#xA0;Get&#xA0;Maximum&#xA0;Number&#xA0;of&#xA0;Threads&#xA0;for&#xA0;omp_alloc&#xA0;Allocator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_num_threads.xml" target="_top">Get&#xA0;Number&#xA0;of&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_pthread.cpp.xml" target="_top">Pthread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_bthread.cpp.xml" target="_top">Boost&#xA0;Thread&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_openmp.cpp.xml" target="_top">OpenMP&#xA0;Implementation&#xA0;of&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
threads<b>:</b>&#160;<a href="team_example.cpp.xml" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
three&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Theory.Product of Three Matrices" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Theory.Product&#xA0;of&#xA0;Three&#xA0;Matrices</a><br/>
ti&#160;<a href="odegearcontrol.xml#ti" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;ti</a><br/>
&#160;&#160;&#160;<a href="odeerrcontrol.xml#ti" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;ti</a><br/>
&#160;&#160;&#160;<a href="rosen34.xml#ti" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;ti</a><br/>
&#160;&#160;&#160;<a href="runge45.xml#ti" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;ti</a><br/>
time&#160;<a href="time_det_by_minor_c.xml#time" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor:&#160;time</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="time_det_by_minor_c.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Trapezoidal Approximation.Trapezoidal Time Grid" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Trapezoidal&#xA0;Approximation.Trapezoidal&#xA0;Time&#xA0;Grid</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="elapsed_seconds.xml" target="_top">Returns&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#time" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;time</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test</a><br/>
time<b>_</b>min&#160;<a href="time_det_by_minor_c.xml#time_min" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;det_by_minor:&#160;time_min</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml#time_min" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;time_min</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#time_min" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;time_min</a><br/>
time<b>_</b>out&#160;<a href="multi_newton_time.cpp.xml#time_out" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;time_out</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml#time_out" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i:&#160;time_out</a><br/>
time<b>_</b>test&#160;<a href="time_test.cpp.xml" target="_top">time_test:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="time_test.xml" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test</a><br/>
time<b>_</b>test<b>:</b>&#160;<a href="time_test.cpp.xml" target="_top">time_test:&#xA0;Example&#xA0;and&#xA0;test</a><br/>
timer&#160;<a href="elapsed_seconds.cpp.xml" target="_top">Elapsed&#xA0;Seconds:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
times&#160;<a href="repeat_det_by_minor_c.xml" target="_top">Repeat&#xA0;det_by_minor&#xA0;Routine&#xA0;A&#xA0;Specified&#xA0;Number&#xA0;of&#xA0;Times</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_times_dir.cpp.xml" target="_top">Hessian&#xA0;Times&#xA0;Direction:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#Hessian Times Direction" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Hessian&#xA0;Times&#xA0;Direction</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="compute_assign.xml" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul.cpp.xml" target="_top">AD&#xA0;Binary&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_binary.xml" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators</a><br/>
timing&#160;<a href="time_test.xml#Timing" target="_top">Determine&#xA0;Amount&#xA0;of&#xA0;Time&#xA0;to&#xA0;Execute&#xA0;a&#xA0;Test:&#160;Timing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#Timing" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;Timing</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_time.cpp.xml" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Summation&#xA0;of&#xA0;1/i</a><br/>
to<b>_</b>string&#160;<a href="utility.xml#Miscellaneous.to_string" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.to_string</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#to_string" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;to_string</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#to_string" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;to_string</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#to_string" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;to_string</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#to_string" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;to_string</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#to_string" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;to_string</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_to_string.xml" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type</a><br/>
to<b>_</b>string<b>:</b>&#160;<a href="to_string.cpp.xml" target="_top">to_string:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
tools&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
tracing&#160;<a href="wish_list.xml#Tracing" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List:&#160;Tracing</a><br/>
track&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
track<b>_</b>count&#160;<a href="memory_leak.xml#TRACK_COUNT" target="_top">Memory&#xA0;Leak&#xA0;Detection:&#160;TRACK_COUNT</a><br/>
trackcount&#160;<a href="tracknewdel.xml#TrackCount" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackCount</a><br/>
trackdelvec&#160;<a href="tracknewdel.xml#TrackDelVec" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackDelVec</a><br/>
trackextend&#160;<a href="tracknewdel.xml#TrackExtend" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackExtend</a><br/>
tracking&#160;<a href="tracknewdel.cpp.xml" target="_top">Tracking&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
tracknewvec&#160;<a href="tracknewdel.xml#TrackNewVec" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#160;TrackNewVec</a><br/>
transpose&#160;<a href="revsparsehes.xml#h.transpose true" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;h.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml#h.transpose false" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;h.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml#transpose" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;transpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#s.transpose true" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;s.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#s.transpose false" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;s.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#r.transpose true" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;r.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#r.transpose false" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;r.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#transpose" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;transpose</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#s.transpose true" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;s.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#s.transpose false" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;s.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#r.transpose true" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;r.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#r.transpose false" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;r.transpose&#xA0;false</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#transpose" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;transpose</a><br/>
trapezoidal&#160;<a href="ipopt_nlp_ode_fast.xml#Trapezoidal Approximation" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml#Trapezoidal Approximation Constraint" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Trapezoidal&#xA0;Approximation&#xA0;Constraint</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Trapezoidal Approximation.Trapezoidal Time Grid" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Trapezoidal&#xA0;Approximation.Trapezoidal&#xA0;Time&#xA0;Grid</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Trapezoidal Approximation" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Trapezoidal&#xA0;Approximation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Trapezoidal Approximation" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Trapezoidal&#xA0;Approximation</a><br/>
triangular&#160;<a href="cholesky_theory.xml#Notation.Lower Triangular Part" target="_top">AD&#xA0;Theory&#xA0;for&#xA0;Cholesky&#xA0;Factorization:&#160;Notation.Lower&#xA0;Triangular&#xA0;Part</a><br/>
trigonometric&#160;<a href="sin_cos_reverse.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Reverse&#xA0;Theory</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sin_cos_forward.xml" target="_top">Trigonometric&#xA0;and&#xA0;Hyperbolic&#xA0;Sine&#xA0;and&#xA0;Cosine&#xA0;Forward&#xA0;Theory</a><br/>
true&#160;<a href="revsparsehes.xml#h.transpose true" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;h.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#s.transpose true" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;s.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#r.transpose true" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;r.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#s.transpose true" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;s.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#r.transpose true" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;r.transpose&#xA0;true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="log1p.xml#CPPAD_USE_CPLUSPLUS_2011.true" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p:&#160;CPPAD_USE_CPLUSPLUS_2011.true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="expm1.xml#CPPAD_USE_CPLUSPLUS_2011.true" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1:&#160;CPPAD_USE_CPLUSPLUS_2011.true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="erf.xml#CPPAD_USE_CPLUSPLUS_2011.true" target="_top">The&#xA0;Error&#xA0;Function:&#160;CPPAD_USE_CPLUSPLUS_2011.true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atanh.xml#CPPAD_USE_CPLUSPLUS_2011.true" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh:&#160;CPPAD_USE_CPLUSPLUS_2011.true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="asinh.xml#CPPAD_USE_CPLUSPLUS_2011.true" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh:&#160;CPPAD_USE_CPLUSPLUS_2011.true</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="acosh.xml#CPPAD_USE_CPLUSPLUS_2011.true" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh:&#160;CPPAD_USE_CPLUSPLUS_2011.true</a><br/>
tvector&#160;<a href="old_atomic.xml#CPPAD_USER_ATOMIC.Tvector" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;CPPAD_USER_ATOMIC.Tvector</a><br/>
two&#160;<a href="ipopt_nlp_ode_problem.xml#Black Box Method.Two levels of Iteration" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Black&#xA0;Box&#xA0;Method.Two&#xA0;levels&#xA0;of&#xA0;Iteration</a><br/>
&#160;&#160;&#160;&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;<a href="forward_two.xml" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Theory.Product of Two Matrices" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Theory.Product&#xA0;of&#xA0;Two&#xA0;Matrices</a><br/>
&#160;&#160;&#160;&#160;<a href="atan2.xml" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function</a><br/>
tx&#160;<a href="old_atomic.xml#tx" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;tx</a><br/>
&#160;&#160;&#160;<a href="atomic_reverse.xml#tx" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;tx</a><br/>
&#160;&#160;&#160;<a href="atomic_forward.xml#tx" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;tx</a><br/>
ty&#160;<a href="old_atomic.xml#ty" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;ty</a><br/>
&#160;&#160;&#160;<a href="atomic_reverse.xml#ty" target="_top">Atomic&#xA0;Reverse&#xA0;Mode:&#160;ty</a><br/>
&#160;&#160;&#160;<a href="atomic_forward.xml#ty" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;ty</a><br/>
type&#160;<a href="zdouble.xml#Base Type Requirements" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Base&#xA0;Type&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="omp_delete_array.xml#Type" target="_top">Return&#xA0;A&#xA0;Raw&#xA0;Array&#xA0;to&#xA0;The&#xA0;Available&#xA0;Memory&#xA0;for&#xA0;a&#xA0;Thread:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="omp_create_array.xml#Type" target="_top">Allocate&#xA0;Memory&#xA0;and&#xA0;Create&#xA0;A&#xA0;Raw&#xA0;Array:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Base Type" target="_top">Glossary:&#160;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#AD Type Above Base" target="_top">Glossary:&#160;AD&#xA0;Type&#xA0;Above&#xA0;Base</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_delete_array.xml#Type" target="_top">Deallocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Destructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ta_create_array.xml#Type" target="_top">Allocate&#xA0;An&#xA0;Array&#xA0;and&#xA0;Call&#xA0;Default&#xA0;Constructor&#xA0;for&#xA0;its&#xA0;Elements:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml#vectorBool.Element Type" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;vectorBool.Element&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Type" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="pow_int.xml#Type" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Value Type" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Value&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Elements of Specified Type" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Elements&#xA0;of&#xA0;Specified&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml#Type Requirements" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type:&#160;Type&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="numerictype.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Numeric&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml#Type" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_to_string.xml" target="_top">Extending&#xA0;to_string&#xA0;To&#xA0;Another&#xA0;Floating&#xA0;Point&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_limits.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Numeric&#xA0;Limits</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_ordered.xml#Ordered Type" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons:&#160;Ordered&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_ordered.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Ordered&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_identical.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Identically&#xA0;Equal&#xA0;Comparisons</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml#CondExpTemplate.Ordered Type" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions:&#160;CondExpTemplate.Ordered&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_cond_exp.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Conditional&#xA0;Expressions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Numeric Type" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Numeric&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml#Type" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="condexp.xml#Type" target="_top">AD&#xA0;Conditional&#xA0;Expressions:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_to_string.xml" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="value.xml" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="value.xml" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad.xml#Base Type Requirements" target="_top">AD&#xA0;Objects:&#160;Base&#xA0;Type&#xA0;Requirements</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps.xml#Type" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2.xml#Type" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;Type</a><br/>
type<b>:</b>&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
types&#160;<a href="epsilon.xml" target="_top">Machine&#xA0;Epsilon&#xA0;For&#xA0;AD&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Complex Types" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Complex&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_example.xml" target="_top">Example&#xA0;AD&#xA0;Base&#xA0;Types&#xA0;That&#xA0;are&#xA0;not&#xA0;AD&lt;OtherBase&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Standard Base Types" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Standard&#xA0;Base&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Public.Types" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Public.Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Public.Types" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Public.Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Public.Types" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Public.Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="numeric_limits.xml" target="_top">Numeric&#xA0;Limits&#xA0;For&#xA0;an&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml#Complex Types" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs:&#160;Complex&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml#Possible Types" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Possible&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#x.AD Types" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;x.AD&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#x.Complex Types" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;x.Complex&#xA0;Types</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="integer.xml#x.Real Types" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;x.Real&#xA0;Types</a><br/>

<b><big><a name="U">U</a></big></b>
<br/>
u&#160;<a href="luratio.xml#LU.U" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix&#xA0;and&#xA0;Stability&#xA0;Calculation:&#160;LU.U</a><br/>
&#160;&#160;<a href="old_atomic.xml#rev_hes_sparse.u" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;rev_hes_sparse.u</a><br/>
&#160;&#160;<a href="luinvert.xml#LU.U" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;LU.U</a><br/>
&#160;&#160;<a href="lufactor.xml#LU.U" target="_top">LU&#xA0;Factorization&#xA0;of&#xA0;A&#xA0;Square&#xA0;Matrix:&#160;LU.U</a><br/>
&#160;&#160;<a href="boolfun.xml#u" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;u</a><br/>
&#160;&#160;<a href="atomic_rev_sparse_hes.xml#u" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;u</a><br/>
u<b>)</b>&#160;<a href="reverse_any.xml#Notation.Y(t, u)" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Notation.Y(t,&#xA0;u)</a><br/>
&#160;&#160;&#160;<a href="reverse_any.xml#Notation.X(t, u)" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Notation.X(t,&#xA0;u)</a><br/>
u<b>^(</b>k<b>)</b>&#160;<a href="reverse_any.xml#Notation.u^(k)" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Notation.u^(k)</a><br/>
unary&#160;<a href="base_complex.hpp.xml#Invalid Unary Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Invalid&#xA0;Unary&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml#Valid Unary Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Valid&#xA0;Unary&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml#Unary Standard Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml#Unary Standard Math" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_std_math.xml#Unary Standard Math" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Unary&#xA0;Standard&#xA0;Math</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_member.xml#Unary Operators" target="_top">Required&#xA0;Base&#xA0;Class&#xA0;Member&#xA0;Functions:&#160;Unary&#xA0;Operators</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="boolfun.xml#Create Unary" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;Create&#xA0;Unary</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_minus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryminus.xml" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_plus.cpp.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="unaryplus.xml" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator</a><br/>
unary<b>_</b>name&#160;<a href="boolfun.xml#unary_name" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;unary_name</a><br/>
uniform&#160;<a href="uniform_01_c.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
uniform<b>_</b>01&#160;<a href="uniform_01.hpp.xml" target="_top">Source:&#xA0;uniform_01</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_main.xml" target="_top">Running&#xA0;the&#xA0;Speed&#xA0;Test&#xA0;Program</a><br/>
union&#160;<a href="old_mat_mul.hpp.xml#Set Union" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;Set&#xA0;Union</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="set_union.xml" target="_top">Union&#xA0;of&#xA0;Standard&#xA0;Sets</a><br/>
union<b>:</b>&#160;<a href="set_union.cpp.xml" target="_top">Set&#xA0;Union:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
unix&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="adolc_prefix.xml#Unix" target="_top">Including&#xA0;the&#xA0;ADOL-C&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Unix</a><br/>
unknown&#160;<a href="cppad_assert.xml#Unknown" target="_top">CppAD&#xA0;Assertions&#xA0;During&#xA0;Execution:&#160;Unknown</a><br/>
usage&#160;<a href="old_atomic.xml#rev_hes_sparse.Usage" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;rev_hes_sparse.Usage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#rev_jac_sparse.Usage" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;rev_jac_sparse.Usage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#for_jac_sparse.Usage" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;for_jac_sparse.Usage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#reverse.Usage" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;reverse.Usage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml#forward.Usage" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;forward.Usage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="pkgconfig.xml#Usage" target="_top">CppAD&#xA0;pkg-config&#xA0;Files:&#160;Usage</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
use&#160;<a href="old_atomic.xml#Example.Use AD" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Example.Use&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;<a href="old_atomic.xml#Syntax Function.Use Function" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Syntax&#xA0;Function.Use&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_efficient.xml" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;<a href="omp_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;<a href="tracknewdel.cpp.xml" target="_top">Tracking&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;<a href="tracknewdel.xml" target="_top">Routines&#xA0;That&#xA0;Track&#xA0;Use&#xA0;of&#xA0;New&#xA0;and&#xA0;Delete</a><br/>
&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;<a href="ipopt_solve.xml" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_free_all.xml" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_available.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_free_available.xml" target="_top">Free&#xA0;Memory&#xA0;Currently&#xA0;Available&#xA0;for&#xA0;Quick&#xA0;Use&#xA0;by&#xA0;a&#xA0;Thread</a><br/>
&#160;&#160;&#160;&#160;<a href="ta_parallel_setup.xml" target="_top">Setup&#xA0;thread_alloc&#xA0;For&#xA0;Use&#xA0;in&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;<a href="speed_program.cpp.xml" target="_top">Example&#xA0;Use&#xA0;of&#xA0;SpeedTest</a><br/>
&#160;&#160;&#160;&#160;<a href="team_thread.hpp.xml#Example Use" target="_top">Specifications&#xA0;for&#xA0;A&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#160;Example&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;<a href="base_complex.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;</a><br/>
&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double</a><br/>
&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float</a><br/>
&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml#Use Atomic Function" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_reciprocal.cpp.xml#Use Atomic Function" target="_top">Reciprocal&#xA0;as&#xA0;an&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_norm_sq.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Euclidean&#xA0;Norm&#xA0;Squared:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml#Use Atomic Function" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_reverse.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Reverse:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_forward.cpp.xml#Use Atomic Function" target="_top">Atomic&#xA0;Forward:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml#Future Use" target="_top">Free&#xA0;Static&#xA0;Variables:&#160;Future&#xA0;Use</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_ctor.xml#Example.Use Constructor" target="_top">Atomic&#xA0;Function&#xA0;Constructor:&#160;Example.Use&#xA0;Constructor</a><br/>
use<b>_</b>ad&#160;<a href="multi_newton_time.cpp.xml#use_ad" target="_top">Timing&#xA0;Test&#xA0;of&#xA0;Multi-Threaded&#xA0;Newton&#xA0;Method:&#160;use_ad</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="thread_test.cpp.xml#multi_newton.use_ad" target="_top">Run&#xA0;Multi-Threading&#xA0;Examples&#xA0;and&#xA0;Speed&#xA0;Tests:&#160;multi_newton.use_ad</a><br/>
use<b>_</b>vecad&#160;<a href="fundeprecated.xml#use_VecAD" target="_top">ADFun&#xA0;Object&#xA0;Deprecated&#xA0;Member&#xA0;Functions:&#160;use_VecAD</a><br/>
used&#160;<a href="omp_alloc.xml" target="_top">A&#xA0;Quick&#xA0;OpenMP&#xA0;Memory&#xA0;Allocator&#xA0;Used&#xA0;by&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exampleutility.xml" target="_top">Utility&#xA0;Routines&#xA0;used&#xA0;by&#xA0;CppAD&#xA0;Examples</a><br/>
user&#160;<a href="old_mat_mul.hpp.xml#CppAD User Atomic Callback Functions" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#160;CppAD&#xA0;User&#xA0;Atomic&#xA0;Callback&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.hpp.xml" target="_top">Define&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_mat_mul.cpp.xml" target="_top">Old&#xA0;Matrix&#xA0;Multiply&#xA0;as&#xA0;a&#xA0;User&#xA0;Atomic&#xA0;Operation:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_tan.cpp.xml" target="_top">Old&#xA0;Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="old_atomic.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_mat_mul.cpp.xml" target="_top">User&#xA0;Atomic&#xA0;Matrix&#xA0;Multiply:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions</a><br/>
uses&#160;<a href="funcheck.xml#FunCheck Uses Forward" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;FunCheck&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#Uses Forward" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#Uses Forward" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml#RevTwo Uses Forward" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;RevTwo&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml#ForTwo Uses Forward" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;ForTwo&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml#Hessian Uses Forward" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;Hessian&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="revone.xml#RevOne Uses Forward" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;RevOne&#xA0;Uses&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forone.xml#ForOne Uses Forward" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;ForOne&#xA0;Uses&#xA0;Forward</a><br/>
using&#160;<a href="det_by_minor_c.xml" target="_top">Compute&#xA0;Determinant&#xA0;using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_2.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="old_usead_1.cpp.xml" target="_top">Using&#xA0;AD&#xA0;to&#xA0;Compute&#xA0;Atomic&#xA0;Function&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.hpp.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_fast.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Fast&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_simple.xml" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Namespace.Using" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Namespace.Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sacado_det_lu.cpp.xml" target="_top">Sacado&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_sacado.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Sacado</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="fadbad_det_lu.cpp.xml" target="_top">Fadbad&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_fadbad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;Fadbad</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_det_lu.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_cppad.xml" target="_top">Speed&#xA0;Test&#xA0;Derivatives&#xA0;Using&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="adolc_det_lu.cpp.xml" target="_top">Adolc&#xA0;Speed:&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_adolc.xml" target="_top">Speed&#xA0;Test&#xA0;of&#xA0;Derivatives&#xA0;Using&#xA0;Adolc</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="double_det_lu.cpp.xml" target="_top">Double&#xA0;Speed:&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.cpp.xml" target="_top">Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc_ode.cpp.xml#Taylor's Method Using AD" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;Adolc&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor's&#xA0;Method&#xA0;Using&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_ode.cpp.xml#Taylor's Method Using AD" target="_top">Taylor's&#xA0;Ode&#xA0;Solver:&#xA0;A&#xA0;Multi-Level&#xA0;AD&#xA0;Example&#xA0;and&#xA0;Test:&#160;Taylor's&#xA0;Method&#xA0;Using&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level.xml" target="_top">Using&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;AD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_lu_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;LU&#xA0;Factorization:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_minor_det.cpp.xml" target="_top">Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_det.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;To&#xA0;Compute&#xA0;Determinant:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_array.cpp.xml" target="_top">Using&#xA0;Eigen&#xA0;Arrays:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_get_started.cpp.xml" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;CppAD&#xA0;and&#xA0;Ipopt:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_inuse.xml" target="_top">Amount&#xA0;of&#xA0;Memory&#xA0;a&#xA0;Thread&#xA0;is&#xA0;Currently&#xA0;Using</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ode_err_maxabs.cpp.xml" target="_top">OdeErrControl:&#xA0;Example&#xA0;and&#xA0;Test&#xA0;Using&#xA0;Maxabs&#xA0;Argument</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Element Access.Using Value" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Element&#xA0;Access.Using&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="team_example.cpp.xml" target="_top">Using&#xA0;a&#xA0;Team&#xA0;of&#xA0;AD&#xA0;Threads:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_thread.xml" target="_top">Using&#xA0;CppAD&#xA0;in&#xA0;a&#xA0;Multi-Threading&#xA0;Environment</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="bool_sparsity.cpp.xml" target="_top">Using&#xA0;vectorBool&#xA0;Sparsity&#xA0;To&#xA0;Conserve&#xA0;Memory:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.cpp.xml" target="_top">Using&#xA0;a&#xA0;User&#xA0;Defined&#xA0;AD&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_hes.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="colpack_jac.cpp.xml" target="_top">Using&#xA0;ColPack:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
utilities&#160;<a href="numeric_ad.xml" target="_top">Some&#xA0;Numerical&#xA0;AD&#xA0;Utilities</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_utility.xml" target="_top">Speed&#xA0;Testing&#xA0;Utilities</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities</a><br/>
utility&#160;<a href="speed_utility.xml#Speed Utility Routines" target="_top">Speed&#xA0;Testing&#xA0;Utilities:&#160;Speed&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exampleutility.xml" target="_top">Utility&#xA0;Routines&#xA0;used&#xA0;by&#xA0;CppAD&#xA0;Examples</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
utility<b>:</b>&#160;<a href="adolc_alloc_mat.xml" target="_top">Adolc&#xA0;Test&#xA0;Utility:&#xA0;Allocate&#xA0;and&#xA0;Free&#xA0;Memory&#xA0;For&#xA0;a&#xA0;Matrix</a><br/>

<b><big><a name="V">V</a></big></b>
<br/>
Value&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.cpp.xml" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="value.xml" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type</a><br/>
Var2Par&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
VecAD&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_assign.xml" target="_top">AD&#xA0;Assignment&#xA0;Operator</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_ctor.xml" target="_top">AD&#xA0;Constructors</a><br/>
VecAD<b>&lt;</b>Base<b>&gt;</b>&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
v&#160;<a href="old_atomic.xml#rev_hes_sparse.v" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;rev_hes_sparse.v</a><br/>
&#160;&#160;<a href="nan.xml#hasnan.v" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;hasnan.v</a><br/>
&#160;&#160;<a href="vecad.xml#Constructor.v" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;Constructor.v</a><br/>
&#160;&#160;<a href="boolfun.xml#v" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;v</a><br/>
&#160;&#160;<a href="atomic_rev_sparse_hes.xml#u.v" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;u.v</a><br/>
v<b>_</b>ptr&#160;<a href="omp_efficient.xml#v_ptr" target="_top">Check&#xA0;If&#xA0;A&#xA0;Memory&#xA0;Allocation&#xA0;is&#xA0;Efficient&#xA0;for&#xA0;Another&#xA0;Use:&#160;v_ptr</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_return_memory.xml#v_ptr" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;omp_alloc:&#160;v_ptr</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="omp_get_memory.xml#v_ptr" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;v_ptr</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_return_memory.xml#v_ptr" target="_top">Return&#xA0;Memory&#xA0;to&#xA0;thread_alloc:&#160;v_ptr</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_get_memory.xml#v_ptr" target="_top">Get&#xA0;At&#xA0;Least&#xA0;A&#xA0;Specified&#xA0;Amount&#xA0;of&#xA0;Memory:&#160;v_ptr</a><br/>
valid&#160;<a href="base_complex.hpp.xml#Valid Unary Math" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;:&#160;Valid&#xA0;Unary&#xA0;Math</a><br/>
value&#160;<a href="link_poly.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_ode.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_mat_mul.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_minor.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;by&#xA0;Minor&#xA0;Expansion:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="link_det_lu.xml#Return Value" target="_top">Speed&#xA0;Testing&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;Using&#xA0;Lu&#xA0;Factorization:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="to_string.xml#value" target="_top">Convert&#xA0;Certain&#xA0;Types&#xA0;to&#xA0;a&#xA0;String:&#160;value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ta_hold_memory.xml#value" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use:&#160;value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Element Access.Using Value" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Element&#xA0;Access.Using&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml#Value Type" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector:&#160;Value&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="equalopseq.xml" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Function:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="abs.xml" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="ad_to_string.xml#value" target="_top">Convert&#xA0;An&#xA0;AD&#xA0;or&#xA0;Base&#xA0;Type&#xA0;to&#xA0;String:&#160;value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Return Value" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Return Value" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Return Value" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Return Value" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Return Value" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Return Value" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Return&#xA0;Value</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="get_started.cpp.xml#Value" target="_top">Getting&#xA0;Started&#xA0;Using&#xA0;CppAD&#xA0;to&#xA0;Compute&#xA0;Derivatives:&#160;Value</a><br/>
value<b>_</b>&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
value<b>_</b>type&#160;<a href="simplevector.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector</a><br/>
valued&#160;<a href="boolvalued.xml" target="_top">Bool&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions&#xA0;with&#xA0;AD&#xA0;Arguments</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="advalued.xml" target="_top">AD&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions</a><br/>
values&#160;<a href="opt_val_hes.xml" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulated Measurement Values" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulated&#xA0;Measurement&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_nlp_ode_problem.xml#Measurements.Simulation Parameter Values" target="_top">An&#xA0;ODE&#xA0;Inverse&#xA0;Problem&#xA0;Example:&#160;Measurements.Simulation&#xA0;Parameter&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulated Measurement Values" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulated&#xA0;Measurement&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="ipopt_solve_ode_inverse.cpp.xml#Measurements.Simulation Parameter Values" target="_top">ODE&#xA0;Inverse&#xA0;Problem&#xA0;Definitions:&#xA0;Source&#xA0;Code:&#160;Measurements.Simulation&#xA0;Parameter&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nearequal.xml" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Purpose.Derivative Values" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose.Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Purpose.Function Values" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Purpose.Function&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_hash.xml" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.Large x Values" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Large&#xA0;x&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="printfor.xml" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode</a><br/>
var&#160;<a href="printfor.xml#var" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;var</a><br/>
variable&#160;<a href="glossary.xml#Variable" target="_top">Glossary:&#160;Variable</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Tape.Independent Variable" target="_top">Glossary:&#160;Tape.Independent&#xA0;Variable</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="par_var.cpp.xml" target="_top">AD&#xA0;Parameter&#xA0;and&#xA0;Variable&#xA0;Functions:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="parvar.xml" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.cpp.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="var2par.xml" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence.Variable" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Variable</a><br/>
variables&#160;<a href="glossary.xml#Tape.Dependent Variables" target="_top">Glossary:&#160;Tape.Dependent&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Independent Variables" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Independent&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sub_sparse_hes.cpp.xml" target="_top">Computing&#xA0;Sparse&#xA0;Hessian&#xA0;for&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.cpp.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;That&#xA0;Can&#xA0;be&#xA0;Skipped:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="number_skip.xml" target="_top">Number&#xA0;of&#xA0;Variables&#xA0;that&#xA0;Can&#xA0;be&#xA0;Skipped</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_cholesky.hpp.xml#Private.Variables" target="_top">Atomic&#xA0;Eigen&#xA0;Cholesky&#xA0;Factorization&#xA0;Class:&#160;Private.Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_inv.hpp.xml#Private.Variables" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Inversion&#xA0;Class:&#160;Private.Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_eigen_mat_mul.hpp.xml#Private.Variables" target="_top">Atomic&#xA0;Eigen&#xA0;Matrix&#xA0;Multiply&#xA0;Class:&#160;Private.Variables</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base_clear.xml" target="_top">Free&#xA0;Static&#xA0;Variables</a><br/>
variables<b>:</b>&#160;<a href="sparse_sub_hes.cpp.xml" target="_top">Sparse&#xA0;Hessian&#xA0;on&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparsity_sub.cpp.xml" target="_top">Sparsity&#xA0;Patterns&#xA0;For&#xA0;a&#xA0;Subset&#xA0;of&#xA0;Variables:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
variate&#160;<a href="uniform_01_c.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate</a><br/>
vec&#160;<a href="check_for_nan.xml#get_check_for_nan.vec" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;get_check_for_nan.vec</a><br/>
vec<b>_</b>ad<b>.</b>cpp&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
vecad<b>&lt;</b>base<b>&gt;</b>&#160;<a href="azmul.xml#VecAD&lt;Base&gt;" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication:&#160;VecAD&lt;Base&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="unary_standard_math.xml#Possible Types.VecAD&lt;Base&gt;" target="_top">The&#xA0;Unary&#xA0;Standard&#xA0;Math&#xA0;Functions:&#160;Possible&#xA0;Types.VecAD&lt;Base&gt;</a><br/>
vecad<b>&lt;</b>base<b>&gt;::</b>reference&#160;<a href="vecad.xml#VecAD&lt;Base&gt;::reference" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;VecAD&lt;Base&gt;::reference</a><br/>
vector&#160;<a href="ipopt_nlp_ode_simple.xml#Argument Vector" target="_top">ODE&#xA0;Fitting&#xA0;Using&#xA0;Simple&#xA0;Representation:&#160;Argument&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_ipopt_nlp.xml#fg(x).Index Vector" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;fg(x).Index&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="test_vector.xml" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Sparsity Pattern.Vector of Sets" target="_top">Glossary:&#160;Sparsity&#xA0;Pattern.Vector&#xA0;of&#xA0;Sets</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Sparsity Pattern.Vector of Boolean" target="_top">Glossary:&#160;Sparsity&#xA0;Pattern.Vector&#xA0;of&#xA0;Boolean</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="glossary.xml#Elementary Vector" target="_top">Glossary:&#160;Elementary&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="faq.xml#Namespace.Test Vector Preprocessor Symbol" target="_top">Frequently&#xA0;Asked&#xA0;Questions&#xA0;and&#xA0;Answers:&#160;Namespace.Test&#xA0;Vector&#xA0;Preprocessor&#xA0;Symbol</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="uniform_01.xml#Vector" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="mat_sum_sq.xml#Vector" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_grad_33.xml#Vector" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_33.xml#Vector" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_minor.xml#Vector" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Minors:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="det_by_lu.xml#Vector" target="_top">Determinant&#xA0;Using&#xA0;Expansion&#xA0;by&#xA0;Lu&#xA0;Factorization:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testvector.xml" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="example.xml#The CppAD Test Vector Template Class" target="_top">Examples:&#160;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="index_sort.xml" target="_top">Returns&#xA0;Indices&#xA0;that&#xA0;Sort&#xA0;a&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.cpp.xml" target="_top">CppAD::vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_vector.xml" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegearcontrol.xml#Vector" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Vector" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odeerrcontrol.xml#Vector" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Vector" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Vector" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="poly.xml#Vector" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="nan.xml#Vector" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="checksimplevector.xml" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simple_vector.cpp.xml" target="_top">Simple&#xA0;Vector&#xA0;Template&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="simplevector.xml" target="_top">Definition&#xA0;of&#xA0;a&#xA0;Simple&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="speed_test.xml#Vector" target="_top">Run&#xA0;One&#xA0;Speed&#xA0;Test&#xA0;and&#xA0;Return&#xA0;Results:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="utility.xml#Miscellaneous.Simple Vector Template Class" target="_top">Some&#xA0;General&#xA0;Purpose&#xA0;Utilities:&#160;Miscellaneous.Simple&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="funcheck.xml#Vector" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hessian.xml#Vector" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revone.xml#Vector" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forone.xml#Vector" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jacobian.xml#Vector" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_any.xml#Vector" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_two.xml#Vector" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="reverse_one.xml#Vector" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Vector" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Vector" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_two.xml#Vector" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_one.xml#Vector" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml#Vector" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values:&#160;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Examples.Vector Range" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Examples.Vector&#xA0;Range</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_testvector.xml" target="_top">Choosing&#xA0;the&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="eigen_prefix.xml#Test Vector" target="_top">Including&#xA0;the&#xA0;Eigen&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Test&#xA0;Vector</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake.xml" target="_top">Using&#xA0;CMake&#xA0;to&#xA0;Configure&#xA0;CppAD</a><br/>
vector<b>_</b>size&#160;<a href="check_for_nan.xml#Error Message.vector_size" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;For&#xA0;Nan&#xA0;Results:&#160;Error&#xA0;Message.vector_size</a><br/>
vectorad&#160;<a href="funconstruct.xml#VectorAD" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;VectorAD</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.xml#VectorAD" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;VectorAD</a><br/>
vectorBool&#160;<a href="vector_bool.cpp.xml" target="_top">CppAD::vectorBool&#xA0;Class:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
vectorbase&#160;<a href="sparse_hessian.xml#VectorBase" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;VectorBase</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#VectorBase" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;VectorBase</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revtwo.xml#VectorBase" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;VectorBase</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml#VectorBase" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;VectorBase</a><br/>
vectorbool&#160;<a href="cppad_vector.xml#vectorBool" target="_top">The&#xA0;CppAD::vector&#xA0;Template&#xA0;Class:&#160;vectorBool</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="bool_sparsity.cpp.xml" target="_top">Using&#xA0;vectorBool&#xA0;Sparsity&#xA0;To&#xA0;Conserve&#xA0;Memory:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
vectors&#160;<a href="testvector.xml#Eigen Vectors" target="_top">Using&#xA0;The&#xA0;CppAD&#xA0;Test&#xA0;Vector&#xA0;Template&#xA0;Class:&#160;Eigen&#xA0;Vectors</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vec_ad.cpp.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vecad.xml" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations</a><br/>
vectorset&#160;<a href="sparse_hessian.xml#VectorSet" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;VectorSet</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#VectorSet" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;VectorSet</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsehes.xml#VectorSet" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;VectorSet</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsehes.xml#VectorSet" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;VectorSet</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="revsparsejac.xml#VectorSet" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;VectorSet</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="forsparsejac.xml#VectorSet" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;VectorSet</a><br/>
vectorsize&#160;<a href="sparse_hessian.xml#VectorSize" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;VectorSize</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#VectorSize" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;VectorSize</a><br/>
vectorsize<b>_</b>t&#160;<a href="revtwo.xml#VectorSize_t" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;VectorSize_t</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="fortwo.xml#VectorSize_t" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;VectorSize_t</a><br/>
verification&#160;<a href="exp_eps_rev2.xml#Verification" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Verification" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.xml#Verification" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Verification" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Verification" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.xml#Verification" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Verification" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.xml#Verification" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Verification" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Verification</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Verification" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Verification</a><br/>
verify&#160;<a href="exp_eps_rev2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_rev1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_rev1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Reverse&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
version&#160;<a href="microsoft_timer.xml" target="_top">Microsoft&#xA0;Version&#xA0;of&#xA0;Elapsed&#xA0;Number&#xA0;of&#xA0;Seconds</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_afun.xml" target="_top">Using&#xA0;AD&#xA0;Version&#xA0;of&#xA0;Atomic&#xA0;Function</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="discrete.xml#Create AD Version" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;Create&#xA0;AD&#xA0;Version</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Current Version" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Current&#xA0;Version</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad.xml" target="_top">cppad-20170000.4:&#xA0;A&#xA0;Package&#xA0;for&#xA0;Differentiation&#xA0;of&#xA0;C++&#xA0;Algorithms</a><br/>
version<b>)</b>&#160;<a href="double_mat_mul.cpp.xml" target="_top">CppAD&#xA0;Speed:&#xA0;Matrix&#xA0;Multiplication&#xA0;(Double&#xA0;Version)</a><br/>
versions&#160;<a href="download.xml#Daily Versions" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Daily&#xA0;Versions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Monthly Versions" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Monthly&#xA0;Versions</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Release Versions" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Release&#xA0;Versions</a><br/>
virtual&#160;<a href="atomic_forward.xml" target="_top">Atomic&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="atomic_base.xml#Virtual Functions" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;Virtual&#xA0;Functions</a><br/>
vx&#160;<a href="old_atomic.xml#forward.vx" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;forward.vx</a><br/>
&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.xml#Implementation.vx" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.vx</a><br/>
&#160;&#160;&#160;<a href="atomic_for_sparse_hes.xml#Implementation.vx" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.vx</a><br/>
&#160;&#160;&#160;<a href="atomic_forward.xml#vx" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;vx</a><br/>
vy&#160;<a href="old_atomic.xml#forward.vy" target="_top">User&#xA0;Defined&#xA0;Atomic&#xA0;AD&#xA0;Functions:&#160;forward.vy</a><br/>
&#160;&#160;&#160;<a href="atomic_forward.xml#vy" target="_top">Atomic&#xA0;Forward&#xA0;Mode:&#160;vy</a><br/>

<b><big><a name="W">W</a></big></b>
<br/>
w&#160;<a href="sparse_hessian.xml#w" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;w</a><br/>
&#160;&#160;<a href="hessian.xml#w" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;w</a><br/>
&#160;&#160;<a href="reverse_any.xml#w" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;w</a><br/>
&#160;&#160;<a href="reverse_two.xml#w" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;w</a><br/>
&#160;&#160;<a href="reverse_two.xml#W" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;W</a><br/>
&#160;&#160;<a href="reverse_one.xml#w" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;w</a><br/>
w<b>(</b>u<b>)</b>&#160;<a href="reverse_any.xml#Notation.W(u)" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Notation.W(u)</a><br/>
w<b>^(</b>k<b>)</b>&#160;<a href="reverse_any.xml#Notation.w^(k)" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Notation.w^(k)</a><br/>
warning&#160;<a href="odegearcontrol.xml#Fun.Warning" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Fun.Warning</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="odegear.xml#Fun.Warning" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Fun.Warning</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="rosen34.xml#Fun.Warning" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Fun.Warning</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="runge45.xml#Fun.Warning" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Fun.Warning</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#API Warning" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;API&#xA0;Warning</a><br/>
was&#160;<a href="ta_free_all.xml" target="_top">Free&#xA0;All&#xA0;Memory&#xA0;That&#xA0;Was&#xA0;Allocated&#xA0;for&#xA0;Use&#xA0;by&#xA0;thread_alloc</a><br/>
when&#160;<a href="ta_hold_memory.xml" target="_top">Control&#xA0;When&#xA0;Thread&#xA0;Alloc&#xA0;Retains&#xA0;Memory&#xA0;For&#xA0;Future&#xA0;Use</a><br/>
where&#160;<a href="base_complex.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;std::complex&lt;double&gt;</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_double.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;double</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_float.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;float</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_adolc.hpp.xml" target="_top">Enable&#xA0;use&#xA0;of&#xA0;AD&lt;Base&gt;&#xA0;where&#xA0;Base&#xA0;is&#xA0;Adolc's&#xA0;adouble&#xA0;Type</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="base_alloc.hpp.xml" target="_top">Example&#xA0;AD&lt;Base&gt;&#xA0;Where&#xA0;Base&#xA0;Constructor&#xA0;Allocates&#xA0;Memory</a><br/>
windows&#160;<a href="test_vector.xml#MS Windows" target="_top">Choosing&#xA0;The&#xA0;Vector&#xA0;Testing&#xA0;Template&#xA0;Class:&#160;MS&#xA0;Windows</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cmake_check.xml#Check All.Windows" target="_top">Checking&#xA0;the&#xA0;CppAD&#xA0;Examples&#xA0;and&#xA0;Tests:&#160;Check&#xA0;All.Windows</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="download.xml#Windows File Extraction and Testing" target="_top">Download&#xA0;The&#xA0;CppAD&#xA0;Source&#xA0;Code:&#160;Windows&#xA0;File&#xA0;Extraction&#xA0;and&#xA0;Testing</a><br/>
wish&#160;<a href="cppad_ipopt_nlp.xml#Wish List" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;Wish&#xA0;List</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="wish_list.xml" target="_top">The&#xA0;CppAD&#xA0;Wish&#xA0;List</a><br/>
with&#160;<a href="zdouble.xml" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad_ok.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;With&#xA0;Recorded&#xA0;Pivoting:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="lu_vec_ad.cpp.xml" target="_top">Lu&#xA0;Factor&#xA0;and&#xA0;Solve&#xA0;with&#xA0;Recorded&#xA0;Pivoting</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="change_param.cpp.xml" target="_top">Computing&#xA0;a&#xA0;Jacobian&#xA0;With&#xA0;Constants&#xA0;that&#xA0;Change</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_eigen.hpp.xml" target="_top">Enable&#xA0;Use&#xA0;of&#xA0;Eigen&#xA0;Linear&#xA0;Algebra&#xA0;Package&#xA0;with&#xA0;CppAD</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="lu_solve.cpp.xml" target="_top">LuSolve&#xA0;With&#xA0;Complex&#xA0;Arguments:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="mul_level_adolc.cpp.xml" target="_top">Using&#xA0;Adolc&#xA0;with&#xA0;Multiple&#xA0;Levels&#xA0;of&#xA0;Taping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="near_equal_ext.cpp.xml" target="_top">Compare&#xA0;AD&#xA0;with&#xA0;Base&#xA0;Objects:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="nearequalext.xml" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="boolvalued.xml" target="_top">Bool&#xA0;Valued&#xA0;Operations&#xA0;and&#xA0;Functions&#xA0;with&#xA0;AD&#xA0;Arguments</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_set_sparsity.cpp.xml" target="_top">Atomic&#xA0;Sparsity&#xA0;with&#xA0;Set&#xA0;Patterns:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_get_started.cpp.xml" target="_top">Getting&#xA0;Started&#xA0;with&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interp_retape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="interp_onetape.cpp.xml" target="_top">Interpolation&#xA0;With&#xA0;Out&#xA0;Retaping:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
work&#160;<a href="sparse_hessian.xml#work" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;work</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hessian.xml#p.work" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;p.work</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jacobian.xml#work" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;work</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="auto_tools.xml#Work Directory" target="_top">Auto&#xA0;Tools&#xA0;Unix&#xA0;Test&#xA0;and&#xA0;Installation:&#160;Work&#xA0;Directory</a><br/>
worker&#160;<a href="multi_newton_work.cpp.xml" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="harmonic_work.cpp.xml" target="_top">Multi-threading&#xA0;Sum&#xA0;of&#xA0;1/i&#xA0;Utility&#xA0;Routines</a><br/>
write&#160;<a href="ad_input.xml" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator</a><br/>

<b><big><a name="X">X</a></big></b>
<br/>
x&#160;<a href="opt_val_hes.xml#x" target="_top">Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Optimal&#xA0;Values:&#160;x</a><br/>
&#160;&#160;<a href="benderquad.xml#x" target="_top">Computing&#xA0;Jacobian&#xA0;and&#xA0;Hessian&#xA0;of&#xA0;Bender's&#xA0;Reduced&#xA0;Objective:&#160;x</a><br/>
&#160;&#160;<a href="cppad_ipopt_nlp.xml#solution.x" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;solution.x</a><br/>
&#160;&#160;<a href="uniform_01.xml#x" target="_top">Simulate&#xA0;a&#xA0;[0,1]&#xA0;Uniform&#xA0;Random&#xA0;Variate:&#160;x</a><br/>
&#160;&#160;<a href="sparse_hes_fun.xml#x" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Hessian:&#160;x</a><br/>
&#160;&#160;<a href="sparse_jac_fun.xml#x" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;That&#xA0;Has&#xA0;a&#xA0;Sparse&#xA0;Jacobian:&#160;x</a><br/>
&#160;&#160;<a href="ode_evaluate.xml#x" target="_top">Evaluate&#xA0;a&#xA0;Function&#xA0;Defined&#xA0;in&#xA0;Terms&#xA0;of&#xA0;an&#xA0;ODE:&#160;x</a><br/>
&#160;&#160;<a href="mat_sum_sq.xml#x" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;x</a><br/>
&#160;&#160;<a href="det_grad_33.xml#x" target="_top">Check&#xA0;Gradient&#xA0;of&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;x</a><br/>
&#160;&#160;<a href="det_33.xml#x" target="_top">Check&#xA0;Determinant&#xA0;of&#xA0;3&#xA0;by&#xA0;3&#xA0;matrix:&#160;x</a><br/>
&#160;&#160;<a href="link_sparse_jacobian.xml#x" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Jacobian:&#160;x</a><br/>
&#160;&#160;<a href="link_sparse_hessian.xml#x" target="_top">Speed&#xA0;Testing&#xA0;Sparse&#xA0;Hessian:&#160;x</a><br/>
&#160;&#160;<a href="link_ode.xml#x" target="_top">Speed&#xA0;Testing&#xA0;the&#xA0;Jacobian&#xA0;of&#xA0;Ode&#xA0;Solution:&#160;x</a><br/>
&#160;&#160;<a href="link_mat_mul.xml#x" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply:&#160;x</a><br/>
&#160;&#160;<a href="ipopt_solve.xml#solution.x" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;solution.x</a><br/>
&#160;&#160;<a href="ipopt_solve.xml#fg_eval.x" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;fg_eval.x</a><br/>
&#160;&#160;<a href="odegearcontrol.xml#Fun.x" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;Fun.x</a><br/>
&#160;&#160;<a href="odegear.xml#X" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;X</a><br/>
&#160;&#160;<a href="odegear.xml#Fun.x" target="_top">An&#xA0;Arbitrary&#xA0;Order&#xA0;Gear&#xA0;Method:&#160;Fun.x</a><br/>
&#160;&#160;<a href="rosen34.xml#Fun.x" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;Fun.x</a><br/>
&#160;&#160;<a href="runge45.xml#Fun.x" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;Fun.x</a><br/>
&#160;&#160;<a href="luinvert.xml#X" target="_top">Invert&#xA0;an&#xA0;LU&#xA0;Factored&#xA0;Equation:&#160;X</a><br/>
&#160;&#160;<a href="lusolve.xml#X" target="_top">Compute&#xA0;Determinant&#xA0;and&#xA0;Solve&#xA0;Linear&#xA0;Equations:&#160;X</a><br/>
&#160;&#160;<a href="pow_int.xml#x" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;x</a><br/>
&#160;&#160;<a href="checksimplevector.xml#x, y" target="_top">Check&#xA0;Simple&#xA0;Vector&#xA0;Concept:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="nearequal.xml#x" target="_top">Determine&#xA0;if&#xA0;Two&#xA0;Values&#xA0;Are&#xA0;Nearly&#xA0;Equal:&#160;x</a><br/>
&#160;&#160;<a href="funcheck.xml#x" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;x</a><br/>
&#160;&#160;<a href="funcheck.xml#g.x" target="_top">Check&#xA0;an&#xA0;ADFun&#xA0;Sequence&#xA0;of&#xA0;Operations:&#160;g.x</a><br/>
&#160;&#160;<a href="sparse_hessian.xml#x" target="_top">Sparse&#xA0;Hessian:&#xA0;Easy&#xA0;Driver:&#160;x</a><br/>
&#160;&#160;<a href="sparse_jacobian.xml#x" target="_top">Sparse&#xA0;Jacobian:&#xA0;Easy&#xA0;Driver:&#160;x</a><br/>
&#160;&#160;<a href="revtwo.xml#x" target="_top">Reverse&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;x</a><br/>
&#160;&#160;<a href="fortwo.xml#x" target="_top">Forward&#xA0;Mode&#xA0;Second&#xA0;Partial&#xA0;Derivative&#xA0;Driver:&#160;x</a><br/>
&#160;&#160;<a href="hessian.xml#x" target="_top">Hessian:&#xA0;Easy&#xA0;Driver:&#160;x</a><br/>
&#160;&#160;<a href="revone.xml#x" target="_top">First&#xA0;Order&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;x</a><br/>
&#160;&#160;<a href="forone.xml#x" target="_top">First&#xA0;Order&#xA0;Partial&#xA0;Derivative:&#xA0;Driver&#xA0;Routine:&#160;x</a><br/>
&#160;&#160;<a href="jacobian.xml#x" target="_top">Jacobian:&#xA0;Driver&#xA0;Routine:&#160;x</a><br/>
&#160;&#160;<a href="forsparsehes.xml#x" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;x</a><br/>
&#160;&#160;<a href="revsparsehes.xml#x" target="_top">Hessian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;x</a><br/>
&#160;&#160;<a href="revsparsejac.xml#x" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Reverse&#xA0;Mode:&#160;x</a><br/>
&#160;&#160;<a href="forsparsejac.xml#x" target="_top">Jacobian&#xA0;Sparsity&#xA0;Pattern:&#xA0;Forward&#xA0;Mode:&#160;x</a><br/>
&#160;&#160;<a href="reverse_one.xml#x" target="_top">First&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;x</a><br/>
&#160;&#160;<a href="dependent.xml#x" target="_top">Stop&#xA0;Recording&#xA0;and&#xA0;Store&#xA0;Operation&#xA0;Sequence:&#160;x</a><br/>
&#160;&#160;<a href="funconstruct.xml#x" target="_top">Construct&#xA0;an&#xA0;ADFun&#xA0;Object&#xA0;and&#xA0;Stop&#xA0;Recording:&#160;x</a><br/>
&#160;&#160;<a href="independent.xml#x" target="_top">Declare&#xA0;Independent&#xA0;Variables&#xA0;and&#xA0;Start&#xA0;Recording:&#160;x</a><br/>
&#160;&#160;<a href="base_hash.xml#x" target="_top">Base&#xA0;Type&#xA0;Requirements&#xA0;for&#xA0;Hash&#xA0;Coding&#xA0;Values:&#160;x</a><br/>
&#160;&#160;<a href="vecad.xml#AD Indexing.x" target="_top">AD&#xA0;Vectors&#xA0;that&#xA0;Record&#xA0;Index&#xA0;Operations:&#160;AD&#xA0;Indexing.x</a><br/>
&#160;&#160;<a href="equalopseq.xml#x" target="_top">Check&#xA0;if&#xA0;Two&#xA0;Value&#xA0;are&#xA0;Identically&#xA0;Equal:&#160;x</a><br/>
&#160;&#160;<a href="parvar.xml#x" target="_top">Is&#xA0;an&#xA0;AD&#xA0;Object&#xA0;a&#xA0;Parameter&#xA0;or&#xA0;Variable:&#160;x</a><br/>
&#160;&#160;<a href="boolfun.xml#x" target="_top">AD&#xA0;Boolean&#xA0;Functions:&#160;x</a><br/>
&#160;&#160;<a href="nearequalext.xml#x" target="_top">Compare&#xA0;AD&#xA0;and&#xA0;Base&#xA0;Objects&#xA0;for&#xA0;Nearly&#xA0;Equal:&#160;x</a><br/>
&#160;&#160;<a href="compare.xml#x" target="_top">AD&#xA0;Binary&#xA0;Comparison&#xA0;Operators:&#160;x</a><br/>
&#160;&#160;<a href="atomic_tangent.cpp.xml#Use Atomic Function.Large x Values" target="_top">Tan&#xA0;and&#xA0;Tanh&#xA0;as&#xA0;User&#xA0;Atomic&#xA0;Operations:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Use&#xA0;Atomic&#xA0;Function.Large&#xA0;x&#xA0;Values</a><br/>
&#160;&#160;<a href="atomic_rev_sparse_hes.xml#u.x" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;u.x</a><br/>
&#160;&#160;<a href="atomic_for_sparse_hes.xml#Implementation.x" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.x</a><br/>
&#160;&#160;<a href="atomic_rev_sparse_jac.xml#Implementation.x" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.x</a><br/>
&#160;&#160;<a href="atomic_for_sparse_jac.xml#Implementation.x" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity&#xA0;Patterns:&#160;Implementation.x</a><br/>
&#160;&#160;<a href="discrete.xml#x" target="_top">Discrete&#xA0;AD&#xA0;Functions:&#160;x</a><br/>
&#160;&#160;<a href="pow.xml#x" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;x</a><br/>
&#160;&#160;<a href="atan2.xml#x" target="_top">AD&#xA0;Two&#xA0;Argument&#xA0;Inverse&#xA0;Tangent&#xA0;Function:&#160;x</a><br/>
&#160;&#160;<a href="sign.xml#x, y" target="_top">The&#xA0;Sign:&#xA0;sign:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="log1p.xml#x, y" target="_top">The&#xA0;Logarithm&#xA0;of&#xA0;One&#xA0;Plus&#xA0;Argument:&#xA0;log1p:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="expm1.xml#x, y" target="_top">The&#xA0;Exponential&#xA0;Function&#xA0;Minus&#xA0;One:&#xA0;expm1:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="erf.xml#x, y" target="_top">The&#xA0;Error&#xA0;Function:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="atanh.xml#x, y" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;atanh:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="asinh.xml#x, y" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;asinh:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="acosh.xml#x, y" target="_top">The&#xA0;Inverse&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;acosh:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="abs.xml#x, y" target="_top">AD&#xA0;Absolute&#xA0;Value&#xA0;Functions:&#xA0;abs,&#xA0;fabs:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="tanh.xml#x, y" target="_top">The&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Function:&#xA0;tanh:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="tan.xml#x, y" target="_top">The&#xA0;Tangent&#xA0;Function:&#xA0;tan:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="sqrt.xml#x, y" target="_top">The&#xA0;Square&#xA0;Root&#xA0;Function:&#xA0;sqrt:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="sinh.xml#x, y" target="_top">The&#xA0;Hyperbolic&#xA0;Sine&#xA0;Function:&#xA0;sinh:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="sin.xml#x, y" target="_top">The&#xA0;Sine&#xA0;Function:&#xA0;sin:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="log10.xml#x, y" target="_top">The&#xA0;Base&#xA0;10&#xA0;Logarithm&#xA0;Function:&#xA0;log10:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="log.xml#x, y" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;log:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="exp.xml#x, y" target="_top">The&#xA0;Exponential&#xA0;Function:&#xA0;exp:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="cosh.xml#x, y" target="_top">The&#xA0;Hyperbolic&#xA0;Cosine&#xA0;Function:&#xA0;cosh:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="cos.xml#x, y" target="_top">The&#xA0;Cosine&#xA0;Function:&#xA0;cos:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="atan.xml#x, y" target="_top">Inverse&#xA0;Tangent&#xA0;Function:&#xA0;atan:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="asin.xml#x, y" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;asin:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="acos.xml#x, y" target="_top">Inverse&#xA0;Sine&#xA0;Function:&#xA0;acos:&#160;x,&#xA0;y</a><br/>
&#160;&#160;<a href="compute_assign.xml#x" target="_top">AD&#xA0;Computed&#xA0;Assignment&#xA0;Operators:&#160;x</a><br/>
&#160;&#160;<a href="ad_binary.xml#x" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;x</a><br/>
&#160;&#160;<a href="unaryminus.xml#x" target="_top">AD&#xA0;Unary&#xA0;Minus&#xA0;Operator:&#160;x</a><br/>
&#160;&#160;<a href="unaryplus.xml#x" target="_top">AD&#xA0;Unary&#xA0;Plus&#xA0;Operator:&#160;x</a><br/>
&#160;&#160;<a href="var2par.xml#x" target="_top">Convert&#xA0;an&#xA0;AD&#xA0;Variable&#xA0;to&#xA0;a&#xA0;Parameter:&#160;x</a><br/>
&#160;&#160;<a href="ad_output.xml#x" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;x</a><br/>
&#160;&#160;<a href="ad_input.xml#x" target="_top">AD&#xA0;Output&#xA0;Stream&#xA0;Operator:&#160;x</a><br/>
&#160;&#160;<a href="integer.xml#x" target="_top">Convert&#xA0;From&#xA0;AD&#xA0;to&#xA0;Integer:&#160;x</a><br/>
&#160;&#160;<a href="value.xml#x" target="_top">Convert&#xA0;From&#xA0;an&#xA0;AD&#xA0;Type&#xA0;to&#xA0;its&#xA0;Base&#xA0;Type:&#160;x</a><br/>
&#160;&#160;<a href="ad_assign.xml#x" target="_top">AD&#xA0;Assignment&#xA0;Operator:&#160;x</a><br/>
&#160;&#160;<a href="ad_ctor.xml#x" target="_top">AD&#xA0;Constructors:&#160;x</a><br/>
&#160;&#160;<a href="exp_eps.xml#x" target="_top">An&#xA0;Epsilon&#xA0;Accurate&#xA0;Exponential&#xA0;Approximation:&#160;x</a><br/>
&#160;&#160;<a href="exp_2.xml#x" target="_top">Second&#xA0;Order&#xA0;Exponential&#xA0;Approximation:&#160;x</a><br/>
x<b>(</b>t&#160;<a href="reverse_any.xml#Notation.X(t, u)" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Notation.X(t,&#xA0;u)</a><br/>
x<b>(</b>t<b>)</b>&#160;<a href="forward_dir.xml#X(t)" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;X(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#X(t)" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;X(t)</a><br/>
x<b>)</b>&#160;<a href="printfor.xml#f.Forward(0, x)" target="_top">Printing&#xA0;AD&#xA0;Values&#xA0;During&#xA0;Forward&#xA0;Mode:&#160;f.Forward(0,&#xA0;x)</a><br/>
x0&#160;<a href="forward_two.xml#x0" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;x0</a><br/>
&#160;&#160;&#160;<a href="forward_one.xml#x0" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;x0</a><br/>
&#160;&#160;&#160;<a href="forward_zero.xml#x0" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values:&#160;x0</a><br/>
x1&#160;<a href="forward_two.xml#x1" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;x1</a><br/>
&#160;&#160;&#160;<a href="forward_one.xml#x1" target="_top">First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;x1</a><br/>
x2&#160;<a href="forward_two.xml#x2" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;x2</a><br/>
x<b>^(</b>k<b>)</b>&#160;<a href="reverse_two.xml#x^(k)" target="_top">Second&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;x^(k)</a><br/>
x<b>_</b>1&#160;<a href="atomic_rev_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_hes.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Hessian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_rev_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Reverse&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
&#160;&#160;&#160;&#160;<a href="atomic_for_sparse_jac.cpp.xml#Test with x_1 Both a Variable and a Parameter" target="_top">Atomic&#xA0;Forward&#xA0;Jacobian&#xA0;Sparsity:&#xA0;Example&#xA0;and&#xA0;Test:&#160;Test&#xA0;with&#xA0;x_1&#xA0;Both&#xA0;a&#xA0;Variable&#xA0;and&#xA0;a&#xA0;Parameter</a><br/>
x<b>_</b>i&#160;<a href="cppad_ipopt_nlp.xml#x_i" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;x_i</a><br/>
x<b>_</b>l&#160;<a href="cppad_ipopt_nlp.xml#x_l" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;x_l</a><br/>
x<b>_</b>u&#160;<a href="cppad_ipopt_nlp.xml#x_u" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;x_u</a><br/>
xf&#160;<a href="odegearcontrol.xml#xf" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;xf</a><br/>
&#160;&#160;&#160;<a href="odeerrcontrol.xml#xf" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;xf</a><br/>
&#160;&#160;&#160;<a href="rosen34.xml#xf" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;xf</a><br/>
&#160;&#160;&#160;<a href="runge45.xml#xf" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;xf</a><br/>
xi&#160;<a href="ipopt_solve.xml#xi" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;xi</a><br/>
&#160;&#160;&#160;<a href="odegearcontrol.xml#xi" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;Gear's&#xA0;Ode&#xA0;Solvers:&#160;xi</a><br/>
&#160;&#160;&#160;<a href="odeerrcontrol.xml#xi" target="_top">An&#xA0;Error&#xA0;Controller&#xA0;for&#xA0;ODE&#xA0;Solvers:&#160;xi</a><br/>
&#160;&#160;&#160;<a href="rosen34.xml#xi" target="_top">A&#xA0;3rd&#xA0;and&#xA0;4th&#xA0;Order&#xA0;Rosenbrock&#xA0;ODE&#xA0;Solver:&#160;xi</a><br/>
&#160;&#160;&#160;<a href="runge45.xml#xi" target="_top">An&#xA0;Embedded&#xA0;4th&#xA0;and&#xA0;5th&#xA0;Order&#xA0;Runge-Kutta&#xA0;ODE&#xA0;Solver:&#160;xi</a><br/>
xl&#160;<a href="ipopt_solve.xml#xl" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;xl</a><br/>
xlow&#160;<a href="multi_newton_work.cpp.xml#xlow" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;xlow</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#xlow" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;xlow</a><br/>
xout&#160;<a href="multi_newton_work.cpp.xml#multi_newton_combine.xout" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;multi_newton_combine.xout</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#xout" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;xout</a><br/>
xq&#160;<a href="forward_dir.xml#xq" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;xq</a><br/>
&#160;&#160;&#160;<a href="forward_order.xml#xq" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;xq</a><br/>
xu&#160;<a href="ipopt_solve.xml#xu" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;xu</a><br/>
xup&#160;<a href="multi_newton_work.cpp.xml#xlow.xup" target="_top">Multi-threading&#xA0;Newton&#xA0;Method&#xA0;Utility&#xA0;Routines:&#160;xlow.xup</a><br/>
&#160;&#160;&#160;&#160;<a href="multi_newton.cpp.xml#xup" target="_top">A&#xA0;Multi-Threaded&#xA0;Newton's&#xA0;Method:&#160;xup</a><br/>

<b><big><a name="Y">Y</a></big></b>
<br/>
y<b>(</b>t&#160;<a href="reverse_any.xml#Notation.Y(t, u)" target="_top">Any&#xA0;Order&#xA0;Reverse&#xA0;Mode:&#160;Notation.Y(t,&#xA0;u)</a><br/>
y<b>(</b>t<b>)</b>&#160;<a href="tan_reverse.xml#Eliminating Y(t)" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Eliminating&#xA0;Y(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Y(t)" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Y(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Y(t)" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Y(t)</a><br/>
y0&#160;<a href="forward_zero.xml#y0" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values:&#160;y0</a><br/>
y2&#160;<a href="forward_two.xml#y2" target="_top">Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Derivative&#xA0;Values:&#160;y2</a><br/>
year&#160;<a href="whats_new.xml#This Year" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD:&#160;This&#xA0;Year</a><br/>
years&#160;<a href="whats_new.xml#Previous Years" target="_top">Changes&#xA0;and&#xA0;Additions&#xA0;to&#xA0;CppAD:&#160;Previous&#xA0;Years</a><br/>
your&#160;<a href="license.xml" target="_top">Your&#xA0;License&#xA0;for&#xA0;the&#xA0;CppAD&#xA0;Software</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="ad_fun.cpp.xml" target="_top">Creating&#xA0;Your&#xA0;Own&#xA0;Interface&#xA0;to&#xA0;an&#xA0;ADFun&#xA0;Object</a><br/>
yq&#160;<a href="forward_dir.xml#yq" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;yq</a><br/>
&#160;&#160;&#160;<a href="forward_order.xml#yq" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;yq</a><br/>

<b><big><a name="Z">Z</a></big></b>
<br/>
z&#160;<a href="mat_sum_sq.xml#z" target="_top">Sum&#xA0;Elements&#xA0;of&#xA0;a&#xA0;Matrix&#xA0;Times&#xA0;Itself:&#160;z</a><br/>
&#160;&#160;<a href="link_poly.xml#z" target="_top">Speed&#xA0;Testing&#xA0;Second&#xA0;Derivative&#xA0;of&#xA0;a&#xA0;Polynomial:&#160;z</a><br/>
&#160;&#160;<a href="link_mat_mul.xml#z" target="_top">Speed&#xA0;Testing&#xA0;Derivative&#xA0;of&#xA0;Matrix&#xA0;Multiply:&#160;z</a><br/>
&#160;&#160;<a href="poly.xml#z" target="_top">Evaluate&#xA0;a&#xA0;Polynomial&#xA0;or&#xA0;its&#xA0;Derivative:&#160;z</a><br/>
&#160;&#160;<a href="pow_int.xml#z" target="_top">The&#xA0;Integer&#xA0;Power&#xA0;Function:&#160;z</a><br/>
&#160;&#160;<a href="nan.xml#nan(zero).z" target="_top">Obtain&#xA0;Nan&#xA0;or&#xA0;Determine&#xA0;if&#xA0;a&#xA0;Value&#xA0;is&#xA0;Nan:&#160;nan(zero).z</a><br/>
&#160;&#160;<a href="pow.xml#z" target="_top">The&#xA0;AD&#xA0;Power&#xA0;Function:&#160;z</a><br/>
&#160;&#160;<a href="ad_binary.xml#z" target="_top">AD&#xA0;Binary&#xA0;Arithmetic&#xA0;Operators:&#160;z</a><br/>
z<b>(</b>t<b>)</b>&#160;<a href="erf_reverse.xml#Order Zero Z(t)" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Order&#xA0;Zero&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml#Positive Orders Z(t)" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Positive&#xA0;Orders&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml#Order Zero Z(t)" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Order&#xA0;Zero&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml#Positive Orders Z(t)" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Positive&#xA0;Orders&#xA0;Z(t)</a><br/>
z<b>_</b>l&#160;<a href="cppad_ipopt_nlp.xml#solution.z_l" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;solution.z_l</a><br/>
z<b>_</b>u&#160;<a href="cppad_ipopt_nlp.xml#solution.z_u" target="_top">Nonlinear&#xA0;Programming&#xA0;Using&#xA0;the&#xA0;CppAD&#xA0;Interface&#xA0;to&#xA0;Ipopt:&#160;solution.z_u</a><br/>
zdouble<b>:</b>&#160;<a href="zdouble.cpp.xml" target="_top">zdouble:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero</a><br/>
zero&#160;<a href="zdouble.xml#Absolute Zero" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero:&#160;Absolute&#xA0;Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="zdouble.xml" target="_top">zdouble:&#xA0;An&#xA0;AD&#xA0;Base&#xA0;Type&#xA0;With&#xA0;Absolute&#xA0;Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="comparechange.xml" target="_top">Comparison&#xA0;Changes&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="erf_reverse.xml#Order Zero Z(t)" target="_top">Error&#xA0;Function&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Order&#xA0;Zero&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="tan_reverse.xml#Order Zero Z(t)" target="_top">Tangent&#xA0;and&#xA0;Hyperbolic&#xA0;Tangent&#xA0;Reverse&#xA0;Mode&#xA0;Theory:&#160;Order&#xA0;Zero&#xA0;Z(t)</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="compare_change.xml" target="_top">Comparison&#xA0;Changes&#xA0;Between&#xA0;Taping&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_dir.xml#Zero Order" target="_top">Multiple&#xA0;Directions&#xA0;Forward&#xA0;Mode:&#160;Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_order.xml#Zero Order" target="_top">Multiple&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="forward_zero.xml" target="_top">Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Function&#xA0;Values</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="base_require.xml#Absolute Zero, azmul" target="_top">AD&lt;Base&gt;&#xA0;Requirements&#xA0;for&#xA0;a&#xA0;CppAD&#xA0;Base&#xA0;Type:&#160;Absolute&#xA0;Zero,&#xA0;azmul</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="azmul.cpp.xml" target="_top">AD&#xA0;Absolute&#xA0;Zero&#xA0;Multiplication:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="azmul.xml" target="_top">Absolute&#xA0;Zero&#xA0;Multiplication</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="print_for_string.cpp.xml" target="_top">Print&#xA0;During&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#xA0;Example&#xA0;and&#xA0;Test</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.cpp.xml" target="_top">exp_eps:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for2.xml#Operation Sequence.Zero" target="_top">exp_eps:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for1.xml#Operation Sequence.Zero Order" target="_top">exp_eps:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml#Operation Sequence.Zero Order" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep:&#160;Operation&#xA0;Sequence.Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_eps_for0.xml" target="_top">exp_eps:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.cpp.xml" target="_top">exp_2:&#xA0;Verify&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Sweep</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for2.xml#Operation Sequence.Zero" target="_top">exp_2:&#xA0;Second&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Zero</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for1.xml#Operation Sequence.Zero Order" target="_top">exp_2:&#xA0;First&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Operation Sequence.Zero Order" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Operation&#xA0;Sequence.Zero&#xA0;Order</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml#Zero Order Expansion" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode:&#160;Zero&#xA0;Order&#xA0;Expansion</a><br/>
&#160;&#160;&#160;&#160;&#160;<a href="exp_2_for0.xml" target="_top">exp_2:&#xA0;Operation&#xA0;Sequence&#xA0;and&#xA0;Zero&#xA0;Order&#xA0;Forward&#xA0;Mode</a><br/>
zl&#160;<a href="ipopt_solve.xml#solution.zl" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;solution.zl</a><br/>
zu&#160;<a href="ipopt_solve.xml#solution.zu" target="_top">Use&#xA0;Ipopt&#xA0;to&#xA0;Solve&#xA0;a&#xA0;Nonlinear&#xA0;Programming&#xA0;Problem:&#160;solution.zu</a><br/>

</body>
</html>
