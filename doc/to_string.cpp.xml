<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>to_string: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="to_string: Example and Test"/>
<meta name="keywords" id="keywords" content=" to_string: example test "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_to_string.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="to_string.xml" target="_top">Prev</a>
</td><td><a href="set_union.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>to_string</option>
<option>to_string.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>to_string-&gt;</option>
<option>to_string.cpp</option>
</select>
</td>
<td>to_string.cpp</td>
<td>Headings</td>
</tr></table><br/>


<center><b><big><big>to_string: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-style: italic"><span style="color: #9A1900">// Examples with fundamental types</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/to_string.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Integer</span><span style="color: #990000">&gt;</span>
     <span style="color: #008080">Integer</span> <span style="font-weight: bold"><span style="color: #000000">string2signed</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> std<span style="color: #990000">::</span>string<span style="color: #990000">&amp;</span> s<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">Integer</span> result <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> index   <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> s<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #FF0000">'-'</span> <span style="color: #990000">)</span>
               <span style="color: #990000">++</span>index<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span> index <span style="color: #990000">&lt;</span> s<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">)</span>
               result <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Integer</span></span><span style="color: #990000">(</span><span style="color: #993399">10</span> <span style="color: #990000">*</span> result <span style="color: #990000">+</span> s<span style="color: #990000">[</span>index<span style="color: #990000">++]</span> <span style="color: #990000">-</span> <span style="color: #FF0000">'0'</span><span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> s<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #FF0000">'-'</span> <span style="color: #990000">)</span>
               <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="color: #990000">-</span> result<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> result<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Integer</span><span style="color: #990000">&gt;</span>
     <span style="color: #008080">Integer</span> <span style="font-weight: bold"><span style="color: #000000">string2unsigned</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> std<span style="color: #990000">::</span>string<span style="color: #990000">&amp;</span> s<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">Integer</span> result <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="color: #008080">size_t</span> index   <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">while</span></span><span style="color: #990000">(</span> index <span style="color: #990000">&lt;</span> s<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">()</span> <span style="color: #990000">)</span>
               result <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Integer</span></span><span style="color: #990000">(</span><span style="color: #993399">10</span> <span style="color: #990000">*</span> result <span style="color: #990000">+</span> s<span style="color: #990000">[</span>index<span style="color: #990000">++]</span> <span style="color: #990000">-</span> <span style="color: #FF0000">'0'</span><span style="color: #990000">);</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> result<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Integer</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">signed_integer</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="color: #008080">Integer</span> max    <span style="color: #990000">=</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span>Integer<span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">();</span>
          std<span style="color: #990000">::</span><span style="color: #008080">string</span> s  <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">to_string</span></span><span style="color: #990000">(</span>max<span style="color: #990000">);</span>
          <span style="color: #008080">Integer</span> check  <span style="color: #990000">=</span> string2signed<span style="color: #990000">&lt;</span>Integer<span style="color: #990000">&gt;(</span>s<span style="color: #990000">);</span>
          ok            <span style="color: #990000">&amp;=</span> max <span style="color: #990000">==</span> check<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="color: #008080">Integer</span> min    <span style="color: #990000">=</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span>Integer<span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">min</span></span><span style="color: #990000">();</span>
          s              <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">to_string</span></span><span style="color: #990000">(</span>min<span style="color: #990000">);</span>
          check          <span style="color: #990000">=</span> string2signed<span style="color: #990000">&lt;</span>Integer<span style="color: #990000">&gt;(</span>s<span style="color: #990000">);</span>
          ok            <span style="color: #990000">&amp;=</span> min <span style="color: #990000">==</span> check<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Integer</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">unsigned_integer</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="color: #008080">Integer</span> max    <span style="color: #990000">=</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span>Integer<span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">max</span></span><span style="color: #990000">();</span>
          std<span style="color: #990000">::</span><span style="color: #008080">string</span> s  <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">to_string</span></span><span style="color: #990000">(</span>max<span style="color: #990000">);</span>
          <span style="color: #008080">Integer</span> check  <span style="color: #990000">=</span> string2unsigned<span style="color: #990000">&lt;</span>Integer<span style="color: #990000">&gt;(</span>s<span style="color: #990000">);</span>
          ok            <span style="color: #990000">&amp;=</span> max <span style="color: #990000">==</span> check<span style="color: #990000">;</span>
          ok            <span style="color: #990000">&amp;=</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span>Integer<span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">min</span></span><span style="color: #990000">()</span> <span style="color: #990000">==</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Float</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">floating</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span>  ok  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          <span style="color: #008080">Float</span> eps <span style="color: #990000">=</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span>Float<span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">epsilon</span></span><span style="color: #990000">();</span>
          <span style="color: #008080">Float</span> pi  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span> <span style="color: #993399">4.0</span> <span style="color: #990000">*</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">atan</span></span><span style="color: #990000">(</span><span style="color: #993399">1.0</span><span style="color: #990000">)</span> <span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          std<span style="color: #990000">::</span><span style="color: #008080">string</span> s <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">to_string</span></span><span style="color: #990000">(</span> pi <span style="color: #990000">);</span>
          <span style="color: #008080">Float</span> check   <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Float</span></span><span style="color: #990000">(</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">atof</span></span><span style="color: #990000">(</span> s<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">c_str</span></span><span style="color: #990000">()</span> <span style="color: #990000">)</span> <span style="color: #990000">);</span>
          ok           <span style="color: #990000">&amp;=</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span> check <span style="color: #990000">/</span> pi <span style="color: #990000">-</span> <span style="color: #993399">1.0</span> <span style="color: #990000">)</span> <span style="color: #990000">&lt;=</span> <span style="color: #993399">2.0</span> <span style="color: #990000">*</span> eps<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>

<span style="font-style: italic"><span style="color: #9A1900">// Examples with AD types</span></span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/cppad.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Base</span><span style="color: #990000">&gt;</span>
     <span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">ad_floating</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span>  ok  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
          <span style="color: #008080">Base</span> eps  <span style="color: #990000">=</span> std<span style="color: #990000">::</span>numeric_limits<span style="color: #990000">&lt;</span>Base<span style="color: #990000">&gt;::</span><span style="font-weight: bold"><span style="color: #000000">epsilon</span></span><span style="color: #990000">();</span>
          <span style="color: #008080">Base</span> pi   <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Base</span></span><span style="color: #990000">(</span> <span style="color: #993399">4.0</span> <span style="color: #990000">*</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">atan</span></span><span style="color: #990000">(</span><span style="color: #993399">1.0</span><span style="color: #990000">)</span> <span style="color: #990000">);</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          std<span style="color: #990000">::</span><span style="color: #008080">string</span> s <span style="color: #990000">=</span> CppAD<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">to_string</span></span><span style="color: #990000">(</span> CppAD<span style="color: #990000">::</span>AD<span style="color: #990000">&lt;</span>Base<span style="color: #990000">&gt;(</span> pi <span style="color: #990000">)</span> <span style="color: #990000">);</span>
          <span style="color: #008080">Base</span> check    <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Base</span></span><span style="color: #990000">(</span> std<span style="color: #990000">::</span><span style="font-weight: bold"><span style="color: #000000">atof</span></span><span style="color: #990000">(</span> s<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">c_str</span></span><span style="color: #990000">()</span> <span style="color: #990000">)</span> <span style="color: #990000">);</span>
          ok           <span style="color: #990000">&amp;=</span> <span style="font-weight: bold"><span style="color: #000000">fabs</span></span><span style="color: #990000">(</span> check <span style="color: #990000">/</span> pi <span style="color: #990000">-</span> <span style="font-weight: bold"><span style="color: #000000">Base</span></span><span style="color: #990000">(</span><span style="color: #993399">1.0</span><span style="color: #990000">)</span> <span style="color: #990000">)</span> <span style="color: #990000">&lt;=</span> <span style="font-weight: bold"><span style="color: #000000">Base</span></span><span style="color: #990000">(</span> <span style="color: #993399">2.0</span> <span style="color: #990000">)</span> <span style="color: #990000">*</span> eps<span style="color: #990000">;</span>
          <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>

<span style="font-style: italic"><span style="color: #9A1900">// Test driver</span></span>
<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">to_string</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>

     ok <span style="color: #990000">&amp;=</span> unsigned_integer<span style="color: #990000">&lt;</span><span style="color: #009900">unsigned</span> <span style="color: #009900">short</span><span style="color: #990000">&gt;();</span>
     ok <span style="color: #990000">&amp;=</span> signed_integer<span style="color: #990000">&lt;</span><span style="color: #009900">signed</span> <span style="color: #009900">int</span><span style="color: #990000">&gt;();</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     ok <span style="color: #990000">&amp;=</span> unsigned_integer<span style="color: #990000">&lt;</span><span style="color: #009900">unsigned</span> <span style="color: #009900">long</span><span style="color: #990000">&gt;();</span>
     ok <span style="color: #990000">&amp;=</span> signed_integer<span style="color: #990000">&lt;</span><span style="color: #009900">signed</span> <span style="color: #009900">long</span><span style="color: #990000">&gt;();</span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CPPAD_USE_CPLUSPLUS_2011
     ok <span style="color: #990000">&amp;=</span> unsigned_integer<span style="color: #990000">&lt;</span><span style="color: #009900">unsigned</span> <span style="color: #009900">long</span> <span style="color: #009900">long</span><span style="color: #990000">&gt;();</span>
     ok <span style="color: #990000">&amp;=</span> signed_integer<span style="color: #990000">&lt;</span><span style="color: #009900">signed</span> <span style="color: #009900">long</span> <span style="color: #009900">long</span><span style="color: #990000">&gt;();</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     ok <span style="color: #990000">&amp;=</span> floating<span style="color: #990000">&lt;</span><span style="color: #009900">float</span><span style="color: #990000">&gt;();</span>
     ok <span style="color: #990000">&amp;=</span> floating<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;();</span>
     ok <span style="color: #990000">&amp;=</span> floating<span style="color: #990000">&lt;</span><span style="color: #009900">long</span> <span style="color: #009900">double</span><span style="color: #990000">&gt;();</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     ok <span style="color: #990000">&amp;=</span> ad_floating<span style="color: #990000">&lt;</span><span style="color: #009900">float</span><span style="color: #990000">&gt;();</span>
     ok <span style="color: #990000">&amp;=</span> ad_floating<span style="color: #990000">&lt;</span><span style="color: #009900">double</span><span style="color: #990000">&gt;();</span>
     <span style="font-style: italic"><span style="color: #9A1900">//</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/utility/to_string.cpp

</body>
</html>
