<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>The CheckSimpleVector Function: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'/>
<meta name="description" id="description" content="The CheckSimpleVector Function: Example and Test"/>
<meta name="keywords" id="keywords" content=" the checksimplevector function: example test check Simplevector "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_check_simple_vector.cpp_xml.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"/></a>
</td>
<td><a href="checksimplevector.xml" target="_top">Prev</a>
</td><td><a href="nan.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>CheckSimpleVector</option>
<option>check_simple_vector.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>CheckSimpleVector-&gt;</option>
<option>check_simple_vector.cpp</option>
</select>
</td>
<td>check_simple_vector.cpp</td>
<td>Headings</td>
</tr></table><br/>


<center><b><big><big>The CheckSimpleVector Function: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;cppad/utility/check_simple_vector.hpp&gt;</span>
<span style="font-weight: bold"><span style="color: #000080"># include</span></span> <span style="color: #FF0000">&lt;iostream&gt;</span>


<span style="font-style: italic"><span style="color: #9A1900">// Chosing a value between 1 and 9 selects a simple vector properity to be</span></span>
<span style="font-style: italic"><span style="color: #9A1900">// omitted and result in an error message being generated</span></span>
<span style="font-weight: bold"><span style="color: #000080"># define</span></span> CppADMyVectorOmit <span style="color: #993399">0</span>

<span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------------------------</span></span>

<span style="font-style: italic"><span style="color: #9A1900">// example class used for non-constant elements (different from Scalar)</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Scalar</span><span style="color: #990000">&gt;</span>
<span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">MyElement</span> <span style="color: #FF0000">{</span>
<span style="font-weight: bold"><span style="color: #0000FF">private</span></span><span style="color: #990000">:</span>
     <span style="color: #008080">Scalar</span> <span style="color: #990000">*</span>element<span style="color: #990000">;</span>
<span style="font-weight: bold"><span style="color: #0000FF">public</span></span><span style="color: #990000">:</span>
     <span style="font-style: italic"><span style="color: #9A1900">// element constructor</span></span>
     <span style="font-weight: bold"><span style="color: #000000">MyElement</span></span><span style="color: #990000">(</span><span style="color: #008080">Scalar</span> <span style="color: #990000">*</span>e<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     element <span style="color: #990000">=</span> e<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// an example element assignment that returns void</span></span>
     <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="color: #990000">=</span> <span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Scalar</span> <span style="color: #990000">&amp;</span>s<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #990000">*</span>element <span style="color: #990000">=</span> s<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
     <span style="font-style: italic"><span style="color: #9A1900">// conversion to Scalar</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span> <span style="font-weight: bold"><span style="color: #000000">Scalar</span></span><span style="color: #990000">()</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="color: #990000">*</span>element<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span><span style="color: #990000">;</span>


<span style="font-style: italic"><span style="color: #9A1900">// example simple vector class</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Scalar</span><span style="color: #990000">&gt;</span>
<span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">MyVector</span> <span style="color: #FF0000">{</span>
<span style="font-weight: bold"><span style="color: #0000FF">private</span></span><span style="color: #990000">:</span>
     <span style="color: #008080">size_t</span> length<span style="color: #990000">;</span>
     Scalar <span style="color: #990000">*</span> data<span style="color: #990000">;</span>
<span style="font-weight: bold"><span style="color: #0000FF">public</span></span><span style="color: #990000">:</span>

<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">1</span>
     <span style="font-style: italic"><span style="color: #9A1900">// type of the elements in the vector</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">typedef</span></span> <span style="color: #008080">Scalar</span> value_type<span style="color: #990000">;</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">2</span>
     <span style="font-style: italic"><span style="color: #9A1900">// default constructor</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="font-weight: bold"><span style="color: #000000">MyVector</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span> <span style="color: #990000">:</span> <span style="font-weight: bold"><span style="color: #000000">length</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">)</span> <span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #000000">data</span></span><span style="color: #990000">(</span><span style="color: #993399">0</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">3</span>
     <span style="font-style: italic"><span style="color: #9A1900">// constructor with a specified size</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="font-weight: bold"><span style="color: #000000">MyVector</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> n<span style="color: #990000">)</span> <span style="color: #990000">:</span> <span style="font-weight: bold"><span style="color: #000000">length</span></span><span style="color: #990000">(</span>n<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> length <span style="color: #990000">==</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
               data <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>     data <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">new</span></span> Scalar<span style="color: #990000">[</span>length<span style="color: #990000">];</span>
     <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">4</span>
     <span style="font-style: italic"><span style="color: #9A1900">// copy constructor</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="font-weight: bold"><span style="color: #000000">MyVector</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyVector</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span> <span style="color: #990000">:</span> <span style="font-weight: bold"><span style="color: #000000">length</span></span><span style="color: #990000">(</span>x<span style="color: #990000">.</span>length<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> i<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> length <span style="color: #990000">==</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
               data <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>     data <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">new</span></span> Scalar<span style="color: #990000">[</span>length<span style="color: #990000">];</span>

          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> length<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               data<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> x<span style="color: #990000">.</span>data<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
     <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">4</span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">7</span>
     <span style="font-style: italic"><span style="color: #9A1900">// destructor (it is not safe to delete the pointer in cases 4 and 7)</span></span>
     <span style="color: #990000">~</span><span style="font-weight: bold"><span style="color: #000000">MyVector</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">delete</span></span> <span style="color: #990000">[]</span> data<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">5</span>
     <span style="font-style: italic"><span style="color: #9A1900">// size function</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="color: #008080">size_t</span> <span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> length<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">6</span>
     <span style="font-style: italic"><span style="color: #9A1900">// resize function</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> <span style="color: #009900">void</span> <span style="font-weight: bold"><span style="color: #000000">resize</span></span><span style="color: #990000">(</span><span style="color: #008080">size_t</span> n<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> length <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
               <span style="font-weight: bold"><span style="color: #0000FF">delete</span></span> <span style="color: #990000">[]</span> data<span style="color: #990000">;</span>
          length <span style="color: #990000">=</span> n<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">if</span></span><span style="color: #990000">(</span> length <span style="color: #990000">&gt;</span> <span style="color: #993399">0</span> <span style="color: #990000">)</span>
               data <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">new</span></span> Scalar<span style="color: #990000">[</span>length<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">else</span></span>     data <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">7</span>
     <span style="font-style: italic"><span style="color: #9A1900">// assignment operator</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">inline</span></span> MyVector <span style="color: #990000">&amp;</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span><span style="color: #990000">=(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">MyVector</span> <span style="color: #990000">&amp;</span>x<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="color: #008080">size_t</span> i<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> length<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               data<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> x<span style="color: #990000">.</span>data<span style="color: #990000">[</span>i<span style="color: #990000">];</span>
          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> <span style="color: #990000">*</span><span style="font-weight: bold"><span style="color: #0000FF">this</span></span><span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">8</span>
     <span style="font-style: italic"><span style="color: #9A1900">// non-constant element access</span></span>
     <span style="color: #008080">MyElement&lt;Scalar&gt;</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span><span style="color: #990000">[](</span><span style="color: #008080">size_t</span> i<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> data <span style="color: #990000">+</span> i<span style="color: #990000">;</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="font-weight: bold"><span style="color: #000080"># if</span></span> CppADMyVectorOmit <span style="color: #990000">!=</span> <span style="color: #993399">9</span>
     <span style="font-style: italic"><span style="color: #9A1900">// constant element access</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> Scalar <span style="color: #990000">&amp;</span> <span style="font-weight: bold"><span style="color: #0000FF">operator</span></span><span style="color: #990000">[](</span><span style="color: #008080">size_t</span> i<span style="color: #990000">)</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span>
     <span style="color: #FF0000">{</span>     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> data<span style="color: #990000">[</span>i<span style="color: #990000">];</span> <span style="color: #FF0000">}</span>
<span style="font-weight: bold"><span style="color: #000080"># endif</span></span>
<span style="color: #FF0000">}</span><span style="color: #990000">;</span>
<span style="font-style: italic"><span style="color: #9A1900">// -------------------------------------------------------------------------</span></span>

<span style="font-style: italic"><span style="color: #9A1900">/*</span></span>
<span style="font-style: italic"><span style="color: #9A1900">Compute r = a * v, where a is a scalar with same type as the elements of</span></span>
<span style="font-style: italic"><span style="color: #9A1900">the Simple Vector v. This routine uses the CheckSimpleVector function to ensure that</span></span>
<span style="font-style: italic"><span style="color: #9A1900">the types agree.</span></span>
<span style="font-style: italic"><span style="color: #9A1900">*/</span></span>
<span style="font-weight: bold"><span style="color: #0000FF">namespace</span></span> <span style="color: #FF0000">{</span> <span style="font-style: italic"><span style="color: #9A1900">// Empty namespace</span></span>
     <span style="font-weight: bold"><span style="color: #0000FF">template</span></span> <span style="color: #990000">&lt;</span><span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Scalar</span><span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">class</span></span> <span style="color: #008080">Vector</span><span style="color: #990000">&gt;</span>
     <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">Sscal</span></span><span style="color: #990000">(</span><span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Scalar</span> <span style="color: #990000">&amp;</span>a<span style="color: #990000">,</span> <span style="font-weight: bold"><span style="color: #0000FF">const</span></span> <span style="color: #008080">Vector</span> <span style="color: #990000">&amp;</span>v<span style="color: #990000">)</span>
     <span style="color: #FF0000">{</span>
          <span style="font-style: italic"><span style="color: #9A1900">// invoke CheckSimpleVector function</span></span>
          CppAD<span style="color: #990000">::</span>CheckSimpleVector<span style="color: #990000">&lt;</span>Scalar<span style="color: #990000">,</span> Vector<span style="color: #990000">&gt;();</span>

          <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> v<span style="color: #990000">.</span><span style="font-weight: bold"><span style="color: #000000">size</span></span><span style="color: #990000">();</span>
          <span style="color: #008080">Vector</span> <span style="font-weight: bold"><span style="color: #000000">r</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>

          <span style="color: #008080">size_t</span> i<span style="color: #990000">;</span>
          <span style="font-weight: bold"><span style="color: #0000FF">for</span></span><span style="color: #990000">(</span>i <span style="color: #990000">=</span> <span style="color: #993399">0</span><span style="color: #990000">;</span> i <span style="color: #990000">&lt;</span> n<span style="color: #990000">;</span> i<span style="color: #990000">++)</span>
               r<span style="color: #990000">[</span>i<span style="color: #990000">]</span> <span style="color: #990000">=</span> a <span style="color: #990000">*</span> v<span style="color: #990000">[</span>i<span style="color: #990000">];</span>

          <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> r<span style="color: #990000">;</span>
     <span style="color: #FF0000">}</span>
<span style="color: #FF0000">}</span>

<span style="color: #009900">bool</span> <span style="font-weight: bold"><span style="color: #000000">CheckSimpleVector</span></span><span style="color: #990000">(</span><span style="color: #009900">void</span><span style="color: #990000">)</span>
<span style="color: #FF0000">{</span>     <span style="color: #009900">bool</span> ok  <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #0000FF">true</span></span><span style="color: #990000">;</span>
     <span style="font-weight: bold"><span style="color: #0000FF">using</span></span> CppAD<span style="color: #990000">::</span>vector<span style="color: #990000">;</span>

     <span style="font-style: italic"><span style="color: #9A1900">// --------------------------------------------------------</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// If you change double to float in the next statement,</span></span>
     <span style="font-style: italic"><span style="color: #9A1900">// CheckSimpleVector will generate an error message at compile time.</span></span>
     <span style="color: #009900">double</span> a <span style="color: #990000">=</span> <span style="color: #993399">3</span><span style="color: #990000">.;</span>
     <span style="font-style: italic"><span style="color: #9A1900">// --------------------------------------------------------</span></span>

     <span style="color: #008080">size_t</span> n <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">;</span>
     <span style="color: #008080">MyVector&lt;double&gt;</span> <span style="font-weight: bold"><span style="color: #000000">v</span></span><span style="color: #990000">(</span>n<span style="color: #990000">);</span>
     v<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span>     <span style="color: #990000">=</span> <span style="color: #993399">1</span><span style="color: #990000">.;</span>
     v<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span>     <span style="color: #990000">=</span> <span style="color: #993399">2</span><span style="color: #990000">.;</span>
     <span style="color: #008080">MyVector&lt;double&gt;</span> r <span style="color: #990000">=</span> <span style="font-weight: bold"><span style="color: #000000">Sscal</span></span><span style="color: #990000">(</span>a<span style="color: #990000">,</span> v<span style="color: #990000">);</span>
     ok      <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>r<span style="color: #990000">[</span><span style="color: #993399">0</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #993399">3</span><span style="color: #990000">.);</span>
     ok      <span style="color: #990000">&amp;=</span> <span style="color: #990000">(</span>r<span style="color: #990000">[</span><span style="color: #993399">1</span><span style="color: #990000">]</span> <span style="color: #990000">==</span> <span style="color: #993399">6</span><span style="color: #990000">.);</span>

     <span style="font-weight: bold"><span style="color: #0000FF">return</span></span> ok<span style="color: #990000">;</span>
<span style="color: #FF0000">}</span>
</tt></pre>
</font></code>
<hr/>Input File: example/utility/check_simple_vector.cpp

</body>
</html>
